// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/service/spacemanager/flink_manage.proto

package com.dataomnis.gproto.service.pbsvcspace;

public final class PBSvcFlinkManage {
  private PBSvcFlinkManage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-proto/service/spacemanager/flink_manag" +
      "e.proto\022\014spacemanager\032\035proto/types/model" +
      "/empty.proto\032&proto/types/request/flink_" +
      "manage.proto\032\'proto/types/response/flink" +
      "_manage.proto2\300\007\n\013FlinkManage\022i\n\032ListAva" +
      "ilableFlinkVersions\022#.request.ListAvaila" +
      "bleFlinkVersions\032$.response.ListAvailabl" +
      "eFlinkVersions\"\000\022`\n\027DescribeFlinkCluster" +
      "API\022 .request.DescribeFlinkClusterAPI\032!." +
      "response.DescribeFlinkClusterAPI\"\000\022N\n\021Li" +
      "stFlinkClusters\022\032.request.ListFlinkClust" +
      "ers\032\033.response.ListFlinkClusters\"\000\022Q\n\022Cr" +
      "eateFlinkCluster\022\033.request.CreateFlinkCl" +
      "uster\032\034.response.CreateFlinkCluster\"\000\022W\n" +
      "\024DescribeFlinkCluster\022\035.request.Describe" +
      "FlinkCluster\032\036.response.DescribeFlinkClu" +
      "ster\"\000\022G\n\022UpdateFlinkCluster\022\033.request.U" +
      "pdateFlinkCluster\032\022.model.EmptyStruct\"\000\022" +
      "I\n\023DeleteFlinkClusters\022\034.request.DeleteF" +
      "linkClusters\032\022.model.EmptyStruct\"\000\022G\n\022St" +
      "artFlinkClusters\022\033.request.StartFlinkClu" +
      "sters\032\022.model.EmptyStruct\"\000\022E\n\021StopFlink" +
      "Clusters\022\032.request.StopFlinkClusters\032\022.m" +
      "odel.EmptyStruct\"\000\022i\n#UpdateFlinkCluster" +
      "StatusByScheduler\022,.request.UpdateFlinkC" +
      "lusterStatusByScheduler\032\022.model.EmptyStr" +
      "uct\"\000\022Y\n\033StopFlinkClusterByScheduler\022$.r" +
      "equest.StopFlinkClusterByScheduler\032\022.mod" +
      "el.EmptyStruct\"\000Bu\n\'com.dataomnis.gproto" +
      ".service.pbsvcspaceB\020PBSvcFlinkManageP\000Z" +
      "6github.com/DataWorkbench/gproto/xgo/ser" +
      "vice/pbsvcspaceb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.dataomnis.gproto.types.pbmodel.PBModelEmpty.getDescriptor(),
          com.dataomnis.gproto.types.pbrequest.PBRequestFlinkManage.getDescriptor(),
          com.dataomnis.gproto.types.pbresponse.PBResponseFlinkManage.getDescriptor(),
        });
    com.dataomnis.gproto.types.pbmodel.PBModelEmpty.getDescriptor();
    com.dataomnis.gproto.types.pbrequest.PBRequestFlinkManage.getDescriptor();
    com.dataomnis.gproto.types.pbresponse.PBResponseFlinkManage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
