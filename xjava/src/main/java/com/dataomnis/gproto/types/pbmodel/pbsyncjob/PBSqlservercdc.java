// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/types/model/syncjob/sqlservercdc.proto

package com.dataomnis.gproto.types.pbmodel.pbsyncjob;

public final class PBSqlservercdc {
  private PBSqlservercdc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SqlServerCdcSourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:model.SqlServerCdcSource)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * table list
     * &#64;inject_tag: json:"table_list"
     * </pre>
     *
     * <code>repeated string table_list = 1;</code>
     * @return A list containing the tableList.
     */
    java.util.List<java.lang.String>
        getTableListList();
    /**
     * <pre>
     * table list
     * &#64;inject_tag: json:"table_list"
     * </pre>
     *
     * <code>repeated string table_list = 1;</code>
     * @return The count of tableList.
     */
    int getTableListCount();
    /**
     * <pre>
     * table list
     * &#64;inject_tag: json:"table_list"
     * </pre>
     *
     * <code>repeated string table_list = 1;</code>
     * @param index The index of the element to return.
     * @return The tableList at the given index.
     */
    java.lang.String getTableList(int index);
    /**
     * <pre>
     * table list
     * &#64;inject_tag: json:"table_list"
     * </pre>
     *
     * <code>repeated string table_list = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tableList at the given index.
     */
    com.google.protobuf.ByteString
        getTableListBytes(int index);

    /**
     * <pre>
     * split update
     * &#64;inject_tag: json:"split_update" 
     * </pre>
     *
     * <code>bool split_update = 2;</code>
     * @return The splitUpdate.
     */
    boolean getSplitUpdate();

    /**
     * <pre>
     * paving data
     * &#64;inject_tag: json:"paving_data" 
     * </pre>
     *
     * <code>bool paving_data = 3;</code>
     * @return The pavingData.
     */
    boolean getPavingData();

    /**
     * <pre>
     * cat
     * &#64;inject_tag: json:"cat" 
     * </pre>
     *
     * <code>string cat = 4;</code>
     * @return The cat.
     */
    java.lang.String getCat();
    /**
     * <pre>
     * cat
     * &#64;inject_tag: json:"cat" 
     * </pre>
     *
     * <code>string cat = 4;</code>
     * @return The bytes for cat.
     */
    com.google.protobuf.ByteString
        getCatBytes();

    /**
     * <pre>
     * lsn
     * &#64;inject_tag: json:"lsn" 
     * </pre>
     *
     * <code>string lsn = 5;</code>
     * @return The lsn.
     */
    java.lang.String getLsn();
    /**
     * <pre>
     * lsn
     * &#64;inject_tag: json:"lsn" 
     * </pre>
     *
     * <code>string lsn = 5;</code>
     * @return The bytes for lsn.
     */
    com.google.protobuf.ByteString
        getLsnBytes();

    /**
     * <pre>
     * poll interval
     * &#64;inject_tag: json:"poll_interval" 
     * </pre>
     *
     * <code>int64 poll_interval = 6;</code>
     * @return The pollInterval.
     */
    long getPollInterval();

    /**
     * <pre>
     * database name
     * &#64;inject_tag: json:"database_name" 
     * </pre>
     *
     * <code>string database_name = 7;</code>
     * @return The databaseName.
     */
    java.lang.String getDatabaseName();
    /**
     * <pre>
     * database name
     * &#64;inject_tag: json:"database_name" 
     * </pre>
     *
     * <code>string database_name = 7;</code>
     * @return The bytes for databaseName.
     */
    com.google.protobuf.ByteString
        getDatabaseNameBytes();
  }
  /**
   * Protobuf type {@code model.SqlServerCdcSource}
   */
  public static final class SqlServerCdcSource extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:model.SqlServerCdcSource)
      SqlServerCdcSourceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SqlServerCdcSource.newBuilder() to construct.
    private SqlServerCdcSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SqlServerCdcSource() {
      tableList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      cat_ = "";
      lsn_ = "";
      databaseName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SqlServerCdcSource();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SqlServerCdcSource(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tableList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tableList_.add(s);
              break;
            }
            case 16: {

              splitUpdate_ = input.readBool();
              break;
            }
            case 24: {

              pavingData_ = input.readBool();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              cat_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              lsn_ = s;
              break;
            }
            case 48: {

              pollInterval_ = input.readInt64();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              databaseName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tableList_ = tableList_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.internal_static_model_SqlServerCdcSource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.internal_static_model_SqlServerCdcSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource.class, com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource.Builder.class);
    }

    public static final int TABLE_LIST_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList tableList_;
    /**
     * <pre>
     * table list
     * &#64;inject_tag: json:"table_list"
     * </pre>
     *
     * <code>repeated string table_list = 1;</code>
     * @return A list containing the tableList.
     */
    public com.google.protobuf.ProtocolStringList
        getTableListList() {
      return tableList_;
    }
    /**
     * <pre>
     * table list
     * &#64;inject_tag: json:"table_list"
     * </pre>
     *
     * <code>repeated string table_list = 1;</code>
     * @return The count of tableList.
     */
    public int getTableListCount() {
      return tableList_.size();
    }
    /**
     * <pre>
     * table list
     * &#64;inject_tag: json:"table_list"
     * </pre>
     *
     * <code>repeated string table_list = 1;</code>
     * @param index The index of the element to return.
     * @return The tableList at the given index.
     */
    public java.lang.String getTableList(int index) {
      return tableList_.get(index);
    }
    /**
     * <pre>
     * table list
     * &#64;inject_tag: json:"table_list"
     * </pre>
     *
     * <code>repeated string table_list = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tableList at the given index.
     */
    public com.google.protobuf.ByteString
        getTableListBytes(int index) {
      return tableList_.getByteString(index);
    }

    public static final int SPLIT_UPDATE_FIELD_NUMBER = 2;
    private boolean splitUpdate_;
    /**
     * <pre>
     * split update
     * &#64;inject_tag: json:"split_update" 
     * </pre>
     *
     * <code>bool split_update = 2;</code>
     * @return The splitUpdate.
     */
    @java.lang.Override
    public boolean getSplitUpdate() {
      return splitUpdate_;
    }

    public static final int PAVING_DATA_FIELD_NUMBER = 3;
    private boolean pavingData_;
    /**
     * <pre>
     * paving data
     * &#64;inject_tag: json:"paving_data" 
     * </pre>
     *
     * <code>bool paving_data = 3;</code>
     * @return The pavingData.
     */
    @java.lang.Override
    public boolean getPavingData() {
      return pavingData_;
    }

    public static final int CAT_FIELD_NUMBER = 4;
    private volatile java.lang.Object cat_;
    /**
     * <pre>
     * cat
     * &#64;inject_tag: json:"cat" 
     * </pre>
     *
     * <code>string cat = 4;</code>
     * @return The cat.
     */
    @java.lang.Override
    public java.lang.String getCat() {
      java.lang.Object ref = cat_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cat_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * cat
     * &#64;inject_tag: json:"cat" 
     * </pre>
     *
     * <code>string cat = 4;</code>
     * @return The bytes for cat.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCatBytes() {
      java.lang.Object ref = cat_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cat_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LSN_FIELD_NUMBER = 5;
    private volatile java.lang.Object lsn_;
    /**
     * <pre>
     * lsn
     * &#64;inject_tag: json:"lsn" 
     * </pre>
     *
     * <code>string lsn = 5;</code>
     * @return The lsn.
     */
    @java.lang.Override
    public java.lang.String getLsn() {
      java.lang.Object ref = lsn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lsn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * lsn
     * &#64;inject_tag: json:"lsn" 
     * </pre>
     *
     * <code>string lsn = 5;</code>
     * @return The bytes for lsn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLsnBytes() {
      java.lang.Object ref = lsn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lsn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POLL_INTERVAL_FIELD_NUMBER = 6;
    private long pollInterval_;
    /**
     * <pre>
     * poll interval
     * &#64;inject_tag: json:"poll_interval" 
     * </pre>
     *
     * <code>int64 poll_interval = 6;</code>
     * @return The pollInterval.
     */
    @java.lang.Override
    public long getPollInterval() {
      return pollInterval_;
    }

    public static final int DATABASE_NAME_FIELD_NUMBER = 7;
    private volatile java.lang.Object databaseName_;
    /**
     * <pre>
     * database name
     * &#64;inject_tag: json:"database_name" 
     * </pre>
     *
     * <code>string database_name = 7;</code>
     * @return The databaseName.
     */
    @java.lang.Override
    public java.lang.String getDatabaseName() {
      java.lang.Object ref = databaseName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        databaseName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * database name
     * &#64;inject_tag: json:"database_name" 
     * </pre>
     *
     * <code>string database_name = 7;</code>
     * @return The bytes for databaseName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDatabaseNameBytes() {
      java.lang.Object ref = databaseName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        databaseName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tableList_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableList_.getRaw(i));
      }
      if (splitUpdate_ != false) {
        output.writeBool(2, splitUpdate_);
      }
      if (pavingData_ != false) {
        output.writeBool(3, pavingData_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cat_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, cat_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(lsn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, lsn_);
      }
      if (pollInterval_ != 0L) {
        output.writeInt64(6, pollInterval_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(databaseName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, databaseName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < tableList_.size(); i++) {
          dataSize += computeStringSizeNoTag(tableList_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTableListList().size();
      }
      if (splitUpdate_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, splitUpdate_);
      }
      if (pavingData_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, pavingData_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cat_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, cat_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(lsn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, lsn_);
      }
      if (pollInterval_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, pollInterval_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(databaseName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, databaseName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource)) {
        return super.equals(obj);
      }
      com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource other = (com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource) obj;

      if (!getTableListList()
          .equals(other.getTableListList())) return false;
      if (getSplitUpdate()
          != other.getSplitUpdate()) return false;
      if (getPavingData()
          != other.getPavingData()) return false;
      if (!getCat()
          .equals(other.getCat())) return false;
      if (!getLsn()
          .equals(other.getLsn())) return false;
      if (getPollInterval()
          != other.getPollInterval()) return false;
      if (!getDatabaseName()
          .equals(other.getDatabaseName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTableListCount() > 0) {
        hash = (37 * hash) + TABLE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getTableListList().hashCode();
      }
      hash = (37 * hash) + SPLIT_UPDATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSplitUpdate());
      hash = (37 * hash) + PAVING_DATA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPavingData());
      hash = (37 * hash) + CAT_FIELD_NUMBER;
      hash = (53 * hash) + getCat().hashCode();
      hash = (37 * hash) + LSN_FIELD_NUMBER;
      hash = (53 * hash) + getLsn().hashCode();
      hash = (37 * hash) + POLL_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPollInterval());
      hash = (37 * hash) + DATABASE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDatabaseName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code model.SqlServerCdcSource}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:model.SqlServerCdcSource)
        com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.internal_static_model_SqlServerCdcSource_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.internal_static_model_SqlServerCdcSource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource.class, com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource.Builder.class);
      }

      // Construct using com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tableList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        splitUpdate_ = false;

        pavingData_ = false;

        cat_ = "";

        lsn_ = "";

        pollInterval_ = 0L;

        databaseName_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.internal_static_model_SqlServerCdcSource_descriptor;
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource getDefaultInstanceForType() {
        return com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource.getDefaultInstance();
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource build() {
        com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource buildPartial() {
        com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource result = new com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          tableList_ = tableList_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tableList_ = tableList_;
        result.splitUpdate_ = splitUpdate_;
        result.pavingData_ = pavingData_;
        result.cat_ = cat_;
        result.lsn_ = lsn_;
        result.pollInterval_ = pollInterval_;
        result.databaseName_ = databaseName_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource) {
          return mergeFrom((com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource other) {
        if (other == com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource.getDefaultInstance()) return this;
        if (!other.tableList_.isEmpty()) {
          if (tableList_.isEmpty()) {
            tableList_ = other.tableList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTableListIsMutable();
            tableList_.addAll(other.tableList_);
          }
          onChanged();
        }
        if (other.getSplitUpdate() != false) {
          setSplitUpdate(other.getSplitUpdate());
        }
        if (other.getPavingData() != false) {
          setPavingData(other.getPavingData());
        }
        if (!other.getCat().isEmpty()) {
          cat_ = other.cat_;
          onChanged();
        }
        if (!other.getLsn().isEmpty()) {
          lsn_ = other.lsn_;
          onChanged();
        }
        if (other.getPollInterval() != 0L) {
          setPollInterval(other.getPollInterval());
        }
        if (!other.getDatabaseName().isEmpty()) {
          databaseName_ = other.databaseName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList tableList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTableListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tableList_ = new com.google.protobuf.LazyStringArrayList(tableList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * table list
       * &#64;inject_tag: json:"table_list"
       * </pre>
       *
       * <code>repeated string table_list = 1;</code>
       * @return A list containing the tableList.
       */
      public com.google.protobuf.ProtocolStringList
          getTableListList() {
        return tableList_.getUnmodifiableView();
      }
      /**
       * <pre>
       * table list
       * &#64;inject_tag: json:"table_list"
       * </pre>
       *
       * <code>repeated string table_list = 1;</code>
       * @return The count of tableList.
       */
      public int getTableListCount() {
        return tableList_.size();
      }
      /**
       * <pre>
       * table list
       * &#64;inject_tag: json:"table_list"
       * </pre>
       *
       * <code>repeated string table_list = 1;</code>
       * @param index The index of the element to return.
       * @return The tableList at the given index.
       */
      public java.lang.String getTableList(int index) {
        return tableList_.get(index);
      }
      /**
       * <pre>
       * table list
       * &#64;inject_tag: json:"table_list"
       * </pre>
       *
       * <code>repeated string table_list = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tableList at the given index.
       */
      public com.google.protobuf.ByteString
          getTableListBytes(int index) {
        return tableList_.getByteString(index);
      }
      /**
       * <pre>
       * table list
       * &#64;inject_tag: json:"table_list"
       * </pre>
       *
       * <code>repeated string table_list = 1;</code>
       * @param index The index to set the value at.
       * @param value The tableList to set.
       * @return This builder for chaining.
       */
      public Builder setTableList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTableListIsMutable();
        tableList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * table list
       * &#64;inject_tag: json:"table_list"
       * </pre>
       *
       * <code>repeated string table_list = 1;</code>
       * @param value The tableList to add.
       * @return This builder for chaining.
       */
      public Builder addTableList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTableListIsMutable();
        tableList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * table list
       * &#64;inject_tag: json:"table_list"
       * </pre>
       *
       * <code>repeated string table_list = 1;</code>
       * @param values The tableList to add.
       * @return This builder for chaining.
       */
      public Builder addAllTableList(
          java.lang.Iterable<java.lang.String> values) {
        ensureTableListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tableList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * table list
       * &#64;inject_tag: json:"table_list"
       * </pre>
       *
       * <code>repeated string table_list = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTableList() {
        tableList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * table list
       * &#64;inject_tag: json:"table_list"
       * </pre>
       *
       * <code>repeated string table_list = 1;</code>
       * @param value The bytes of the tableList to add.
       * @return This builder for chaining.
       */
      public Builder addTableListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTableListIsMutable();
        tableList_.add(value);
        onChanged();
        return this;
      }

      private boolean splitUpdate_ ;
      /**
       * <pre>
       * split update
       * &#64;inject_tag: json:"split_update" 
       * </pre>
       *
       * <code>bool split_update = 2;</code>
       * @return The splitUpdate.
       */
      @java.lang.Override
      public boolean getSplitUpdate() {
        return splitUpdate_;
      }
      /**
       * <pre>
       * split update
       * &#64;inject_tag: json:"split_update" 
       * </pre>
       *
       * <code>bool split_update = 2;</code>
       * @param value The splitUpdate to set.
       * @return This builder for chaining.
       */
      public Builder setSplitUpdate(boolean value) {
        
        splitUpdate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * split update
       * &#64;inject_tag: json:"split_update" 
       * </pre>
       *
       * <code>bool split_update = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSplitUpdate() {
        
        splitUpdate_ = false;
        onChanged();
        return this;
      }

      private boolean pavingData_ ;
      /**
       * <pre>
       * paving data
       * &#64;inject_tag: json:"paving_data" 
       * </pre>
       *
       * <code>bool paving_data = 3;</code>
       * @return The pavingData.
       */
      @java.lang.Override
      public boolean getPavingData() {
        return pavingData_;
      }
      /**
       * <pre>
       * paving data
       * &#64;inject_tag: json:"paving_data" 
       * </pre>
       *
       * <code>bool paving_data = 3;</code>
       * @param value The pavingData to set.
       * @return This builder for chaining.
       */
      public Builder setPavingData(boolean value) {
        
        pavingData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * paving data
       * &#64;inject_tag: json:"paving_data" 
       * </pre>
       *
       * <code>bool paving_data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPavingData() {
        
        pavingData_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object cat_ = "";
      /**
       * <pre>
       * cat
       * &#64;inject_tag: json:"cat" 
       * </pre>
       *
       * <code>string cat = 4;</code>
       * @return The cat.
       */
      public java.lang.String getCat() {
        java.lang.Object ref = cat_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cat_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * cat
       * &#64;inject_tag: json:"cat" 
       * </pre>
       *
       * <code>string cat = 4;</code>
       * @return The bytes for cat.
       */
      public com.google.protobuf.ByteString
          getCatBytes() {
        java.lang.Object ref = cat_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cat_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * cat
       * &#64;inject_tag: json:"cat" 
       * </pre>
       *
       * <code>string cat = 4;</code>
       * @param value The cat to set.
       * @return This builder for chaining.
       */
      public Builder setCat(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cat
       * &#64;inject_tag: json:"cat" 
       * </pre>
       *
       * <code>string cat = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCat() {
        
        cat_ = getDefaultInstance().getCat();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cat
       * &#64;inject_tag: json:"cat" 
       * </pre>
       *
       * <code>string cat = 4;</code>
       * @param value The bytes for cat to set.
       * @return This builder for chaining.
       */
      public Builder setCatBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cat_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lsn_ = "";
      /**
       * <pre>
       * lsn
       * &#64;inject_tag: json:"lsn" 
       * </pre>
       *
       * <code>string lsn = 5;</code>
       * @return The lsn.
       */
      public java.lang.String getLsn() {
        java.lang.Object ref = lsn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lsn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * lsn
       * &#64;inject_tag: json:"lsn" 
       * </pre>
       *
       * <code>string lsn = 5;</code>
       * @return The bytes for lsn.
       */
      public com.google.protobuf.ByteString
          getLsnBytes() {
        java.lang.Object ref = lsn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lsn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * lsn
       * &#64;inject_tag: json:"lsn" 
       * </pre>
       *
       * <code>string lsn = 5;</code>
       * @param value The lsn to set.
       * @return This builder for chaining.
       */
      public Builder setLsn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lsn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lsn
       * &#64;inject_tag: json:"lsn" 
       * </pre>
       *
       * <code>string lsn = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLsn() {
        
        lsn_ = getDefaultInstance().getLsn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lsn
       * &#64;inject_tag: json:"lsn" 
       * </pre>
       *
       * <code>string lsn = 5;</code>
       * @param value The bytes for lsn to set.
       * @return This builder for chaining.
       */
      public Builder setLsnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lsn_ = value;
        onChanged();
        return this;
      }

      private long pollInterval_ ;
      /**
       * <pre>
       * poll interval
       * &#64;inject_tag: json:"poll_interval" 
       * </pre>
       *
       * <code>int64 poll_interval = 6;</code>
       * @return The pollInterval.
       */
      @java.lang.Override
      public long getPollInterval() {
        return pollInterval_;
      }
      /**
       * <pre>
       * poll interval
       * &#64;inject_tag: json:"poll_interval" 
       * </pre>
       *
       * <code>int64 poll_interval = 6;</code>
       * @param value The pollInterval to set.
       * @return This builder for chaining.
       */
      public Builder setPollInterval(long value) {
        
        pollInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * poll interval
       * &#64;inject_tag: json:"poll_interval" 
       * </pre>
       *
       * <code>int64 poll_interval = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPollInterval() {
        
        pollInterval_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object databaseName_ = "";
      /**
       * <pre>
       * database name
       * &#64;inject_tag: json:"database_name" 
       * </pre>
       *
       * <code>string database_name = 7;</code>
       * @return The databaseName.
       */
      public java.lang.String getDatabaseName() {
        java.lang.Object ref = databaseName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          databaseName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * database name
       * &#64;inject_tag: json:"database_name" 
       * </pre>
       *
       * <code>string database_name = 7;</code>
       * @return The bytes for databaseName.
       */
      public com.google.protobuf.ByteString
          getDatabaseNameBytes() {
        java.lang.Object ref = databaseName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          databaseName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * database name
       * &#64;inject_tag: json:"database_name" 
       * </pre>
       *
       * <code>string database_name = 7;</code>
       * @param value The databaseName to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        databaseName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * database name
       * &#64;inject_tag: json:"database_name" 
       * </pre>
       *
       * <code>string database_name = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDatabaseName() {
        
        databaseName_ = getDefaultInstance().getDatabaseName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * database name
       * &#64;inject_tag: json:"database_name" 
       * </pre>
       *
       * <code>string database_name = 7;</code>
       * @param value The bytes for databaseName to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        databaseName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:model.SqlServerCdcSource)
    }

    // @@protoc_insertion_point(class_scope:model.SqlServerCdcSource)
    private static final com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource();
    }

    public static com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SqlServerCdcSource>
        PARSER = new com.google.protobuf.AbstractParser<SqlServerCdcSource>() {
      @java.lang.Override
      public SqlServerCdcSource parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SqlServerCdcSource(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SqlServerCdcSource> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SqlServerCdcSource> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dataomnis.gproto.types.pbmodel.pbsyncjob.PBSqlservercdc.SqlServerCdcSource getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_model_SqlServerCdcSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_model_SqlServerCdcSource_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,proto/types/model/syncjob/sqlservercdc" +
      ".proto\022\005model\032/github.com/yu31/protoc-pl" +
      "ugin/proto/gosql.proto\"\243\001\n\022SqlServerCdcS" +
      "ource\022\022\n\ntable_list\030\001 \003(\t\022\024\n\014split_updat" +
      "e\030\002 \001(\010\022\023\n\013paving_data\030\003 \001(\010\022\013\n\003cat\030\004 \001(" +
      "\t\022\013\n\003lsn\030\005 \001(\t\022\025\n\rpoll_interval\030\006 \001(\003\022\025\n" +
      "\rdatabase_name\030\007 \001(\t:\006\312\262\004\002\n\000B}\n,com.data" +
      "omnis.gproto.types.pbmodel.pbsyncjobB\016PB" +
      "SqlservercdcP\000Z;github.com/DataWorkbench" +
      "/gproto/xgo/types/pbmodel/pbsyncjobb\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.github.yu31.protoc.pb.pbgosql.PBGoSQL.getDescriptor(),
        });
    internal_static_model_SqlServerCdcSource_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_model_SqlServerCdcSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_model_SqlServerCdcSource_descriptor,
        new java.lang.String[] { "TableList", "SplitUpdate", "PavingData", "Cat", "Lsn", "PollInterval", "DatabaseName", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.github.yu31.protoc.pb.pbgosql.PBGoSQL.serialize);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.github.yu31.protoc.pb.pbgosql.PBGoSQL.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
