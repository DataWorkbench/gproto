// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/types/request/sync_developer.proto

package com.dataomnis.gproto.types.pbrequest;

public final class PBRequestSyncDeveloper {
  private PBRequestSyncDeveloper() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SubmitSyncJobToFlinkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:request.SubmitSyncJobToFlink)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The Flink's job id.
     * &#64;inject_tag: json:"flink_id"
     * </pre>
     *
     * <code>string flink_id = 1 [(.validator.field) = { ... }</code>
     * @return The flinkId.
     */
    java.lang.String getFlinkId();
    /**
     * <pre>
     * The Flink's job id.
     * &#64;inject_tag: json:"flink_id"
     * </pre>
     *
     * <code>string flink_id = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for flinkId.
     */
    com.google.protobuf.ByteString
        getFlinkIdBytes();

    /**
     * <pre>
     * The internal access address of flink cluster.
     * &#64;inject_tag: json:"flink_url"
     * </pre>
     *
     * <code>string flink_url = 2 [(.validator.field) = { ... }</code>
     * @return The flinkUrl.
     */
    java.lang.String getFlinkUrl();
    /**
     * <pre>
     * The internal access address of flink cluster.
     * &#64;inject_tag: json:"flink_url"
     * </pre>
     *
     * <code>string flink_url = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for flinkUrl.
     */
    com.google.protobuf.ByteString
        getFlinkUrlBytes();

    /**
     * <pre>
     * The version of flink cluster.
     * &#64;inject_tag: json:"flink_version"
     * </pre>
     *
     * <code>string flink_version = 3 [(.validator.field) = { ... }</code>
     * @return The flinkVersion.
     */
    java.lang.String getFlinkVersion();
    /**
     * <pre>
     * The version of flink cluster.
     * &#64;inject_tag: json:"flink_version"
     * </pre>
     *
     * <code>string flink_version = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for flinkVersion.
     */
    com.google.protobuf.ByteString
        getFlinkVersionBytes();

    /**
     * <pre>
     * The content of sync job that format by JSON.
     * &#64;inject_tag: json:"json_content"
     * </pre>
     *
     * <code>string json_content = 4 [(.validator.field) = { ... }</code>
     * @return The jsonContent.
     */
    java.lang.String getJsonContent();
    /**
     * <pre>
     * The content of sync job that format by JSON.
     * &#64;inject_tag: json:"json_content"
     * </pre>
     *
     * <code>string json_content = 4 [(.validator.field) = { ... }</code>
     * @return The bytes for jsonContent.
     */
    com.google.protobuf.ByteString
        getJsonContentBytes();
  }
  /**
   * <pre>
   * SubmitSyncJobToFlink used as a request parameters for RPC.
   * </pre>
   *
   * Protobuf type {@code request.SubmitSyncJobToFlink}
   */
  public static final class SubmitSyncJobToFlink extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:request.SubmitSyncJobToFlink)
      SubmitSyncJobToFlinkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubmitSyncJobToFlink.newBuilder() to construct.
    private SubmitSyncJobToFlink(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubmitSyncJobToFlink() {
      flinkId_ = "";
      flinkUrl_ = "";
      flinkVersion_ = "";
      jsonContent_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SubmitSyncJobToFlink();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubmitSyncJobToFlink(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              flinkId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              flinkUrl_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              flinkVersion_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              jsonContent_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.internal_static_request_SubmitSyncJobToFlink_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.internal_static_request_SubmitSyncJobToFlink_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink.class, com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink.Builder.class);
    }

    public static final int FLINK_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object flinkId_;
    /**
     * <pre>
     * The Flink's job id.
     * &#64;inject_tag: json:"flink_id"
     * </pre>
     *
     * <code>string flink_id = 1 [(.validator.field) = { ... }</code>
     * @return The flinkId.
     */
    @java.lang.Override
    public java.lang.String getFlinkId() {
      java.lang.Object ref = flinkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flinkId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The Flink's job id.
     * &#64;inject_tag: json:"flink_id"
     * </pre>
     *
     * <code>string flink_id = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for flinkId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFlinkIdBytes() {
      java.lang.Object ref = flinkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flinkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLINK_URL_FIELD_NUMBER = 2;
    private volatile java.lang.Object flinkUrl_;
    /**
     * <pre>
     * The internal access address of flink cluster.
     * &#64;inject_tag: json:"flink_url"
     * </pre>
     *
     * <code>string flink_url = 2 [(.validator.field) = { ... }</code>
     * @return The flinkUrl.
     */
    @java.lang.Override
    public java.lang.String getFlinkUrl() {
      java.lang.Object ref = flinkUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flinkUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The internal access address of flink cluster.
     * &#64;inject_tag: json:"flink_url"
     * </pre>
     *
     * <code>string flink_url = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for flinkUrl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFlinkUrlBytes() {
      java.lang.Object ref = flinkUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flinkUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLINK_VERSION_FIELD_NUMBER = 3;
    private volatile java.lang.Object flinkVersion_;
    /**
     * <pre>
     * The version of flink cluster.
     * &#64;inject_tag: json:"flink_version"
     * </pre>
     *
     * <code>string flink_version = 3 [(.validator.field) = { ... }</code>
     * @return The flinkVersion.
     */
    @java.lang.Override
    public java.lang.String getFlinkVersion() {
      java.lang.Object ref = flinkVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flinkVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The version of flink cluster.
     * &#64;inject_tag: json:"flink_version"
     * </pre>
     *
     * <code>string flink_version = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for flinkVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFlinkVersionBytes() {
      java.lang.Object ref = flinkVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flinkVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JSON_CONTENT_FIELD_NUMBER = 4;
    private volatile java.lang.Object jsonContent_;
    /**
     * <pre>
     * The content of sync job that format by JSON.
     * &#64;inject_tag: json:"json_content"
     * </pre>
     *
     * <code>string json_content = 4 [(.validator.field) = { ... }</code>
     * @return The jsonContent.
     */
    @java.lang.Override
    public java.lang.String getJsonContent() {
      java.lang.Object ref = jsonContent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jsonContent_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The content of sync job that format by JSON.
     * &#64;inject_tag: json:"json_content"
     * </pre>
     *
     * <code>string json_content = 4 [(.validator.field) = { ... }</code>
     * @return The bytes for jsonContent.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getJsonContentBytes() {
      java.lang.Object ref = jsonContent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jsonContent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(flinkId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, flinkId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(flinkUrl_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, flinkUrl_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(flinkVersion_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, flinkVersion_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(jsonContent_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, jsonContent_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(flinkId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, flinkId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(flinkUrl_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, flinkUrl_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(flinkVersion_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, flinkVersion_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(jsonContent_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, jsonContent_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink)) {
        return super.equals(obj);
      }
      com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink other = (com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink) obj;

      if (!getFlinkId()
          .equals(other.getFlinkId())) return false;
      if (!getFlinkUrl()
          .equals(other.getFlinkUrl())) return false;
      if (!getFlinkVersion()
          .equals(other.getFlinkVersion())) return false;
      if (!getJsonContent()
          .equals(other.getJsonContent())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FLINK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFlinkId().hashCode();
      hash = (37 * hash) + FLINK_URL_FIELD_NUMBER;
      hash = (53 * hash) + getFlinkUrl().hashCode();
      hash = (37 * hash) + FLINK_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getFlinkVersion().hashCode();
      hash = (37 * hash) + JSON_CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getJsonContent().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SubmitSyncJobToFlink used as a request parameters for RPC.
     * </pre>
     *
     * Protobuf type {@code request.SubmitSyncJobToFlink}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:request.SubmitSyncJobToFlink)
        com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlinkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.internal_static_request_SubmitSyncJobToFlink_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.internal_static_request_SubmitSyncJobToFlink_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink.class, com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink.Builder.class);
      }

      // Construct using com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        flinkId_ = "";

        flinkUrl_ = "";

        flinkVersion_ = "";

        jsonContent_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.internal_static_request_SubmitSyncJobToFlink_descriptor;
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink getDefaultInstanceForType() {
        return com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink.getDefaultInstance();
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink build() {
        com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink buildPartial() {
        com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink result = new com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink(this);
        result.flinkId_ = flinkId_;
        result.flinkUrl_ = flinkUrl_;
        result.flinkVersion_ = flinkVersion_;
        result.jsonContent_ = jsonContent_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink) {
          return mergeFrom((com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink other) {
        if (other == com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink.getDefaultInstance()) return this;
        if (!other.getFlinkId().isEmpty()) {
          flinkId_ = other.flinkId_;
          onChanged();
        }
        if (!other.getFlinkUrl().isEmpty()) {
          flinkUrl_ = other.flinkUrl_;
          onChanged();
        }
        if (!other.getFlinkVersion().isEmpty()) {
          flinkVersion_ = other.flinkVersion_;
          onChanged();
        }
        if (!other.getJsonContent().isEmpty()) {
          jsonContent_ = other.jsonContent_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object flinkId_ = "";
      /**
       * <pre>
       * The Flink's job id.
       * &#64;inject_tag: json:"flink_id"
       * </pre>
       *
       * <code>string flink_id = 1 [(.validator.field) = { ... }</code>
       * @return The flinkId.
       */
      public java.lang.String getFlinkId() {
        java.lang.Object ref = flinkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          flinkId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The Flink's job id.
       * &#64;inject_tag: json:"flink_id"
       * </pre>
       *
       * <code>string flink_id = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for flinkId.
       */
      public com.google.protobuf.ByteString
          getFlinkIdBytes() {
        java.lang.Object ref = flinkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          flinkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The Flink's job id.
       * &#64;inject_tag: json:"flink_id"
       * </pre>
       *
       * <code>string flink_id = 1 [(.validator.field) = { ... }</code>
       * @param value The flinkId to set.
       * @return This builder for chaining.
       */
      public Builder setFlinkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        flinkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Flink's job id.
       * &#64;inject_tag: json:"flink_id"
       * </pre>
       *
       * <code>string flink_id = 1 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFlinkId() {
        
        flinkId_ = getDefaultInstance().getFlinkId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Flink's job id.
       * &#64;inject_tag: json:"flink_id"
       * </pre>
       *
       * <code>string flink_id = 1 [(.validator.field) = { ... }</code>
       * @param value The bytes for flinkId to set.
       * @return This builder for chaining.
       */
      public Builder setFlinkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        flinkId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object flinkUrl_ = "";
      /**
       * <pre>
       * The internal access address of flink cluster.
       * &#64;inject_tag: json:"flink_url"
       * </pre>
       *
       * <code>string flink_url = 2 [(.validator.field) = { ... }</code>
       * @return The flinkUrl.
       */
      public java.lang.String getFlinkUrl() {
        java.lang.Object ref = flinkUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          flinkUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The internal access address of flink cluster.
       * &#64;inject_tag: json:"flink_url"
       * </pre>
       *
       * <code>string flink_url = 2 [(.validator.field) = { ... }</code>
       * @return The bytes for flinkUrl.
       */
      public com.google.protobuf.ByteString
          getFlinkUrlBytes() {
        java.lang.Object ref = flinkUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          flinkUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The internal access address of flink cluster.
       * &#64;inject_tag: json:"flink_url"
       * </pre>
       *
       * <code>string flink_url = 2 [(.validator.field) = { ... }</code>
       * @param value The flinkUrl to set.
       * @return This builder for chaining.
       */
      public Builder setFlinkUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        flinkUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The internal access address of flink cluster.
       * &#64;inject_tag: json:"flink_url"
       * </pre>
       *
       * <code>string flink_url = 2 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFlinkUrl() {
        
        flinkUrl_ = getDefaultInstance().getFlinkUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The internal access address of flink cluster.
       * &#64;inject_tag: json:"flink_url"
       * </pre>
       *
       * <code>string flink_url = 2 [(.validator.field) = { ... }</code>
       * @param value The bytes for flinkUrl to set.
       * @return This builder for chaining.
       */
      public Builder setFlinkUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        flinkUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object flinkVersion_ = "";
      /**
       * <pre>
       * The version of flink cluster.
       * &#64;inject_tag: json:"flink_version"
       * </pre>
       *
       * <code>string flink_version = 3 [(.validator.field) = { ... }</code>
       * @return The flinkVersion.
       */
      public java.lang.String getFlinkVersion() {
        java.lang.Object ref = flinkVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          flinkVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The version of flink cluster.
       * &#64;inject_tag: json:"flink_version"
       * </pre>
       *
       * <code>string flink_version = 3 [(.validator.field) = { ... }</code>
       * @return The bytes for flinkVersion.
       */
      public com.google.protobuf.ByteString
          getFlinkVersionBytes() {
        java.lang.Object ref = flinkVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          flinkVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The version of flink cluster.
       * &#64;inject_tag: json:"flink_version"
       * </pre>
       *
       * <code>string flink_version = 3 [(.validator.field) = { ... }</code>
       * @param value The flinkVersion to set.
       * @return This builder for chaining.
       */
      public Builder setFlinkVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        flinkVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of flink cluster.
       * &#64;inject_tag: json:"flink_version"
       * </pre>
       *
       * <code>string flink_version = 3 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFlinkVersion() {
        
        flinkVersion_ = getDefaultInstance().getFlinkVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of flink cluster.
       * &#64;inject_tag: json:"flink_version"
       * </pre>
       *
       * <code>string flink_version = 3 [(.validator.field) = { ... }</code>
       * @param value The bytes for flinkVersion to set.
       * @return This builder for chaining.
       */
      public Builder setFlinkVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        flinkVersion_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object jsonContent_ = "";
      /**
       * <pre>
       * The content of sync job that format by JSON.
       * &#64;inject_tag: json:"json_content"
       * </pre>
       *
       * <code>string json_content = 4 [(.validator.field) = { ... }</code>
       * @return The jsonContent.
       */
      public java.lang.String getJsonContent() {
        java.lang.Object ref = jsonContent_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jsonContent_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The content of sync job that format by JSON.
       * &#64;inject_tag: json:"json_content"
       * </pre>
       *
       * <code>string json_content = 4 [(.validator.field) = { ... }</code>
       * @return The bytes for jsonContent.
       */
      public com.google.protobuf.ByteString
          getJsonContentBytes() {
        java.lang.Object ref = jsonContent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jsonContent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The content of sync job that format by JSON.
       * &#64;inject_tag: json:"json_content"
       * </pre>
       *
       * <code>string json_content = 4 [(.validator.field) = { ... }</code>
       * @param value The jsonContent to set.
       * @return This builder for chaining.
       */
      public Builder setJsonContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jsonContent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The content of sync job that format by JSON.
       * &#64;inject_tag: json:"json_content"
       * </pre>
       *
       * <code>string json_content = 4 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearJsonContent() {
        
        jsonContent_ = getDefaultInstance().getJsonContent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The content of sync job that format by JSON.
       * &#64;inject_tag: json:"json_content"
       * </pre>
       *
       * <code>string json_content = 4 [(.validator.field) = { ... }</code>
       * @param value The bytes for jsonContent to set.
       * @return This builder for chaining.
       */
      public Builder setJsonContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jsonContent_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:request.SubmitSyncJobToFlink)
    }

    // @@protoc_insertion_point(class_scope:request.SubmitSyncJobToFlink)
    private static final com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink();
    }

    public static com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SubmitSyncJobToFlink>
        PARSER = new com.google.protobuf.AbstractParser<SubmitSyncJobToFlink>() {
      @java.lang.Override
      public SubmitSyncJobToFlink parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubmitSyncJobToFlink(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubmitSyncJobToFlink> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubmitSyncJobToFlink> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dataomnis.gproto.types.pbrequest.PBRequestSyncDeveloper.SubmitSyncJobToFlink getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_request_SubmitSyncJobToFlink_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_request_SubmitSyncJobToFlink_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(proto/types/request/sync_developer.pro" +
      "to\022\007request\0323github.com/yu31/protoc-plug" +
      "in/proto/validator.proto\"\235\001\n\024SubmitSyncJ" +
      "obToFlink\022\036\n\010flink_id\030\001 \001(\tB\014\342\337\037\010\022\006\302\001\003\360\001" +
      " \022\036\n\tflink_url\030\002 \001(\tB\013\342\337\037\007\022\005\302\001\002\"\000\022\"\n\rfli" +
      "nk_version\030\003 \001(\tB\013\342\337\037\007\022\005\302\001\002\"\000\022!\n\014json_co" +
      "ntent\030\004 \001(\tB\013\342\337\037\007\022\005\302\001\002\"\000Bu\n$com.dataomni" +
      "s.gproto.types.pbrequestB\026PBRequestSyncD" +
      "eveloperP\000Z3github.com/DataWorkbench/gpr" +
      "oto/xgo/types/pbrequestb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.github.yu31.protoc.pb.pbvalidator.PBValidator.getDescriptor(),
        });
    internal_static_request_SubmitSyncJobToFlink_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_request_SubmitSyncJobToFlink_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_request_SubmitSyncJobToFlink_descriptor,
        new java.lang.String[] { "FlinkId", "FlinkUrl", "FlinkVersion", "JsonContent", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.github.yu31.protoc.pb.pbvalidator.PBValidator.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.github.yu31.protoc.pb.pbvalidator.PBValidator.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
