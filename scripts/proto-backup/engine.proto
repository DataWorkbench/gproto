syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/enginepb";

// Package name of class.
option java_package = "com.dataomnis.gproto.enginepb";
// File name of class.
option java_outer_classname = "EnginePB";
option java_multiple_files = false;

package enginepb;

import "model.proto";
import "request.proto";
import "response.proto";

// Engine Server
// Interface for manage global apis of engine-manager
service Engine {
    // DeleteWorkspaces for all resource of specified space ids.
    rpc DeleteWorkspaces(request.DeleteWorkspaces) returns(model.EmptyStruct) {}

    // Flink Server
    // Interface for manage flink cluster
    rpc ListAvailableFlinkVersions(model.EmptyStruct) returns (response.ListAvailableFlinkVersions) {}
    // Describe flink cluster api that job-manager commit job to
    rpc DescribeFlinkClusterAPI(request.DescribeFlinkClusterAPI) returns(response.DescribeFlinkClusterAPI) {}

    rpc CreateFlinkCluster(request.CreateFlinkCluster) returns (response.CreateFlinkCluster) {}
    rpc ListFlinkClusters(request.ListFlinkClusters) returns (response.ListFlinkClusters) {}
    rpc DescribeFlinkCluster(request.DescribeFlinkCluster) returns (response.DescribeFlinkCluster) {}
    rpc UpdateFlinkCluster(request.UpdateFlinkCluster) returns (model.EmptyStruct) {}
    rpc DeleteFlinkClusters(request.DeleteFlinkClusters) returns (model.EmptyStruct) {}

    rpc StartFlinkClusters(request.StartFlinkClusters) returns (model.EmptyStruct) {}
    rpc StopFlinkClusters(request.StopFlinkClusters) returns (model.EmptyStruct) {}

    // Network Server
    // Interface for manage network configuration from iaas-pvc
    rpc CreateNetwork(request.CreateNetwork) returns (response.CreateNetwork) {}
    rpc ListNetworks(request.ListNetworks) returns (response.ListNetworks) {}
    rpc DescribeNetwork(request.DescribeNetwork) returns (response.DescribeNetwork) {}
    rpc UpdateNetwork(request.UpdateNetwork) returns (model.EmptyStruct) {}
    rpc DeleteNetworks(request.DeleteNetworks) returns (model.EmptyStruct) {}
}
