syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/resource";

package resource;

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "model.proto";

service ResourceManager{
  rpc CreateDir(CreateDirRequest) returns (model.EmptyStruct){}
  rpc UploadFile(stream UploadFileRequest) returns (model.EmptyStruct){}
  rpc DownloadFile(DownloadRequest) returns (stream DownloadResponse){}
  rpc DescribeFile(DescribeRequest) returns (ResourceResponse){}
  rpc ListFiles(ListRequest) returns (ListResponse){}
  rpc UpdateFile(UpdateFileRequest) returns(model.EmptyStruct){}
  rpc Delete(DeleteRequest) returns(model.EmptyStruct){}
  rpc DeleteSpace(DeleteSpaceRequest) returns(model.EmptyStruct){}
}

message CreateDirRequest{
  // The resource id in HTTP Request_URI.
  // @inject_tag: params:"resource_id" uri:"resource_id" default:"" swaggerignore:"true"
  string resource_id = 1;

  // The workspace id in HTTP Request-URI
  // @inject_tag: params:"space_id" uri:"space_id" default:"" binding:"len=20" swaggerignore:"true"
  string space_id = 2 [(validator.field) = {length_eq: 20}];

  // The dir name. required.
  // @inject_tag: params:"dir_name" form:"dir_name" binding:"required,lte=500"
  string dir_name = 3 [(validator.field) = {msg_exists: true}];

  // The resource parent id. not required. default -1.
  // @inject_tag: params:"parent_id" form:"parent_id" default:"-1" binding:"gte=-1,lte=20"
  string parent_id = 4 [(validator.field) = {msg_exists: true}];
}

message UploadFileRequest{
  // The resource id for test. Not required.
  string resource_id = 1;

  // The workspace id in HTTP Request-URI
  // @inject_tag: params:"space_id" uri:"space_id" default:"" binding:"len=20" swaggerignore:"true"
  string space_id = 2 [(validator.field) = {length_eq: 20}];

  // The resource name. required.
  // @inject_tag: params:"resource_name" binding:"required,lte=500"
  string resource_name = 3 [(validator.field) = {msg_exists: true}];

  // The resource type. required.
  // @inject_tag: params:"resource_type" binding:"required,oneof=1 2"
  int32 resource_type = 4 [(validator.field) = {int_gt:0; int_lt:3}];

  // The resource parent id. Not required. default -1.
  // @inject_tag: params:"parent_id" form:"parent_id" default:"-1"
  string parent_id = 5 [(validator.field) = {msg_exists: true}];

  // The data for resource. required.
  bytes data = 6 [(validator.field) = {msg_exists: true}];

  //The resource Size. prevent data missing.
  int64 size = 7 [(validator.field) = {msg_exists: true}];

  string md5_message = 8;
}

message DownloadRequest{
  // The resource id in HTTP Request_URI.
  // @inject_tag: params:"resource_id" uri:"resource_id" default:"" binding:"len=20" swaggerignore:"true"
  string resource_id = 1 [(validator.field) = {length_eq: 20}];
}

message ListRequest{
  // The resource parent id. Not required. default -1.
  // @inject_tag: params:"resource_id" uri:"resource_id" form:"resource_id" default:"-1"
  string resource_id = 1;

  // The workspace id in HTTP Request-URI
  // @inject_tag: params:"space_id" uri:"space_id" default:"" binding:"len=20" swaggerignore:"true"
  string space_id = 2 [(validator.field) = {length_eq: 20}];

  // Limit the maximum number of entries returned this time.
  // Not required, Max 100, default 100.
  // @inject_tag: params:"limit" form:"limit" default:"100" binding:"gt=0,lte=100"
  int32  limit = 3    [(validator.field) = {int_gt: 0, int_lt: 101}];

  // The offset position. Not required, default 0.
  // @inject_tag: params:"offset" form:"offset" default:"0" binding:"gte=0,lte=100"
  int32  offset = 4   [(validator.field) = {int_gt: -1}];

  // The resource type. required.
  // @inject_tag: params:"resource_type" form:"resource_type" default="0" binding:"gte=0,lte=2"
  int32  resource_type = 5 [(validator.field) = {int_gt:-1,int_lt:3}];
}

message UpdateFileRequest{
  // The resource id in HTTP Request_URI.
  // @inject_tag: params:"resource_id" uri:"resource_id" default:"" binding:"len=20" swaggerignore:"true"
  string resource_id = 1 [(validator.field) = {length_eq: 20}];

  // The resource name. required.
  // @inject_tag: params:"resource_name" binding:"required,lte=500"
  string resource_name = 2 [(validator.field) = {msg_exists: true}];

  // The resource type. required.
  // @inject_tag: params:"resource_type" binding:"required,oneof=1 2"
  int32 resource_type = 3 [(validator.field) = {int_lt:3}];
}

message DeleteRequest{
  // The list of resource id. Is required, Min 1 Max 100.
  // @inject_tag: params:"ids" default:"" binding:"gte=1,lte=100"
  repeated string ids = 1 [(validator.field) = {length_gt: 0, length_lt: 101}];
}

message DeleteSpaceRequest{
  // The list of space id. Is required, Min 1 Max 100
  // @inject_tag: param:"space_ids" default:"" binding:"gte=1,lte=100"
  repeated string space_ids = 1 [(validator.field) = {length_gt: 0, length_lt: 101}];
}

message DescribeRequest{
  // The resource id in HTTP Request_URI.
  // @inject_tag: params:"resource_id" uri:"resource_id" default:"" binding:"len=20" swaggerignore:"true"
  string resource_id = 1 [(validator.field) = {length_eq: 20}];
}

message DownloadResponse{
  bytes data = 1;
  int64 size = 2;
  string name = 3;
}


message ResourceResponse{
  string resource_id = 1;
  string space_id = 2;
  string resource_name = 3;
  int32  resource_type = 5;
  int64  size = 6;
  string url = 7;
  bool isDir = 8;
}

message ListResponse {
  repeated ResourceResponse infos = 1;
  bool has_more = 2 [(validator.field) = {}];
  int64  total = 3 [(validator.field) = {}];
}


