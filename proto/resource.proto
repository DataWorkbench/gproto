syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/respb";

// Package name of class.
option java_package = "com.workbench.proto.respb";
// File name of class.
option java_outer_classname = "Respb";
option java_multiple_files = true;

package resource;
import "model.proto";
import "request.proto";
import "response.proto";

service Resource {
  rpc ReUploadFile(stream ReUploadFileRequest) returns (model.EmptyStruct){}
  rpc UploadFile(stream UploadFileRequest) returns (response.UploadFile){}
  rpc DownloadFile(request.DownloadFile) returns (stream response.DownloadFile){}
  rpc DescribeFile(request.DescribeFile) returns (model.Resource){}
  rpc ListResources(request.ListResources) returns (response.ListResources){}
  rpc UpdateResource(request.UpdateResource) returns(model.EmptyStruct){}
  rpc DeleteResources(request.DeleteResources) returns(model.EmptyStruct){}
  rpc DeleteSpaces(request.DeleteWorkspaces) returns(model.EmptyStruct){}
  rpc RenameFlinkStatePath(request.RenameFlinkStatePath) returns(model.EmptyStruct){}
  rpc DeleteFlinkState(request.DeleteFlinkState) returns(model.EmptyStruct){}
}

// UploadFile used as a request parameters for RPC and HTTP(based on URL-Query).
message UploadFileRequest{
  // The workspace id in HTTP Request-URI
  string space_id = 1;

  // The resource name. required.
  string resource_name = 2;

  // The resource type. required.
  model.Resource.Type resource_type = 3;

  // The data for resource. required.
  bytes data = 4;

  // The resource Size. prevent data missing.
  int64 resource_size = 5;

  // The resource description. not required.
  string description = 6;

  // Resource status, 1 => "enabled", 2 => "disabled", 3 => "deleted".
  model.Resource.Status status = 7;

  // The resource owner.
  string create_by = 8;
}

// ReUploadFile used as a request parameters for RPC and HTTP(based on URL-Query).
message ReUploadFileRequest{

  // The resource id in HTTP Request-URI
  string resource_id = 1;

  // The workspace id in HTTP Request-URI
  string space_id = 2;

  // The data for resource. required.
  bytes data = 3;

  // The resource Size. prevent data missing.
  int64 size = 4;
}