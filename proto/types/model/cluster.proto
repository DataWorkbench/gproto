syntax = "proto3";

package model;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbmodel";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbmodel";
// File name of class.
option java_outer_classname = "PBModelCluster";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
import "github.com/yu31/protoc-plugin/proto/gosql.proto";

import "proto/types/model/network.proto";
import "proto/types/model/flink/flink_config.proto";

// HostAliases
message HostAliases {
  option (gosql.serialize) = {json: {}};
  message Item {
    // @inject_tag: json:"ip"
    string ip = 1 [(validator.field).tags.string = { ipv4: true } ];

    // @inject_tag: json:"hostname"
    string hostname = 2 [(validator.field).tags.string = { hostname: true }];
  }

  // The hostname aliases.
  // @inject_tag: json:"items"
  repeated Item items = 1 [(validator.field) = {}];
}

// FlinkCluster is schema for flink (session) cluster.
message FlinkCluster {
  enum Status {
    StatusUnset = 0;
    Deleted = 1;
    Running = 2;
    Stopped = 3;
    Starting = 4;
    Exception = 5;
    Arrears = 6;
  }

  // Workspace ID it belongs to.
  // @inject_tag: json:"space_id" gorm:"column:space_id;"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "wks-"} ];

  // Review it.
  // Cluster ID, unique within a region. generated by server.
  // @inject_tag: json:"id" gorm:"column:id;primarykey;"
  string id = 2 [ (validator.field).tags.string = { byte_len_eq: 20 } ];

  // Cluster Name.
  // @inject_tag: json:"name" gorm:"column:name;"
  string name = 3 [ (validator.field).tags.string = { byte_len_gte: 2, byte_len_lte: 128} ];

  // Flink Version. Optional value: "flink-1.12.3-scala_2.11"
  // @inject_tag: json:"version" gorm:"column:version;"
  string version = 4 [(validator.field).tags.string = { in: ["flink-1.12.3-scala_2.11"] }];

  // Cluster Status. 1 => "deleted" 2 => "running" 3 => "stopped" 4 => "starting" 5 => "exception" 6 => "Arrears"
  // @inject_tag: json:"status" gorm:"column:status;"
  Status status = 5 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];

  // resource config.
  //
  // Flink task number for TaskManager. Is required, Min 1, Max ?
  // @inject_tag: json:"task_num" gorm:"column:task_num;"
  int32 task_num = 6 [(validator.field).tags.int = { gt: 0 }];

  // Flink JobManager's cpu and memory. 1CU = 1C + 4GB. Is required, Min 0.5, Max 8
  // @inject_tag: json:"job_cu" gorm:"column:job_cu;"
  float job_cu = 7 [(validator.field).tags.float = {gte: 0.5, lte: 8}];

  // Flink TaskManager's cpu and memory. 1CU = 1C + 4GB. Is required, Min 0.5, Max 8
  // @inject_tag: json:"task_cu" gorm:"column:task_cu;"
  float task_cu = 8 [(validator.field).tags.float = {gte: 0.5, lte: 8}];

  // Network config.
  // @inject_tag: json:"network_id" gorm:"column:network_id;"
  string network_id = 9 [(validator.field) = {}];

  // Config of host aliases. Not required.
  // @inject_tag: json:"host_aliases" gorm:"column:host_aliases;"
  HostAliases host_aliases = 10 [(validator.field) = {}];

  // Flink config.
  // @inject_tag: json:"config" gorm:"column:config;"
  flink.FlinkConfig config = 11 [(validator.field) = {}];

  // The user-id of created this cluster.
  // @inject_tag: json:"created_by" gorm:"column:created_by;"
  string created_by = 12 [ (validator.field).tags.string = { byte_len_lte: 64} ];

  // Timestamp of create time.
  // @inject_tag: json:"created" gorm:"column:created;autoCreateTime;"
  int64 created = 13 [ (validator.field).tags.int = { gt: 0 } ];

  // Timestamp of update time.
  // @inject_tag: json:"updated" gorm:"column:updated;autoUpdateTime;"
  int64 updated = 14 [ (validator.field).tags.int = { gt: 0 } ];

  // URL of Flink UI, generated by server.
  // "<-:false" means read only field. see https://gorm.io/zh_CN/docs/models.html
  // @inject_tag: json:"web_ui" gorm:"column:web_ui;<-:false"
  string web_ui = 15;

  // @inject_tag: json:"network_info" gorm:"-"
  Network network_info = 16;
}

// NetworkBinding declares which modules binding the flink_cluster.
message FlinkClusterBinding {
  // Workspace ID it belongs to. Only used when delete workspace.
  // @inject_tag: json:"space_id" gorm:"column:space_id;primaryKey;"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "wks-"} ];

  // ID of flink cluster.
  // @inject_tag: json:"cluster_id" gorm:"column:cluster_id;primaryKey;"
  string cluster_id = 2 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "net-" } ];

  // ID of which module binding it.
  // Includes modules: "stream_job", "stream_job_release".
  // @inject_tag: json:"module_id" gorm:"column:module_id;primaryKey;"
  string module_id = 3 [ (validator.field).tags.string = { byte_len_eq: 20 } ];

  // Version represents the module's version if there is a version number.
  // @inject_tag: json:"version" gorm:"column:version;primaryKey;"
  string version = 4 [ (validator.field).tags.string = { ne: "" } ];

  // Timestamp of create time.
  // @inject_tag: json:"created" gorm:"column:created;autoCreateTime;"
  int64 created = 5 [ (validator.field).tags.int = { gt: 0 } ];
}
