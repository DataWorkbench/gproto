syntax = "proto3";

package model;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbmodel";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbmodel";
// File name of class.
option java_outer_classname = "PBModelDataService";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
import "github.com/yu31/protoc-plugin/proto/defaults.proto";
import "github.com/yu31/protoc-plugin/proto/gosql.proto";
import "google/protobuf/any.proto";

// table dataservice_cluster
message DataServiceCluster{
  enum Status {
    StatusUnset = 0;
    Deleted = 1;
    Running = 2;
    Stopped = 3;
    Starting = 4;
    Exception = 5;
    Arrears = 6;
  }
  enum ResourceSpec {
    SpecUnset = 0;
    Entry = 1;
    Basics = 2;
    Major = 3;
  }
  // @inject_tag: json:"id" gorm:"column:id;primarykey;"
  string id = 1 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsc-" } ];
  // @inject_tag: json:"space_id" gorm:"column:space_id;"
  string space_id = 2 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "wks-"} ];
  // @inject_tag: json:"name" gorm:"column:name;"
  string name = 3 [ (validator.field).tags.string = { byte_len_gte: 2, byte_len_lte: 128} ];
  // @inject_tag: json:"resource_spec" gorm:"column:resource_spec;"
  ResourceSpec resource_spec = 4 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"status" gorm:"column:status;"
  Status status = 5 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"created_by" gorm:"column:created_by;"
  string created_by = 6 [ (validator.field).tags.string = { byte_len_gt:0, byte_len_lt: 65 } ];
  // @inject_tag: json:"created" gorm:"column:created;autoCreateTime;"
  int64 created = 7 [ (validator.field).tags.int = { gt: 0 } ];
  // @inject_tag: json:"updated" gorm:"column:updated;autoUpdateTime;"
  int64 updated = 8 [ (validator.field).tags.int = { gt: 0 } ];
}

// table api_group
message ApiGroup{
  enum Status {
    StatusUnset = 0;
    Deleted = 1;
    Enabled = 2;
  }
  // @inject_tag: json:"id" gorm:"column:id;primaryKey;"
  string id = 1 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsg-" } ];
  // @inject_tag: json:"space_id" gorm:"column:space_id;"
  string space_id = 2 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" }];
  // @inject_tag: json:"name" gorm:"column:name;"
  string name = 3 [ (validator.field).tags.string = { byte_len_gt: 0, byte_len_lte: 64 }  ];
  // @inject_tag: json:"group_path"  gorm:"column:group_path;"
  string group_path = 4 [ (validator.field).tags.string = {  byte_len_lte: 64 } ];
  // @inject_tag: json:"desc"  gorm:"column:desc;"
  string desc = 5 [(validator.field).tags.string = { char_len_lte: 1024 }];
  // @inject_tag: json:"status" gorm:"column:status;"
  Status status = 6 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"created_by" gorm:"column:created_by;"
  string created_by = 7 [ (validator.field).tags.string = { byte_len_gt:0, byte_len_lt: 65 } ];
  // @inject_tag: json:"created" gorm:"column:created;autoCreateTime;"
  int64 created = 8 [ (validator.field).tags.int = { gt: 0 } ];
  // @inject_tag: json:"updated" gorm:"column:updated;autoUpdateTime;"
  int64 updated = 9 [ (validator.field).tags.int = { gt: 0 } ];
}

// table api_config
message ApiConfig {
  enum ApiMode{
    ModeUnset = 0;
    Wizard = 1;
    Script = 2;
  }
  enum RequestMethod{
    MethodUnset = 0;
    GET = 1;
    POST = 2;
  }
  enum ResponseType{
    TypeUnset = 0;
    JSON = 1;
    XML = 2;
  }
  enum Protocols{
    ProtocolUnset = 0;
    HTTPOnly = 1;
    HTTPSOnly = 2;
    ALL = 3;
  }
  enum Status {
    StatusUnset = 0;
    Deleted = 1;
    Enabled = 2;
  }

  // @inject_tag: json:"api_id" gorm:"column:api_id;primaryKey;"
  string api_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsa-" } ];
  // @inject_tag: json:"group_id" gorm:"column:group_id;"
  string group_id = 2 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsg-" } ] ;
  // @inject_tag: json:"cluster_id"  gorm:"column:cluster_id;"
  string cluster_id = 3 [ (validator.field).tags.string = { } ];
  // @inject_tag: json:"space_id" gorm:"column:space_id;"
  string space_id = 4 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];
  // @inject_tag: json:"api_name" gorm:"column:api_name;"
  string api_name = 5 [ (validator.field).tags.string = { byte_len_gt: 0, byte_len_lte: 64 }  ];
  // @inject_tag: json:"api_path" gorm:"column:api_path;"
  string api_path = 6 [ (validator.field).tags.string = { byte_len_gt: 0, byte_len_lte: 200 } ];
  // @inject_tag: json:"api_mode" gorm:"column:api_mode;"
  ApiMode api_mode = 7  [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"api_description" gorm:"column:api_description;"
  string api_description = 8 [ (validator.field).tags.string = { byte_len_lte: 257 }   ];
  // @inject_tag: json:"protocols" gorm:"column:protocols;"
  Protocols protocols = 9 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"request_method" gorm:"column:request_method;"
  RequestMethod request_method = 10 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"response_type" gorm:"column:response_type;"
  ResponseType response_type = 11  [  (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"cross_domain" gorm:"column:cross_domain;"
  bool cross_domain = 12 [ (validator.field) = { } ];
  // @inject_tag: json:"timeout" gorm:"column:timeout;"
  int64 timeout = 13 [ (validator.field).tags.int = { gte: 1 , lte: 180 } ];
  // @inject_tag: json:"datasource_id" gorm:"column:datasource_id;"
  string datasource_id = 14 [(validator.field).tags.string = { byte_len_eq: 20, prefix: "som-" } ];
  // @inject_tag: json:"table_name" gorm:"column:table_name;"
  string table_name = 15 [ (validator.field).tags.string = {  byte_len_gt: 0, byte_len_lte: 64}  ];
  // @inject_tag: json:"script" gorm:"column:script;"
  string script = 16 [ (validator.field).tags.string = { byte_len_lte: 20000 }  ];
  // @inject_tag: json:"created_by" gorm:"column:created_by;"
  string created_by = 17 [ (validator.field).tags.string = { byte_len_gt:0, byte_len_lt: 65 } ];
  // @inject_tag: json:"created" gorm:"column:created;autoCreateTime;"
  int64 created = 18 [ (validator.field).tags.int = { gt: 0 } ];
  // @inject_tag: json:"updated" gorm:"column:updated;autoUpdateTime;"
  int64 updated = 19 [ (validator.field).tags.int = { gt: 0 } ];
  // @inject_tag: json:"status" gorm:"column:status;"
  Status status = 20 [(validator.field).tags.enum = { gt: 0; in_enums: true  }];
  // @inject_tag: json:"accessible_version" gorm:"column:accessible_version;"
  string  accessible_version = 21 ;
  // @inject_tag: json:"request_params" gorm:"column:request_params;type:json"
  RequestParameters request_params = 22 [(validator.field) = {}];
  // @inject_tag: json:"response_params" gorm:"column:response_params;type:json"
  ResponseParameters response_params = 23 [(validator.field) = {}];
}

message RequestParameters {
  option (gosql.serialize) = {json: {}};
  // @inject_tag: json:"request_params"
  repeated RequestParameter request_params = 22 [(validator.field) = {}];
}

message RequestParameter {
  option (gosql.serialize) = {json: {}};

  enum ParameterOperator{
    OperatorUnset = 0;
    Equal = 1;
    NotEqual = 2;
    GreaterThan = 3;
    LessThan = 4;
    Like = 5;
    Const = 6;
    In = 7;
  }

  enum ParameterPosition{
    PositionUnset = 0;
    Body = 1;
    Query = 2;
    Path = 3;
    Head = 4;
  }

  // @inject_tag: json:"column_name"
  string column_name = 1 [ (validator.field).tags.string = { byte_len_gt: 0, byte_len_lte: 64 } ];
  // @inject_tag: json:"default_value"
  string default_value = 2 [ (validator.field).tags.string = { byte_len_lte: 257 }  ];
  // @inject_tag: json:"example_value"
  string example_value = 3 [ (validator.field).tags.string = { byte_len_lte: 257 }  ];
  // @inject_tag: json:"is_required"
  bool is_required = 4 [ (validator.field) = { } ];
  // @inject_tag: json:"data_type"
  model.ParameterDataType data_type = 5 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"param_description"
  string param_description = 6 [ (validator.field).tags.string = { byte_len_lte: 257 } ];
  // @inject_tag: json:"param_name"
  string param_name = 7 [ (validator.field).tags.string = { byte_len_gt: 0, byte_len_lte: 64 }  ];
  // @inject_tag: json:"param_operator"
  ParameterOperator param_operator = 8  [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"param_position"
  ParameterPosition param_position = 9  [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];

}

message ResponseParameters {
  option (gosql.serialize) = {json: {}};
  // @inject_tag: json:"response_params"
  repeated ResponseParameter response_params = 22 [(validator.field) = {}];
}

message ResponseParameter {
  option (gosql.serialize) = {json: {}};

  enum OrderMode {
    StatusUnset = 0;
    Ase = 1;
    Desc = 2;
  }
  // @inject_tag: json:"column_name"
  string column_name = 1 [ (validator.field).tags.string = { byte_len_gt: 0, byte_len_lte: 64 }  ];
  // @inject_tag: json:"default_value"
  string default_value = 2 [ (validator.field).tags.string = { byte_len_lte: 257 }  ];
  // @inject_tag: json:"example_value"
  string example_value = 3 [ (validator.field).tags.string = { byte_len_lte: 257 }  ];
  // @inject_tag: json:"data_type"
  model.ParameterDataType data_type = 4 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"param_description"
  string param_description = 5 [ (validator.field).tags.string = { byte_len_lte: 257 }  ];
  // @inject_tag: json:"param_name"
  string param_name = 6 [ (validator.field).tags.string = { byte_len_gt: 0, byte_len_lte: 64 }   ];
  // @inject_tag: json:"order_num"
  int64 order_num = 7 [ (validator.field).tags.int = { } ];
  // @inject_tag: json:"order_mode"
  OrderMode order_mode = 8 [ (validator.field).tags.enum = {  in_enums: true }  ];
}

// table api_versions
message ApiVersion{
  enum Status {
    StatusUnset = 0;
    Published = 1;
    Abolished = 2;
  }
  enum ApiMode{
    ModeUnset = 0;
    Wizard = 1;
    Script = 2;
  }
  enum RequestMethod{
    MethodUnset = 0;
    GET = 1;
    POST = 2;
  }
  enum ResponseType{
    TypeUnset = 0;
    JSON = 1;
    XML = 2;
  }
  enum Protocols{
    ProtocolUnset = 0;
    HTTPOnly = 1;
    HTTPSOnly = 2;
    ALL = 3;
  }
  // @inject_tag: json:"version_id" gorm:"column:version_id;primaryKey;"
  string	version_id = 1 [ (validator.field).tags.string = { byte_len_eq: 16 } ];
  // @inject_tag: json:"publish_status" gorm:"column:publish_status;"
  Status publish_status = 2 [ (validator.field).tags.enum = { gt: 1; in_enums: true  } ];
  //int64 publish_time = 3 [ (validator.field).tags.int = { gt: 0 } ];
  // @inject_tag: json:"api_id" gorm:"column:api_id;primaryKey;"
  string api_id = 4 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsa-" } ];
  // @inject_tag: json:"group_id" gorm:"column:group_id;"
  string group_id = 5 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsg-" } ] ;
  // @inject_tag: json:"cluster_id"  gorm:"column:cluster_id;"
  string cluster_id = 6 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsc-" } ];
  // @inject_tag: json:"space_id" gorm:"column:space_id;"
  string space_id = 7 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];
  // @inject_tag: json:"api_name" gorm:"column:api_name;"
  string api_name = 8 [ (validator.field).tags.string = { byte_len_gt: 0, byte_len_lte: 64 }  ];
  // @inject_tag: json:"api_path" gorm:"column:api_path;"
  string api_path = 9 [ (validator.field).tags.string = { byte_len_gt: 0, byte_len_lte: 200 } ];
  // @inject_tag: json:"api_mode" gorm:"column:api_mode;"
  ApiMode api_mode = 10 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"api_description" gorm:"column:api_description;"
  string api_description = 11 [ (validator.field).tags.string = { byte_len_lte: 257 }   ];
  // @inject_tag: json:"protocols" gorm:"column:protocols;"
  Protocols protocols = 12 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"request_method" gorm:"column:request_method;"
  RequestMethod request_method = 13 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"response_type" gorm:"column:response_type;"
  ResponseType response_type = 14  [  (validator.field).tags.enum = { gt: 0; in_enums: true } ];
  // @inject_tag: json:"cross_domain" gorm:"column:cross_domain;"
  bool cross_domain = 15 [ (validator.field) = { } ];
  // @inject_tag: json:"timeout" gorm:"column:timeout;"
  int64 timeout = 16 [ (validator.field).tags.int = { gte: 1 , lte: 180 } ];
  // @inject_tag: json:"datasource_id" gorm:"column:datasource_id;"
  string datasource_id = 17 [(validator.field).tags.string = { byte_len_eq: 20, prefix: "som-" } ];
  // @inject_tag: json:"table_name" gorm:"column:table_name;"
  string table_name = 18 [ (validator.field).tags.string = {  byte_len_gt: 0, byte_len_lte: 64}  ];;
  // @inject_tag: json:"script" gorm:"column:script;"
  string script = 19 [ (validator.field).tags.string = { byte_len_lte: 20000 }  ];
  // @inject_tag: json:"created" gorm:"column:created;autoCreateTime;"
  int64 created = 3 [ (validator.field).tags.int = { gt: 0 } ];
  // @inject_tag: json:"updated" gorm:"column:updated;autoUpdateTime;"
  int64 updated = 20 [ (validator.field).tags.int = { gt: 0 } ];
  // @inject_tag: json:"request_params" gorm:"column:request_params;type:json"
  RequestParameters request_params = 21 [(validator.field) = {}];
  // @inject_tag: json:"response_params" gorm:"column:response_params;type:json"
  ResponseParameters response_params = 22 [(validator.field) = {}];
}

enum ParameterDataType {
  TypeUnset = 0;
  String = 1;
  Int = 2;
//  Long = 3;
//  Float = 4;
  Double = 3;
  Boolean = 4;
  // JSON  = 8
}


// ServiceDataSourceKind represents the kind of dataservice datasource
message ServiceDataSourceKind {
  // @inject_tag: json:"name"
  string Name = 1;
  // @inject_tag: json:"type"
  int64 Type = 2;
}



