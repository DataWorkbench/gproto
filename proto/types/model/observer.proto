syntax = "proto3";

package model;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbmodel";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbmodel";
// File name of class.
option java_outer_classname = "PBModelObserver";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
//import "github.com/yu31/protoc-plugin/proto/gosql.proto";

message InstanceStatusStat {
  // instance status
  // @inject_tag: json:"state"
  int32 state = 1 [ (validator.field).tags.int = { gte: 0 } ];
  // instance count with the status
  // @inject_tag: json:"count"
  int64 count = 2 [ (validator.field).tags.int = { gte: 0 } ];
}

message InstanceRuntimeRankInfo {
  // instance id
  // @inject_tag: json:"id"
  string id = 1 [(validator.field) = {}];
  // job_id
  // @inject_tag: json:"job_id"
  string job_id = 2 [(validator.field) = {}];
  // running time
  // @inject_tag: json:"running_time"
  int64 running_time = 3 [ (validator.field).tags.int = { gte: 0 } ];
  // version
  // @inject_tag: json:"version"
  string version = 4 [(validator.field) = {}];
}

message InstanceErrorRankInfo {
  // job_id
  // @inject_tag: json:"job_id"
  string job_id = 1 [(validator.field) = {}];
  // version
  // @inject_tag: json:"version"
  string version = 2 [(validator.field) = {}];
  // running time
  // @inject_tag: json:"error_count"
  int64 error_count = 3 [ (validator.field).tags.int = { gte: 0 } ];
}

message DispatchTaskCountInfo {
  // flow_count
  // @inject_tag: json:"flow_count"
  int32 flow_count = 1 [ (validator.field).tags.int = { gte: 0 } ];
  // instance count
  // @inject_tag: json:"instance_id"
  int32 instance_count = 2 [ (validator.field).tags.int = { gte: 0 } ];
  // updated time
  // @inject_tag: json:"updated"
  int64 updated = 6[ (validator.field).tags.int = { gt: 0 } ];
}

message InstanceTaskExecStat {
  // hour
  // @inject_tag: json:"hour"
  int32 hour = 1 [ (validator.field).tags.int = { gte: 0, lte: 24 } ];
  // instance success count
  // @inject_tag: json:"instance_count"
  int64 instance_count = 2 [ (validator.field).tags.int = { gte: 0 } ];
}
