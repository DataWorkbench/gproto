syntax = "proto3";

package model;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbmodel/pbsyncjob";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbmodel.pbsyncjob";
// File name of class.
option java_outer_classname = "PBHbase";
option java_multiple_files = false;

import "proto/types/model/syncjob/baseenum.proto";
import "proto/types/model/syncjob/column.proto";
import "github.com/yu31/protoc-plugin/proto/gosql.proto";

message HbaseSource {
    option (gosql.serialize) = {json: {}};
    // column
    // @inject_tag: json:"column"
    repeated Column column = 1;
    // hbaseConfig
    // @inject_tag: json:"hbaseConfig"
    string hbaseConfig = 2;
    // change_log
    // @inject_tag: json:"change_log"
    string change_log = 3;
    // encoding
    // @inject_tag: json:"encoding"
    string encoding = 4;
    // scan cache size
    // @inject_tag: json:"scan_cache_size"
    int32 scan_cache_size = 5;
    // hbase scan batch size
    // @inject_tag: json:"scan_batch_size"
    int32 scan_batch_size = 6;
    // hbase hadoopConfig
    // @inject_tag: json:"hadoopConfig"
    string hadoopConfig = 7;
    // @inject_tag: json:"start_row_key"
    string start_row_key = 8;
    // end row key
    // @inject_tag: json:"end_row_key"
    string end_row_key = 9;
    // is binary rowkey
    // @inject_tag: json:"is_binary_rowkey"
    bool is_binary_rowkey = 10;
    // hbase table
    // @inject_tag: json:"table"
    string table = 11;
}

message HbaseTarget {
    option (gosql.serialize) = {json: {}};
    // @inject_tag: json:"column"
    repeated Column column = 1;
    // hbase Config
    // @inject_tag: json:"hbase_config"
    string hbase_config = 2;
    // null_mode
    // @inject_tag: json:"null_mode"
    BaseEnum.NullMode null_mode = 3;
    // wal flag
    // @inject_tag: json:"wal_flag"
    bool wal_flag = 4;
    // write buffer size
    // @inject_tag: json:"write_buffer_size"
    int32 write_buffer_size = 5;
    // change_log
    // @inject_tag: json:"change_log"
    string change_log = 6;
    // rowkey express
    // @inject_tag: json:"rowkey_express"
    string rowkey_express = 7;
    // version column index
    // @inject_tag: json:"version_column_index"
    int32 version_column_index = 8;
    // version column value
    // @inject_tag: json:"version_column_value"
    string version_column_value = 9;
    // scan cache size
    // @inject_tag: json:"scan_cache_size"
    int32 scan_cache_size = 10;
    // hbase scan batch size
    // @inject_tag: json:"scan_batch_size"
    int32 scan_batch_size = 11;
    // hbase table
    // @inject_tag: json:"table"
    string table = 12;
}



