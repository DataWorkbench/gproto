syntax = "proto3";

package model;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbmodel";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbmodel";
// File name of class.
option java_outer_classname = "PBModelMember";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
//import "github.com/yu31/protoc-plugin/proto/gosql.proto";
import "proto/types/model/account.proto";
import "proto/types/model/role.proto";

// The workspace member schema.
message Member {
  enum Status {
    StatusUnset = 0;
    Deleted = 1;
    Enabled = 2;
  }

  // @inject_tag: json:"space_id" gorm:"column:space_id;primaryKey;"
  string space_id = 1[ (validator.field).tags.string = { byte_len_eq: 20, prefix: "wks-"} ];

  // The user id in account-server.
  // @inject_tag: json:"user_id" gorm:"column:user_id;primaryKey;"
  string user_id = 2 [ (validator.field).tags.string = { byte_len_lte: 64} ];

  // The status of member. 1 => "Deleted" 2 => "Enabled". Ignore it for client.
  // @inject_tag: json:"status" gorm:"column:status;"
  Status status = 3 [ (validator.field).tags.enum = { gt: 0; in_enums: true } ];

  // Description for member. Max charset: 1024.
  // @inject_tag: json:"desc" gorm:"column:desc;"
  string desc = 4 [ (validator.field).tags.string = { char_len_lte:1024 }];

  // The id lists of system role. Multiple id separated by commas, eg: "ros-1,ros-2"
  // @inject_tag: json:"system_role_ids" gorm:"column:system_role_ids;"
  string system_role_ids = 5;

  // The id lists of custom role. Multiple id separated by commas, eg: "roc-1,roc-2"
  // A member can have up to 100 custom roles.
  // TODO: reserved field. unused on present.
  // @inject_tag: json:"custom_role_ids" gorm:"column:custom_role_ids;"
  string custom_role_ids = 6;

  // The user-id of created this network.
  // @inject_tag: json:"created_by" gorm:"column:created_by;"
  string created_by = 7 [ (validator.field).tags.string = { byte_len_gt:0, byte_len_lte: 65 } ];

  // Timestamp of create time.
  // @inject_tag: json:"created" gorm:"column:created;autoCreateTime;"
  int64 created = 8 [ (validator.field).tags.int = { gt: 0 } ];

  // Timestamp of update time.
  // @inject_tag: json:"updated" gorm:"column:updated;autoUpdateTime;"
  int64 updated = 9 [ (validator.field).tags.int = { gt: 0 } ];

  // The user detailed information. Not in db. Only used to Describe Or Lists.
  // @inject_tag: json:"user_info" gorm:"-"
  User user_info = 10;

  // The lis of system role info.
  // @inject_tag: json:"system_roles" gorm:"-"
  repeated SystemRole system_roles = 11;
}
