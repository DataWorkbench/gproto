syntax = "proto3";

package response;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbresponse";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbresponse";
// File name of class.
option java_outer_classname = "PBResponseWorkspaceManage";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
//import "github.com/yu31/protoc-plugin/proto/gosql.proto";
//import "github.com/yu31/protoc-plugin/proto/defaults.proto";

import "proto/types/model/workspace.proto";
import "proto/types/model/opaudit.proto";

// ListWorkspaces used as reply parameters in RPC or response body in HTTP.
message ListWorkspaces {
  // @inject_tag: json:"infos"
  repeated model.Workspace infos = 1;

  // @inject_tag: json:"has_more"
  bool has_more = 2;

  // @inject_tag: json:"total"
  int64 total = 3;
}

// ListOpAudits used as reply parameters in RPC or response body in HTTP.
message ListOpAudits {
  // @inject_tag: json:"infos"
  repeated model.Operation infos = 1;

  // @inject_tag: json:"has_more"
  bool has_more = 2;
}

// CreateWorkspace used as reply parameters in RPC or response body in HTTP.
message CreateWorkspace {
  // The workspace id that generated by system.
  // @inject_tag: json:"id"
  string id = 1 [(validator.field).tags.string = {byte_len_eq: 20, prefix: "wks-"}];
}

// DescribeWorkspace used as reply parameters in RPC, And model.Workspace used as response body in HTTP.
message DescribeWorkspace {
  model.Workspace info = 1;
}

message CheckPermission {
  model.Workspace info = 1;
}
