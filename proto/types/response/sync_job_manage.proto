syntax = "proto3";

package response;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbresponse";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbresponse";
// File name of class.
option java_outer_classname = "PBResponseSyncJobManage";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
import "proto/types/model/sync_job.proto";

// ListSyncJobs used as reply parameters in RPC or response body in HTTP.
message ListSyncJobs {
    // @inject_tag: json:"infos"
    repeated model.SyncJob infos = 1;

    // @inject_tag: json:"has_more"
    bool has_more = 2;

    // @inject_tag: json:"total"
    int64 total = 3;
}

// CreateSyncJob used as reply parameters in RPC.
message CreateSyncJob {
    // The Sync job id that generated by system.
    // @inject_tag: json:"id"
    string id = 1;
}

// DescribeSyncJob used as reply parameters in RPC.
message DescribeSyncJob {
    model.SyncJob info = 1;
}

// GetSyncJobConf used as reply parameters in RPC.
message GetSyncJobConf {
    model.SyncJobConf conf = 1 [ (validator.field).tags.message = { skip: true} ];
}

// GetSyncJobSchedule used as reply parameters in RPC.
message GetSyncJobSchedule {
    model.SyncJobSchedule schedule = 1 [ (validator.field).tags.message = { skip: true} ];
}

// ListReleaseSyncJobs used as reply parameters in RPC or response body in HTTP.
message ListReleaseSyncJobs {
    // @inject_tag: json:"infos"
    repeated model.SyncJobRelease infos = 1;

    // @inject_tag: json:"has_more"
    bool has_more = 2;

    // @inject_tag: json:"total"
    int64 total = 3;
}

// ListSyncJobVersions used as reply parameters in RPC or response body in HTTP.
message ListSyncJobVersions {
    // @inject_tag: json:"infos"
    repeated model.SyncJob infos = 1;

    // @inject_tag: json:"has_more"
    bool has_more = 2;
}


// DescribeSyncFlinkUIByInstanceId used as a request parameters for RPC and HTTP(based on URL-Query).
message DescribeSyncFlinkUIByInstanceId {
    // @inject_tag: json:"web_ui"
    string web_ui = 1;
}

