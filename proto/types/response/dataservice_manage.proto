syntax = "proto3";

package response;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbresponse";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbresponse";
// File name of class.
option java_outer_classname = "PBResponseDataServiceManage";
option java_multiple_files = false;

import "proto/types/model/dataservice.proto";
import "proto/types/model/datasource.proto";

message ListDataServiceClusters {
  // @inject_tag: json:"infos"
  repeated model.DataServiceCluster infos = 1;
  // @inject_tag: json:"has_more"
  bool has_more = 2;
  // @inject_tag: json:"total"
  int64 total = 3;
}

message DescribeDataServiceCluster {
  // @inject_tag: json:"info"
  model.DataServiceCluster info = 1;
}

message CreateDataServiceCluster {
  // @inject_tag: json:"id"
  string id = 1;
}

message ListApiGroups {
  // @inject_tag: json:"infos"
  repeated model.ApiGroup infos = 1;
  // @inject_tag: json:"has_more"
  bool has_more = 2;
  // @inject_tag: json:"total"
  int64 total = 3;
}

message CreateApiGroup {
  // @inject_tag: json:"id"
  string id = 1;
}

message ListApiConfigs {
  // @inject_tag: json:"infos"
  repeated model.ApiConfig infos = 1;
  // @inject_tag: json:"total"
  int64 total = 2;
  // @inject_tag: json:"has_more"
  bool has_more = 3;
}

message DescribeApiConfig {
  // @inject_tag: json:"api_config"
  model.ApiConfig api_config = 1;
  // @inject_tag: json:"data_source"
  model.DataSource data_source = 2;
  // @inject_tag: json:"api_group"
  model.ApiGroup api_group = 3;
  // @inject_tag: json:"service_cluster"
  model.DataServiceCluster service_cluster = 4;
}

message CreateApiConfig {
  // @inject_tag: json:"id"
  string id = 1 ;
}

message DescribeDataServiceApiVersion {
  // @inject_tag: json:"api_version"
  model.ApiVersion api_version = 1;
}

message ListDataServiceApiVersions {
  // @inject_tag: json:"infos"
  repeated model.ApiVersion infos = 1;
  // @inject_tag: json:"total"
  int64 total = 2;
  // @inject_tag: json:"has_more"
  bool has_more = 3;
}

message ListPublishedApiVersionsByClusterId {
  // @inject_tag: json:"infos"
  repeated model.ApiVersion infos = 1;
  // @inject_tag: json:"total"
  int64 total = 2;
  // @inject_tag: json:"has_more"
  bool has_more = 3;
}

message TestDataServiceApi {
  // @inject_tag: json:"logs"
  string logs = 1 ;
  // @inject_tag: json:"response_content"
  string response_content = 2  ;
}

// SourceKind used as reply parameters in RPC or response body in HTTP.
message DescribeServiceDataSourceKinds {
  // @inject_tag: json:"kinds"
  repeated model.ServiceDataSourceKind Kinds = 1;
}





