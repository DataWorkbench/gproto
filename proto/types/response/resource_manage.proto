syntax = "proto3";

package response;

option go_package = "github.com/DataWorkbench/gproto/pkg/types/pbresponse";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbresponse";
// File name of class.
option java_outer_classname = "PBResponseResourceManage";
option java_multiple_files = false;

import "github.com/yu31/proto-go-plugin/proto/validator.proto";
//import "github.com/yu31/proto-go-plugin/proto/gosql.proto";
//import "github.com/yu31/proto-go-plugin/proto/defaults.proto";

import "proto/types/model/resource.proto";

// CreateDir used as reply parameters in RPC.
message CreateDir{
  // The workspace id that generated by system.
  // @inject_tag: json:"id"
  string id = 1 [(validator.field).tags.string = {byte_len_eq: 20}];
}

// UploadFile used as reply parameters in RPC.
message UploadFile{
  // The workspace id that generated by system.
  // @inject_tag: json:"id"
  string id = 1 [(validator.field).tags.string = {byte_len_eq: 20}];
}

// DownloadFile used as a request parameters for RPC and HTTP(based on URL-Query)
message DownloadFile{
  // The File data.
  // @inject_tag: json:"-"
  bytes data = 1;

  // @inject_tag: json:"size"
  int64 size = 2;

  // @inject_tag: json:"name"
  string name = 3;
}

// ListResources used as a request parameters for RPC and HTTP(based on URL-Query)
message ListResources {
  // @inject_tag: json:"infos"
  repeated model.Resource infos = 1;

  // @inject_tag: json:"has_more"
  bool has_more = 2;

  // @inject_tag: json:"total"
  int64  total = 3;
}
