syntax = "proto3";

package response;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbresponse";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbresponse";
// File name of class.
option java_outer_classname = "PBResponseStreamJobManage";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
//import "github.com/yu31/protoc-plugin/proto/gosql.proto";
//import "github.com/yu31/protoc-plugin/proto/defaults.proto";

import "proto/types/model/stream_job.proto";

// ListStreamJobs used as reply parameters in RPC or response body in HTTP.
message ListStreamJobs {
  // @inject_tag: json:"infos"
  repeated model.StreamJob infos = 1;

  // @inject_tag: json:"has_more"
  bool has_more = 2;

  // @inject_tag: json:"total"
  int64 total = 3;
}

// CreateStreamJob used as reply parameters in RPC.
message CreateStreamJob {
  // The stream job id that generated by system.
  // @inject_tag: json:"id"
  string id = 1;
}

// DescribeStreamJob used as reply parameters in RPC.
message DescribeStreamJob {
  model.StreamJob info = 1;
}

// GetStreamJobCode used as reply parameters in RPC.
message GetStreamJobCode {
  model.StreamJobCode code = 1 [ (validator.field).tags.message = { skip: true} ];
}

// GetStreamJobArgs used as reply parameters in RPC.
message GetStreamJobArgs {
  model.StreamJobArgs info = 1 [ (validator.field).tags.message = { skip: true} ];
}

// GetStreamJobSchedule used as reply parameters in RPC.
message GetStreamJobSchedule {
  model.StreamJobSchedule info = 1 [ (validator.field).tags.message = { skip: true} ];
}

// ListReleaseStreamJobs used as reply parameters in RPC or response body in HTTP.
message ListReleaseStreamJobs {
  // @inject_tag: json:"infos"
  repeated model.StreamJobRelease infos = 1;

  // @inject_tag: json:"has_more"
  bool has_more = 2;

  // @inject_tag: json:"total"
  int64 total = 3;
}

// ListStreamJobVersions used as reply parameters in RPC or response body in HTTP.
message ListStreamJobVersions {
  // @inject_tag: json:"infos"
  repeated model.StreamJob infos = 1;

  // @inject_tag: json:"has_more"
  bool has_more = 2;
}

message ListBuiltInConnectors {
  // Items store the available flink version lists.
  // @inject_tag: json:"items"
  repeated string items = 1;
}

// DescribeFlinkUIByInstanceId used as a request parameters for RPC and HTTP(based on URL-Query).
message DescribeFlinkUIByInstanceId {
  // @inject_tag: json:"web_ui"
  string web_ui = 1;
}
