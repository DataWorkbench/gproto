syntax = "proto3";

package request;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbrequest";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbrequest";
// File name of class.
option java_outer_classname = "PBRequestIaaSProxy";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
import "github.com/yu31/protoc-plugin/proto/defaults.proto";

message ListIaaSRouters {
  // The used_id fixed to request user id.
  // @inject_tag: json:"user_id" form:"-" swaggerignore:"true"
  string user_id = 1 [ (validator.field).tags.string = { byte_len_gt:1, byte_len_lt: 65 } ];

  // Limit the maximum number of entries returned this time.
  // Not required, Max 100, default 100.
  // @inject_tag: json:"limit" form:"limit"
  int32 limit = 2 [ (defaults.field).basic = "100", (validator.field).tags.int = { gt: 0, lte: 100 } ];

  // The offset position. Not required, default 0.
  // @inject_tag: json:"offset" form:"offset"
  int32 offset = 3 [ (validator.field).tags.int  = { gte: 0 } ];
}

message ListIaaSRouterVXNets {
  // The used_id fixed to request user id.
  // @inject_tag: json:"router_id" form:"-" swaggerignore:"true"
  string router_id = 1 [ (validator.field).tags.string = { prefix: "rtr-" } ];

  // Limit the maximum number of entries returned this time.
  // Not required, Max 100, default 100.
  // @inject_tag: json:"limit" form:"limit"
  int32 limit = 2 [ (defaults.field).basic = "100", (validator.field).tags.int = { gt: 0, lte: 100 } ];

  // The offset position. Not required, default 0.
  // @inject_tag: json:"offset" form:"offset"
  int32 offset = 3 [ (validator.field).tags.int  = { gte: 0 } ];
}
