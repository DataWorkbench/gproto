syntax = "proto3";

package request;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbrequest";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbrequest";
// File name of class.
option java_outer_classname = "PBRequestNetworkManage";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
import "github.com/yu31/protoc-plugin/proto/defaults.proto";
//import "github.com/yu31/protoc-plugin/proto/gosql.proto";

message ListNetworks {
  // Limit the maximum number of entries returned this time.
  // Not required, Max 100, default 100.
  // @inject_tag: json:"limit" form:"limit"
  int32 limit = 1 [ (defaults.field).basic = "100", (validator.field).tags.int = { gt: 0, lte: 100 } ];

  // The offset position. Not required, default 0.
  // @inject_tag: json:"offset" form:"offset"
  int32 offset = 2 [ (validator.field).tags.int  = { gte: 0 } ];

  // The field list used to sorted query results.
  // Optional values: {id, name, created, updated}.
  // Multiple fields are separated by commas(","), eg: sort_by="updated".
  // Not required, default: id.
  // @inject_tag: json:"sort_by" form:"sort_by"
  string sort_by = 3 [ (validator.field).tags.string = { in: ["", "id", "created", "updated", "name"] } ];

  // Reverse order results. Not required, default: false.
  // @inject_tag: json:"reverse" form:"reverse"
  bool reverse = 4 [ (validator.field) = { } ];

  // Search with workspace name; Not required.
  // @inject_tag: json:"search" form:"search"
  string search = 5 [ (validator.field) = { } ];

  // The workspace id in HTTP Request-URI. Is Required.
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 6 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];

  // Filter by network name; valid if `search` is empty; Not required.
  // @inject_tag: json:"name" form:"name"
  string name = 7 [(validator.field) = {}];
}

message DeleteNetworks {
  // The list of network id. Is required, Min 1, Max 100.
  // @inject_tag: json:"network_ids"
  repeated string network_ids = 1 [ (validator.field).tags.repeated = { len_gt: 0, len_lte: 100 } ];
}

message CreateNetwork {
  // The workspace id in HTTP Request-URI
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];

  // The user-id of created this cluster. It fixed to request user id.
  // @inject_tag: json:"created_by" swaggerignore:"true"
  string created_by = 2 [ (validator.field).tags.string = { byte_len_lt: 65 } ];

  // Network Name. Is required.
  // @inject_tag: json:"name"
  string name = 3 [ (validator.field).tags.string = { byte_len_gt: 1, byte_len_lte: 128 } ];

  // VPC's route id, Is required.
  // @inject_tag: json:"router_id"
  string router_id = 4 [ (validator.field).tags.string = { prefix: "rtr-" } ];

  // vxnet id. Is required.
  // @inject_tag: json:"vxnet_id"
  string vxnet_id = 5 [ (validator.field).tags.string = { prefix: "vxnet-" } ];
}

message UpdateNetwork {
  // The workspace id in HTTP Request-URI
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];

  // The flink cluster id in HTTP Request-URI
  // @inject_tag: json:"network_id" uri:"network_id" swaggerignore:"true"
  string network_id = 2 [ (validator.field).tags.string = { byte_len_eq: 20 } ];

  // Network Name. Is required.
  // @inject_tag: json:"name"
  string name = 3 [ (validator.field).tags.string = { byte_len_gt: 1, byte_len_lte: 128 } ];

  // VPC's route id, Is required.
  // @inject_tag: json:"router_id"
  string router_id = 4 [ (validator.field).tags.string = { prefix: "rtr-" } ];

  // vxnet id. Is required.
  // @inject_tag: json:"vxnet_id"
  string vxnet_id = 5 [ (validator.field).tags.string = { prefix: "vxnet-" } ];
}

message DescribeNetwork {
  // The workspace id in HTTP Request-URI
  // @inject_tag: json:"network_id" uri:"network_id" swaggerignore:"true"
  string network_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20 } ];
}
