syntax = "proto3";

package request;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbrequest";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbrequest";
// File name of class.
option java_outer_classname = "PBRequestResourceData";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
//import "github.com/yu31/protoc-plugin/proto/defaults.proto";


message WriteFileData {
  // The workspace id
  // @inject_tag: json:"space_id"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];

  // @inject_tag: json:"resource_id"
  string resource_id = 2 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "res-" }];

  // The file version id, Each upload generates a new ID.
  // @inject_tag: json:"version"
  string version = 3 [ (validator.field).tags.string = { byte_len_eq: 16 } ];

  // The resource file size. prevent data missing.
  // @inject_tag: json:"size"
  int64 size = 4;

  // The data for resource. required.
  bytes data = 5;
}

message ReadFileData {
  // The workspace id
  // @inject_tag: json:"space_id"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];

  // The resource id in HTTP Request_URI.
  // @inject_tag: json:"resource_id"
  string resource_id = 2 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "res-" } ];

  // The file version id.
  // @inject_tag: json:"version"
  string version = 3 [ (validator.field).tags.string = { byte_len_eq: 16 } ];
}

message DeleteFileData {
  // The workspace id in HTTP Request-URI
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];

  // @inject_tag: json:"resource_id"
  string resource_id = 2 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "res-" }];

  // The file version id, Each upload generates a new ID.
  // @inject_tag: json:"version"
  string version = 3 [ (validator.field).tags.string = { byte_len_eq: 16 } ];
}

message DeleteFileDataByFileIds {
  // The workspace id in HTTP Request-URI
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];

  // The list of resource id. Is required, Min 1 Max 100.
  // @inject_tag: json:"resource_ids"
  repeated string resource_ids = 2 [(validator.field).tags.repeated = { len_gt: 0, len_lte: 100; item: { string: { prefix: "res-" } } } ];
}

message DeleteFileDataBySpaceIds {
  // The list of workspace id. Is required, Min 1, Max 100.
  // @inject_tag: json:"space_ids"
  repeated string space_ids = 1 [ (validator.field).tags.repeated = { len_gt: 0, len_lte: 100, item: { string: { prefix: "wks-" } } } ];
}
