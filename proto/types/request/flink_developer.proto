syntax = "proto3";

package request;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbrequest";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbrequest";
// File name of class.
option java_outer_classname = "PBRequestFlinkDeveloper";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
//import "github.com/yu31/protoc-plugin/proto/defaults.proto";

import "proto/types/model/stream_job.proto";
import "proto/types/model/developer.proto";

message SubmitFlinkJob {
  // JobID
  // @inject_tag: json:"flink_id"
  string flink_id = 1  [(validator.field).tags.string = {byte_len_eq: 32}];

  // The internal access address of flink cluster.
  // @inject_tag: json:"flink_url"
  string flink_url = 2 [(validator.field).tags.string = {ne: ""}];

  // The version of flink cluster.
  // @inject_tag: json:"flink_version"
  string flink_version = 3 [(validator.field).tags.string = {ne: ""}];

  // Savepoint Path
  // @inject_tag: json:"savepoint_path"
  string savepoint_path = 4 [(validator.field) = {}];

  // ENV
  // @inject_tag: json:"args"
  model.StreamJobArgs args = 5  [(validator.field) = {}];

  // code
  // @inject_tag: json:"code"
  model.StreamJobCode code = 6  [(validator.field) = {}];
}

message SubmitFlinkJobInteractive{
  // SubmitFlinkJob
  // @inject_tag: json:"submit_flink_job"
  SubmitFlinkJob job = 1 [(validator.field) = {}];

  // operator for interactive submit
  // @inject_tag: json:"op"
  model.InteractiveMessage.Op op = 2 [(validator.field) = {}];
}

message ValidateFlinkJob {
  // code
  // @inject_tag: json:"code"
  model.StreamJobCode code = 1;
}

message ValidateFlinkJob_v2{
  // args
  // @inject_tag: json:"args"
  model.StreamJobArgs args = 1 [(validator.field) = {}];

  // code
  // @inject_tag: json:"code"
  model.StreamJobCode code = 2;
}