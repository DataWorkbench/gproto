syntax = "proto3";

package request;

option go_package = "github.com/DataWorkbench/gproto/xgo/types/pbrequest";

// Package name of class.
option java_package = "com.dataomnis.gproto.types.pbrequest";
// File name of class.
option java_outer_classname = "PBRequestDataSourceManage";
option java_multiple_files = false;

import "github.com/yu31/protoc-plugin/proto/validator.proto";
import "github.com/yu31/protoc-plugin/proto/defaults.proto";
import "proto/types/model/dataservice.proto";

message ListDataServiceClusters {
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];
  // @inject_tag: json:"limit" form:"limit"
  int32 limit = 2 [ (defaults.field).basic = "100", (validator.field).tags.int = { gt: 0, lte: 100 } ];
  // @inject_tag: json:"offset" form:"offset"
  int32 offset = 3 [ (validator.field).tags.int  = { gte: 0 } ];
  // @inject_tag: json:"sort_by" form:"sort_by"
  string sort_by = 4 [ (validator.field).tags.string = { in: ["", "id", "created", "updated", "name"] } ];
  // @inject_tag: json:"reverse" form:"reverse"
  bool reverse = 5 [ (validator.field) = { } ];
  // @inject_tag: json:"name" form:"name"
  string name = 6 [ (validator.field) = { } ];
}

message DescribeDataServiceCluster {
  // @inject_tag: json:"id" uri:"id" swaggerignore:"true"
  string id = 1 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsc-" } ];
}

message UpdateDataServiceCluster {
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];
  // @inject_tag: json:"id" uri:"id" swaggerignore:"true"
  string id = 2 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsc-" } ];
  // @inject_tag: json:"service_cluster"
  CreateDataServiceCluster service_cluster = 3 ;
}

message CreateDataServiceCluster {
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];
  // @inject_tag: json:"name"
  string name = 2 [ (validator.field) = { length_gt: 1 , length_lt: 65}  ];
  // @inject_tag: json:"resource_spec"
  string resource_spec = 3 [ (validator.field) = { length_gt: 1 , length_lt: 65}  ];
}

message ListApiVersions {
  // @inject_tag: json:"api_id"
  string api_id = 1 [ (validator.field) = { length_gt: 1 , length_lt: 65}  ];
  // @inject_tag: json:"limit" form:"limit"
  int32 limit = 2 [ (defaults.field).basic = "100", (validator.field).tags.int = { gt: 0, lte: 100 } ];
  // @inject_tag: json:"offset" form:"offset"
  int32 offset = 3 [ (validator.field).tags.int  = { gte: 0 } ];
  // @inject_tag: json:"sort_by" form:"sort_by"
  string sort_by = 4 [ (validator.field).tags.string = { in: ["", "id", "created", "updated", "name"] } ];
}

message ListPublishedApis {
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];
  // @inject_tag: json:"limit" form:"limit"
  int32 limit = 2 [ (defaults.field).basic = "100", (validator.field).tags.int = { gt: 0, lte: 100 } ];
  // @inject_tag: json:"offset" form:"offset"
  int32 offset = 3 [ (validator.field).tags.int  = { gte: 0 } ];
  // @inject_tag: json:"sort_by" form:"sort_by"
  string sort_by = 4 [ (validator.field).tags.string = { in: ["", "id", "created", "updated", "name"] } ];
  // @inject_tag: json:"reverse" form:"reverse"
  bool reverse = 5;
  // @inject_tag: json:"search" form:"search"
  string search = 6;
  // @inject_tag: json:"name" form:"name"
  string name = 7;
}

message DescribeApiVersion{
  // @inject_tag: json:"version_id" uri:"version_id" swaggerignore:"true"
  string version_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsv-" } ];
}

message PublishCustomerApi {
  // @inject_tag: json:"api_id"
  string api_id = 1 [ (validator.field) = { length_gt: 1 , length_lt: 65}  ];
}

message ListCustomerApis {
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [(validator.field).tags.string = {byte_len_eq: 20; prefix: "wks-"}];
}

message UpdateCustomerApi {
  // @inject_tag: json:"space_id" uri:"space_id" swaggerignore:"true"
  string space_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20; prefix: "wks-" } ];
  // @inject_tag: json:"api_id" uri:"api_id" swaggerignore:"true"
  string api_id = 2 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsa-" } ];
  // @inject_tag: json:"api_config"
  CreateCustomerApi api_config = 3 ;
}

message DescribeCustomerApi {
  // @inject_tag: json:"api_id" uri:"api_id" swaggerignore:"true"
  string api_id = 1 [ (validator.field).tags.string = { byte_len_eq: 20, prefix: "dsa-" } ];
}

message CreateCustomerApi {
  // @inject_tag: json:"api_name"
  string api_name = 1 [ (validator.field) = { length_gt: 1 , length_lt: 65}  ];
  // @inject_tag: json:"api_path"
  string api_path = 2 [ (validator.field) = { length_gt: 0 , length_lt: 200}  ];
  // @inject_tag: json:"api_mode"
  model.ApiConfig.ApiMode api_mode = 3  [ (validator.field) = {int_gt: 0, int_lt: 3} ];
  // @inject_tag: json:"api_description"
  string api_description = 4 [ (validator.field) = {length_lt: 257 }  ];
  // @inject_tag: json:"space_id"
  string space_id = 5 [ (validator.field) = { length_eq: 20 } ];
  // @inject_tag: json:"protocols"
  repeated string protocols = 6 [ (validator.field) = { length_gt: 0 , length_lt: 20}  ];
  // @inject_tag: json:"request_method"
  model.ApiConfig.RequestMethod request_method = 7 [ (validator.field) = {int_gt: 0, int_lt: 6} ];
  // @inject_tag: json:"response_type"
  model.ApiConfig.ResponseType response_type = 8  [ (validator.field) = {int_gt: 0, int_lt: 3} ];
  // @inject_tag: json:"timeout"
  int64 timeout = 9 [(validator.field) = {int_gt: 0}];
  // @inject_tag: json:"datasource_id"
  string datasource_id = 10 [ (validator.field) = { length_lt: 21 }  ];
  // @inject_tag: json:"wizardDetails"
  WizardDetails wizardDetails = 11 [ (validator.field) = { } ];
  // @inject_tag: json:"script"
  string script = 12 [ (validator.field) = {length_lt: 20000 }  ];
  // @inject_tag: json:"api_service_id"
  string api_service_id = 5 [ (validator.field) = { length_eq: 20 } ];
}

message WizardDetails {
  // @inject_tag: json:"request_params"
  repeated WizardRequestParameters request_params = 1;
  // @inject_tag: json:"response_params"
  repeated WizardResponseParameters response_params = 2;
}

message WizardRequestParameters {
  // @inject_tag: json:"column_name"
  string column_name = 1 [ (validator.field) = { length_gt: 0 , length_lt: 65}  ];
  // @inject_tag: json:"default_value"
  string default_value = 2 [ (validator.field) = { length_gt: 0 , length_lt: 65}  ];
  // @inject_tag: json:"example_value"
  string example_value = 3 [ (validator.field) = { length_gt: 0 , length_lt: 65}  ];
  // @inject_tag: json:"is_required"
  bool is_required = 4 [(validator.field) = {}];
  // @inject_tag: json:"data_type"
  model.ParameterDataType data_type = 5 [ (validator.field) = {int_gt: 0, int_lt: 6} ];
  // @inject_tag: json:"param_description"
  string param_description = 6 [ (validator.field) = { length_gt: 0 , length_lt: 200}  ];
  // @inject_tag: json:"param_name"
  string param_name = 7 [ (validator.field) = { length_gt: 0 , length_lt: 65}  ];
  // @inject_tag: json:"param_operator"
  model.ApiRequestParams.ParameterOperator param_operator = 8  [ (validator.field) = {int_gt: 0, int_lt: 3} ];
  // @inject_tag: json:"param_position"
  model.ApiRequestParams.ParameterPosition param_position = 9  [ (validator.field) = {int_gt: 0, int_lt: 3} ];
}

message WizardResponseParameters {
  // @inject_tag: json:"column_name" default:"" binding:"gte=1,lte=64" required:"true"
  string column_name = 1 [ (validator.field) = { length_gt: 0 , length_lt: 65}  ];
  // @inject_tag: json:"default_value" default:"" binding:"gte=1,lte=64" required:"true"
  string default_value = 2 [ (validator.field) = { length_gt: 0 , length_lt: 65}  ];
  // @inject_tag: json:"example_value" default:"" binding:"gte=1,lte=64" required:"true"
  string example_value = 3 [ (validator.field) = { length_gt: 0 , length_lt: 65}  ];
  // @inject_tag: json:"data_type" binding:"gte=1,lte=5" required:"true" mininum:"0" maximum:"5"
  model.ParameterDataType data_type = 5 [ (validator.field) = {int_gt: 0, int_lt: 6} ];
  // @inject_tag: json:"param_description" default:"" binding:"gte=0,lte=256" required:"false" minLength:"0" maxLength:"200"
  string param_description = 6 [ (validator.field) = { length_gt: 0 , length_lt: 200}  ];
  // @inject_tag: json:"param_name" default:"" binding:"gte=1,lte=64" required:"true"
  string param_name = 7 [ (validator.field) = { length_gt: 0 , length_lt: 65}  ];
}

message TestCustomerApi {
  // @inject_tag: json:"api_id"
  string api_id = 1 [ (validator.field) = { length_gt: 1 , length_lt: 65}  ];
  // @inject_tag: json:"request_content"
  string request_content = 2  [ (validator.field) = { length_gt: 1 , length_lt: 2000}  ];
  //repeated RequestValue request_values = 2;
}

//message RequestValue {
//  // @inject_tag: json:"param_id"
//  string param_id = 1 [ (validator.field) = { length_gt: 1 , length_lt: 65}  ];
//  // @inject_tag: json:"value"
//  string value = 2 ;
//}




