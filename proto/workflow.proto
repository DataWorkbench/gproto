syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/wfpb";

package wfpb;

import "model.proto";
import "request.proto";
import "response.proto";

// Workflow Service
service Workflow {
	// DeleteAllFlows delete all workflow that specified workspace id.
	// And removed all workflow task from schedule system.
	rpc DeleteAllFlows(request.DeleteAllFlows) returns(model.EmptyStruct) {}
	
	// Interface for stream workflow.
	//
	// ListStreamFlows to get a list of stream workflow of the workspace.
	rpc ListStreamFlows(request.ListStreamFlows) returns (response.ListStreamFlows) {}
	
	// CreateStreamFlow to create a new stream workflow.
	rpc CreateStreamFlow(request.CreateStreamFlow) returns (response.CreateStreamFlow) {}
	
	// DeleteStreamFlow to delete the specified stream workflow.
	rpc DeleteStreamFlow(request.DeleteStreamFlow) returns (model.EmptyStruct) {}
	
	// UpdateStreamFlow to update the info for the specified stream workflow.
	rpc UpdateStreamFlow(request.UpdateStreamFlow) returns (model.EmptyStruct) {}
	
	// DescribeStreamFlow to get the info of the specified stream workflow.
	rpc DescribeStreamFlow(request.DescribeStreamFlow) returns (response.DescribeStreamFlow) {}
	
	// SetStreamFlowNode to set the node properties of the specified stream workflow.
	rpc SetStreamFlowNode(request.SetStreamFlowNode) returns (model.EmptyStruct)  {}
	
	// GetStreamFlowNode to get the node properties of the specified stream workflow.
	rpc GetStreamFlowNode(request.GetStreamFlowNode) returns (response.GetStreamFlowNode) {}
	
	// SetStreamFlowEnv to set the environmental parameters of the specified stream workflow.
	rpc SetStreamFlowEnv(request.SetStreamFlowEnv) returns (model.EmptyStruct) {}
	
	// GetStreamFlowEnv to get the environmental parameters of the specified stream workflow.
	rpc GetStreamFlowEnv(request.GetStreamFlowEnv) returns (response.GetStreamFlowEnv) {}
	
	// SetStreamFlowSchedule to set the schedule properties of the specified stream workflow.
	rpc SetStreamFlowSchedule(request.SetStreamFlowSchedule) returns (model.EmptyStruct) {}
	
	// GetStreamFlowSchedule to get the schedule properties of the specified stream workflow.
	rpc GetStreamFlowSchedule(request.GetStreamFlowSchedule) returns (response.GetStreamFlowSchedule) {}
	
	// ExecuteStreamFlow to manual execution a stream workflow task.
	rpc ExecuteStreamFlow(request.ExecuteStreamFlow) returns (model.EmptyStruct) {}
	
	// Interface for stream workflow release.
	//
	// ReleaseStreamFlow to publish the specified workflow to schedule system with a new version.
	rpc ReleaseStreamFlow(request.ReleaseStreamFlow) returns (model.EmptyStruct) {}
	
	// SuspendStreamFlow to suspend the specified workflow in schedule system.
	rpc SuspendReleaseStreamFlow(request.SuspendReleaseStreamFlow) returns (model.EmptyStruct) {}
	
	// ResumeStreamFlow to resume the suspended workflow in schedule system.
	rpc ResumeReleaseStreamFlow(request.ResumeReleaseStreamFlow) returns (model.EmptyStruct) {}
	
	// ListReleaseStreamFlows for gets a list of all published workflow in the workspace.
	rpc ListReleaseStreamFlows(request.ListReleaseStreamFlows) returns (response.ListReleaseStreamFlows) {}
	
	// Interface for stream workflow versions.
	//
	// ListStreamVersions for gets a list of all versions of the specified workflow.
	rpc ListStreamFlowVersions(request.ListStreamFlowVersions) returns (response.ListStreamFlowVersions) {}
	
	// DescribeStreamVersion for get the info of the workflow of the specified version.
	rpc DescribeStreamFlowVersion(request.DescribeStreamFlowVersion) returns (response.DescribeStreamFlowVersion) {}
	
	// GetStreamVersionNode for get the node properties of the workflow of the specified version.
	rpc GetStreamFlowVersionNode(request.GetStreamFlowVersionNode) returns (response.GetStreamFlowVersionNode) {}
	
	// GetStreamVersionEnv for get the environmental parameters of the workflow of the specified version.
	rpc GetStreamFlowVersionEnv(request.GetStreamFlowVersionEnv) returns (response.GetStreamFlowVersionEnv) {}
	
	// GetStreamReleaseSchedule for get the schedule properties of the workflow of the specified version.
	rpc GetStreamFlowVersionSchedule(request.GetStreamFlowVersionSchedule) returns (response.GetStreamFlowVersionSchedule) {}
}
