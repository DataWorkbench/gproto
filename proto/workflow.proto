syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/wfpb";

package wfpb;

import "model.proto";
import "request.proto";
import "response.proto";

// Workflow Service
service Workflow {
	// DeleteFlowsBySpaceIds delete the specified workspaces and its resources;
	// This Interface called by apiserver(DeleteWorkspaces).
	// Resources includes:
	//   - Workflow of stream and batch and them's history version.
	//   - Node, env schedule and them's history version.
	//   - Released's workflow.
	//   - Offline workflow and force stop all running instances. (By Scheduler-Server)
	//   - All instances records. (By Scheduler-Server)
	rpc DeleteFlowsBySpaceIds(request.DeleteWorkspaces) returns(model.EmptyStruct) {}
	
	// Interface for stream workflow.
	//
	// ListStreamFlows to get a list of stream workflow of the workspace.
	rpc ListStreamFlows(request.ListStreamFlows) returns (response.ListStreamFlows) {}

	// DeleteStreamFlows delete stream workflow ant its related resources where in ids.
	// Resources includes:
	//  - History version and Released's workflow.
	//  - Node, env schedule and its history version.
	//  - Offline workflow and force stop all running instances. (By Scheduler-Server)
	//  - All instances records. (By Scheduler-Server)
	rpc DeleteStreamFlows(request.DeleteStreamFlows) returns (model.EmptyStruct) {}
	
	// CreateStreamFlow to create a new stream workflow.
	rpc CreateStreamFlow(request.CreateStreamFlow) returns (response.CreateStreamFlow) {}
	
	// UpdateStreamFlow to update the info for the specified stream workflow.
	rpc UpdateStreamFlow(request.UpdateStreamFlow) returns (model.EmptyStruct) {}
	
	// DescribeStreamFlow to get the info of the specified stream workflow.
	rpc DescribeStreamFlow(request.DescribeStreamFlow) returns (response.DescribeStreamFlow) {}
	
	// SetStreamFlowNode to set the node properties of the specified stream workflow.
	rpc SetStreamFlowNode(request.SetStreamFlowNode) returns (model.EmptyStruct)  {}
	
	// GetStreamFlowNode to get the node properties of the specified stream workflow.
	rpc GetStreamFlowNode(request.GetStreamFlowNode) returns (response.GetStreamFlowNode) {}
	
	// SetStreamFlowEnv to set the environmental parameters of the specified stream workflow.
	rpc SetStreamFlowEnv(request.SetStreamFlowEnv) returns (model.EmptyStruct) {}
	
	// GetStreamFlowEnv to get the environmental parameters of the specified stream workflow.
	rpc GetStreamFlowEnv(request.GetStreamFlowEnv) returns (response.GetStreamFlowEnv) {}
	
	// SetStreamFlowSchedule to set the schedule properties of the specified stream workflow.
	rpc SetStreamFlowSchedule(request.SetStreamFlowSchedule) returns (model.EmptyStruct) {}
	
	// GetStreamFlowSchedule to get the schedule properties of the specified stream workflow.
	rpc GetStreamFlowSchedule(request.GetStreamFlowSchedule) returns (response.GetStreamFlowSchedule) {}
	
	// ExecuteStreamFlow to manual execution a stream workflow task.
	rpc ExecuteStreamFlow(request.ExecuteStreamFlow) returns (model.EmptyStruct) {}
	
	// Interface for stream workflow release.
	//
	// ReleaseStreamFlow to publish the specified workflow to schedule system with a new version.
	rpc ReleaseStreamFlow(request.ReleaseStreamFlow) returns (model.EmptyStruct) {}
	
	// SuspendReleaseStreamFlows to suspend the specified workflow list in schedule system.
	rpc SuspendReleaseStreamFlows(request.SuspendReleaseStreamFlows) returns (model.EmptyStruct) {}
	
	// ResumeReleaseStreamFlows to resume the suspended workflow list in schedule system.
	rpc ResumeReleaseStreamFlows(request.ResumeReleaseStreamFlows) returns (model.EmptyStruct) {}
	
	// ListReleaseStreamFlows for gets a list of all published workflow in the workspace.
	rpc ListReleaseStreamFlows(request.ListReleaseStreamFlows) returns (response.ListReleaseStreamFlows) {}
	
	// Interface for stream workflow versions.
	//
	// ListStreamVersions for gets a list of all versions of the specified workflow.
	rpc ListStreamFlowVersions(request.ListStreamFlowVersions) returns (response.ListStreamFlowVersions) {}
	
	// DescribeStreamVersion for get the info of the workflow of the specified version.
	rpc DescribeStreamFlowVersion(request.DescribeStreamFlow) returns (response.DescribeStreamFlow) {}
	
	// GetStreamVersionNode for get the node properties of the workflow of the specified version.
	rpc GetStreamFlowVersionNode(request.GetStreamFlowNode) returns (response.GetStreamFlowNode) {}
	
	// GetStreamVersionEnv for get the environmental parameters of the workflow of the specified version.
	rpc GetStreamFlowVersionEnv(request.GetStreamFlowEnv) returns (response.GetStreamFlowEnv) {}
	
	// GetStreamReleaseSchedule for get the schedule properties of the workflow of the specified version.
	rpc GetStreamFlowVersionSchedule(request.GetStreamFlowSchedule) returns (response.GetStreamFlowSchedule) {}
}
