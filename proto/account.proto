syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/accountpb";

option java_package = "com.workbench.proto.accountpb";
option java_outer_classname = "AccountPB";
option java_multiple_files = true;

import "github.com/mwitkow/go-proto-validators/validator.proto";

service Account {
    rpc ValidateRequestSignature(ValidateRequestSignatureRequest) returns (ValidateRequestSignatureReply) {}
    rpc DescribeUsers(DescribeUsersRequest) returns (DescribeUsersReply) {}
    rpc DescribeAccessKey(DescribeAccessKeyRequest) returns (DescribeAccessKeyReply) {}
}


message DescribeAccessKeyRequest {
    string access_key_id = 1;
}

message DescribeAccessKeyReply {
    string owner = 1;
    string secret_access_key = 2;
}

message ValidateRequestSignatureRequest {
    string req_method = 1;
    string req_path = 2;
    string req_query_string = 3;
    string req_body = 4;
    string req_signature = 5;
    string req_access_key_id = 6;
    string req_source = 7;
    string req_user_agent = 8;
}

message ValidateRequestSignatureReply {
    int32 status = 1  [ (validator.field) = { int_gt: -1 } ];
    string message = 2 ;
    string user_id = 3;
}


message DescribeUsersRequest {
    repeated string users = 1;
    int32 limit = 2 [ (validator.field) = { int_gt: 0, int_lt: 101 } ];
    int32 offset = 3 [ (validator.field) = { msg_exists: true } ];
    string req_source = 4;
}

message User {
    string user_id = 1;
    string user_name = 2;
    string lang = 3;
    string email = 4;
    string phone = 5;
    string status = 6;
    string role = 7;
    string currency = 8;
    string gravatar_email = 9;
    int32 privilege = 10;
    repeated string zones = 11;
    repeated string regions = 12;
}

message DescribeUsersReply {
    repeated User user_set = 1 [ (validator.field) = { } ];
    int64 total_count = 2;
    int32 status = 3  [ (validator.field) = { int_gt: -1 } ];
    string message = 4 ;
}
