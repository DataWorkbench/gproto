syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/shpb";

package shpb;

import "model.proto";
import "request.proto";
import "response.proto";

// Scheduler Service
service Scheduler {
	// Interface for stream workflow task.
	//
	// DeleteFlowsBySpaceIds delete the specified workspaces and its resources;
	// This Interface called by flowmanager(DeleteFlowsBySpaceIds).
	// Resources Includes:
	//   - Offline workflow and force stop all running instances.
	//   - All instances records.
	rpc DeleteFlowsBySpaceIds(request.DeleteWorkspaces) returns (model.EmptyStruct) {}
	
	// DeleteStreamFlows delete stream workflow ant its related resources where in ids.
	// Resources includes:
	//  - Offline workflow and force stop all running instances.
	//  - All instances records.
	rpc DeleteStreamFlows(request.DeleteStreamFlows) returns (model.EmptyStruct) {}
	
	// FIXME: Review it.
	// Execute execute immediately a workflow task. It trigger by user on console.
	rpc ExecuteStreamFlow(request.ExecuteStreamFlow) returns (model.EmptyStruct) {}
	
	// Submit submit a workflow task to scheduler system, It will
	// be cover if old job exists.
	// FIXME: Review it.
	rpc SubmitStreamFlows(request.SubmitStreamFlows) returns (model.EmptyStruct) {}
	
	// Remove remove specific workflow task from scheduler system.
	// FIXME: Review it.
	rpc OfflineStreamFlows(request.OfflineStreamFlows) returns (model.EmptyStruct) {}

	
	// Interface for stream workflow cycle instance.
	//
	rpc ListStreamCycleInsts(request.ListStreamInsts)         returns (response.ListStreamInsts) {}
	rpc TerminateStreamCycleInsts(request.TerminateStreamInsts) returns (model.EmptyStruct)       {}
	rpc SuspendStreamCycleInsts(request.SuspendStreamInsts)     returns (model.EmptyStruct)       {}
	rpc ResumeStreamCycleInsts(request.ResumeStreamInsts)       returns (model.EmptyStruct)       {}
	
	// Interface for stream workflow test instance.
	//
	rpc ListStreamTestInsts(request.ListStreamInsts)         returns (response.ListStreamInsts) {}
	rpc TerminateStreamTestInsts(request.TerminateStreamInsts) returns (model.EmptyStruct)       {}
	rpc SuspendStreamTestInsts(request.SuspendStreamInsts)     returns (model.EmptyStruct)       {}
	rpc ResumeStreamTestInsts(request.ResumeStreamInsts)       returns (model.EmptyStruct)       {}
	
	// Interface for monitor.
	rpc ListMonitorRules(request.ListMonitorRules)       returns (response.ListMonitorRules)    {}
	rpc DeleteMonitorRules(request.DeleteMonitorRules)   returns (model.EmptyStruct)            {}
	rpc EnableMonitorRules(request.EnableMonitorRules)   returns (model.EmptyStruct)            {}
	rpc DisableMonitorRules(request.DisableMonitorRules) returns (model.EmptyStruct)            {}
	rpc CreateMonitorRule(request.CreateMonitorRule)     returns (model.EmptyStruct)            {}
	rpc UpdateMonitorRule(request.UpdateMonitorRule)     returns (model.EmptyStruct)            {}
	rpc DescribeMonitorRule(request.DescribeMonitorRule) returns (response.DescribeMonitorRule) {}
}
