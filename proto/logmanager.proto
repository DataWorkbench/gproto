syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/logpb";

// Package name of class.
option java_package = "com.github.dataomnis.logpb";
// File name of class.
option java_outer_classname = "LogPB";
option java_multiple_files = false;

//import "github.com/mwitkow/go-proto-validators/validator.proto";

service LogManager {
  rpc ListJMHistoryLogFiles(ListHistLogsRequest) returns (ListJMHistLogsReply) {}
  rpc ListTMHistoryLogFiles(ListHistLogsRequest) returns (ListTMHistLogsReply) {}
  rpc DownloadJobMgrLogFile(DownloadJobMgrRequest) returns (stream FileContent) {}
  rpc DownloadTaskMgrLogFile(DownloadTaskMgrRequest) returns (stream FileContent) {}
  rpc UploadLogFile(UploadFileRequest) returns (UploadFileReply) {}
  rpc GetUploadingTaskStat(TaskStatRequest) returns (TaskStatReply) {}
}

message ListHistLogsRequest {
  string space_id = 1 ;
  string job_id = 2 ;
  string instance_id = 3 ;
}

message ListJMHistLogsReply {
  repeated FileState stat = 1;
}

message ListTMHistLogsReply {
  map<string, TaskLogFiles> task_logs = 1;
}

message TaskLogFiles {
  repeated FileState stat = 1;
}

message FileState {
  int64 file_size = 1 ;
  string file_name = 2;
}

message DownloadJobMgrRequest {
  string space_id = 1;
  string job_id = 2 ;
  string instance_id = 3 ;
  string file_name = 4 ;
}

message DownloadTaskMgrRequest {
  string space_id = 1 ;
  string job_id = 2 ;
  string instance_id = 3 ;
  string file_name = 4 ;
  string task_manager_id = 5 ;
}

message FileContent {
  bytes file_data = 1;
  int64 file_size = 2 ;
}

message UploadFileRequest {
  string space_id = 1;
  string job_id = 2 ;
  string instance_id = 3;
  string server_url = 4;
}

enum TaskStatus {
  Started = 0;
  NotStarted = 1;
}

message UploadFileReply {
  TaskStatus status = 1 ;
}

message TaskStatRequest {
  string space_id = 1;
  string job_id = 2 ;
  string instance_id = 3;
  string server_url = 4;
}

message TaskStatReply {
  bool completed = 1 ;
}
