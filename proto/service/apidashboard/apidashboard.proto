syntax = "proto3";

package apidashboard;

option go_package = "github.com/DataWorkbench/gproto/xgo/service/pbsvcapidashboard";

// Package name of class.
option java_package = "com.dataomnis.gproto.service.pbsvcapidashboard";
// File name of class.
option java_outer_classname = "PBSvcApiDashboard";
option java_multiple_files = false;

import "proto/types/request/apidashboard.proto";
import "proto/types/response/apidashboard.proto";
import "proto/types/model/empty.proto";

service ApiDashboard {
  rpc CreateRoute(request.CreateRoute) returns (response.CreateRoute) {}
  rpc DeleteRoute(request.DeleteRoute) returns (model.EmptyStruct) {}
  rpc ListRoutes(request.ListRoutes) returns (response.ListRoutes) {}
  rpc UpdateRoute(request.UpdateRoute) returns (model.EmptyStruct) {}

  rpc CreateUpstream(request.CreateUpstream) returns (response.CreateUpstream) {}
  rpc DeleteUpstream(request.DeleteUpstream) returns (model.EmptyStruct) {}
  rpc UpdateUpstream(request.UpdateUpstream) returns (model.EmptyStruct) {}
  rpc ListUpstreams(request.ListUpstreams) returns (response.ListUpstreams) {}

  rpc CreateSSL(request.CreateSSL) returns (response.CreateSSL) {}
  rpc DeleteSSL(request.DeleteSSL) returns (model.EmptyStruct) {}
  rpc ListSSLs(request.ListSSLs) returns (response.ListSSLs) {}

  rpc CreateApiService(request.CreateApiService) returns (response.CreateApiService) {}
  rpc DeleteApiService(request.DeleteApiService) returns (model.EmptyStruct) {}
  rpc UpdateApiService(request.UpdateApiService) returns (model.EmptyStruct) {}
  rpc ListApiServices(request.ListApiServices) returns (response.ListApiServices) {}
  rpc AddSvcReqCount(request.AddSvcReqCount) returns (model.EmptyStruct) {}
  rpc GetSvcReqCount(request.GetSvcReqCount) returns (response.GetSvcReqCount) {}
  rpc DeleteProjectRoutes(request.DeleteProjectRoutes) returns (model.EmptyStruct) {}

  rpc CreateAuthKey(request.CreateAuthKey) returns (response.CreateAuthKey) {}
  rpc DeleteAuthKey(request.DeleteAuthKey) returns (model.EmptyStruct) {}
  rpc UpdateAuthKey(request.UpdateAuthKey) returns (model.EmptyStruct) {}
  rpc ListAuthKeys(request.ListAuthKeys) returns (response.ListAuthKeys) {}

  rpc BindAuthKey(request.BindAuthKey) returns (model.EmptyStruct) {}
  rpc UnbindAuthKey(request.UnbindAuthKey) returns (model.EmptyStruct) {}

}