syntax = "proto3";

package spacemanager;

option go_package = "github.com/DataWorkbench/gproto/xgo/service/pbsvcspace";

// Package name of class.
option java_package = "com.dataomnis.gproto.service.pbsvcspace";
// File name of class.
option java_outer_classname = "PBSvcSyncJobManage";
option java_multiple_files = false;

import "proto/types/model/empty.proto";
import "proto/types/request/sync_job_manage.proto";
import "proto/types/response/sync_job_manage.proto";

// SyncJobManage declares API for manage Sync job.
service SyncJobManage {
    // Interface for Sync job dev.
    //
    // ListSyncJobs to get a list of Sync job of the workspace.
    rpc ListSyncJobs(request.ListSyncJobs) returns (response.ListSyncJobs) {}

    // DeleteSyncJobs delete Sync job ant its related resources where in ids.
    // Cannot not delete directory in this API.
    // Resources includes:
    //  - History version and Released's job.
    //  - code, env schedule and its history version.
    //  - Offline job and force stop all running instances. (By Scheduler-Server)
    //  - All instances records. (By Scheduler-Server)
    rpc DeleteSyncJobs(request.DeleteSyncJobs) returns (model.EmptyStruct) {}

    // Move SyncJob to other directory.
    rpc MoveSyncJobs(request.MoveSyncJobs) returns (model.EmptyStruct) {}

    // CreateSyncJob to create a new Sync job.
    rpc CreateSyncJob(request.CreateSyncJob) returns (response.CreateSyncJob) {}

    // UpdateSyncJob to update the info for the specified Sync job.
    rpc UpdateSyncJob(request.UpdateSyncJob) returns (model.EmptyStruct) {}

    // DescribeSyncJob to get the info of the specified Sync job.
    rpc DescribeSyncJob(request.DescribeSyncJob) returns (response.DescribeSyncJob) {}

    // SetSyncJobConf to set the run parameters of the specified Sync job.
    rpc SetSyncJobConf(request.SetSyncJobConf) returns (model.EmptyStruct) {}

    // GetSyncJobConf to get the run parameters of the specified Sync job.
    rpc GetSyncJobConf(request.GetSyncJobConf) returns (response.GetSyncJobConf) {}

    // SetSyncJobSchedule to set the schedule properties of the specified Sync job.
    rpc SetSyncJobSchedule(request.SetSyncJobSchedule) returns (model.EmptyStruct) {}

    // GetSyncJobSchedule to get the schedule properties of the specified Sync job.
    rpc GetSyncJobSchedule(request.GetSyncJobSchedule) returns (response.GetSyncJobSchedule) {}

    // Interface for Sync job release.
    //
    // ReleaseSyncJob to publish the specified job to schedule system with a new version.
    rpc ReleaseSyncJob(request.ReleaseSyncJob) returns (model.EmptyStruct) {}

    // SuspendReleaseSyncJobs to suspend the specified job list in schedule system.
    rpc OfflineReleaseSyncJob(request.OfflineReleaseSyncJob) returns (model.EmptyStruct) {}

    // SuspendReleaseSyncJob to suspend the specified job list in schedule system.
    rpc SuspendReleaseSyncJob(request.SuspendReleaseSyncJob) returns (model.EmptyStruct) {}

    // ResumeReleaseSyncJob to resume the suspended job list in schedule system.
    rpc ResumeReleaseSyncJob(request.ResumeReleaseSyncJob) returns (model.EmptyStruct) {}

    // ListReleaseSyncJobs for gets a list of all published job in the workspace.
    rpc ListReleaseSyncJobs(request.ListReleaseSyncJobs) returns (response.ListReleaseSyncJobs) {}

    // Interface for Sync job versions.
    //
    // ListSyncJobVersions for gets a list of all versions of the specified job.
    rpc ListSyncJobVersions(request.ListSyncJobVersions) returns (response.ListSyncJobVersions) {}

    // DescribeSyncJobVersion for get the info of the job of the specified version.
    rpc DescribeSyncJobVersion(request.DescribeSyncJob) returns (response.DescribeSyncJob) {}

    // GetSyncJobVersionArgs for get the run parameters of the job of the specified version.
    rpc GetSyncJobVersionConf(request.GetSyncJobConf) returns (response.GetSyncJobConf) {}

    // GetSyncJobVersionSchedule for get the schedule properties of the job of the specified version.
    rpc GetSyncJobVersionSchedule(request.GetSyncJobSchedule) returns (response.GetSyncJobSchedule) {}

    // Interface for helper.
    rpc DescribeSyncFlinkUIByInstanceId(request.DescribeSyncFlinkUIByInstanceId)  returns (response.DescribeSyncFlinkUIByInstanceId) {}

    // Interface for helper.
    rpc GenerateJobJson(request.GenerateJobJson)  returns (response.GenerateJobJson) {}

}
