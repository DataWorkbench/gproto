syntax = "proto3";

package spacemanager;

option go_package = "github.com/DataWorkbench/gproto/xgo/service/pbsvcspace";

// Package name of class.
option java_package = "com.dataomnis.gproto.service.pbsvcspace";
// File name of class.
option java_outer_classname = "PBSvcSyncInstanceManage";
option java_multiple_files = false;

import "proto/types/model/empty.proto";
import "proto/types/request/sync_instance_manage.proto";
import "proto/types/response/sync_instance_manage.proto";

// SyncInstanceManage declares API for manage stream instance.
service SyncInstanceManage {
  rpc ListSyncInstances(request.ListSyncInstances)           returns (response.ListSyncInstances) {}
  rpc TerminateSyncInstances(request.TerminateSyncInstances) returns (model.EmptyStruct)       {}
  rpc SuspendSyncInstances(request.SuspendSyncInstances)     returns (model.EmptyStruct)       {}
  rpc ResumeSyncInstances(request.ResumeSyncInstances)       returns (model.EmptyStruct)       {}

  rpc DescribeSyncInstance(request.DescribeSyncInstance) returns (response.DescribeSyncInstance) {}

  // CreateSyncInstanceWithId do creates a instance with generated id. Only used in internal.
  // Return no error is the give instance id already exists.
  rpc CreateSyncInstanceWithId(request.CreateSyncInstanceWithId) returns (model.EmptyStruct) {}

  // UpdateSyncInstanceState do updates the instance state, Only used in internal.
  rpc UpdateSyncInstanceState(request.UpdateSyncInstanceState) returns(model.EmptyStruct) {}
}
