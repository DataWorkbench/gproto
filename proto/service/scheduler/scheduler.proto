syntax = "proto3";

package scheduler;

option go_package = "github.com/DataWorkbench/gproto/xgo/service/pbsvcscheduler";

// Package name of class.
option java_package = "com.dataomnis.gproto.service.pbsvcscheduler";
// File name of class.
option java_outer_classname = "PBSvcScheduler";
option java_multiple_files = false;

import "proto/types/model/empty.proto";

import "proto/types/request/scheduler.proto";

service Scheduler {
  // SubmitStreamJob used when release new stream job or resume stream job.
  rpc SubmitStreamJob(request.SubmitStreamJob) returns (model.EmptyStruct) {}

  // StopStreamJob used when offline stream job.
  rpc StopStreamJob(request.StopStreamJob) returns (model.EmptyStruct) {}

  // DeleteStreamJobsBySpaceIds used when delete workspaces.
  // It will stop all stream jobs and terminate all instances.
  // And delete all instances.
  rpc DeleteStreamJobsBySpaceIds(request.DeleteStreamJobsBySpaceIds) returns (model.EmptyStruct) {}

  // DeleteStreamJobsByJobIds used when delete stream jobs.
  // It will stop all stream jobs and terminate all instances.
  // And delete all instances.
  rpc DeleteStreamJobsByJobIds(request.DeleteStreamJobsByJobIds) returns (model.EmptyStruct) {}
  
  
  // SubmitSyncJob used when release new stream job or resume stream job.
  rpc SubmitSyncJob(request.SubmitSyncJob) returns (model.EmptyStruct) {}

  // StopSyncJob used when offline stream job.
  rpc StopSyncJob(request.StopSyncJob) returns (model.EmptyStruct) {}

  // DeleteSyncJobsBySpaceIds used when delete workspaces.
  // It will stop all stream jobs and terminate all instances.
  // And delete all instances.
  rpc DeleteSyncJobsBySpaceIds(request.DeleteSyncJobsBySpaceIds) returns (model.EmptyStruct) {}

  // DeleteSyncJobsByJobIds used when delete stream jobs.
  // It will stop all stream jobs and terminate all instances.
  // And delete all instances.
  rpc DeleteSyncJobsByJobIds(request.DeleteSyncJobsByJobIds) returns (model.EmptyStruct) {}
}
