syntax = "proto3";

package dataservice;

option go_package = "github.com/DataWorkbench/gproto/xgo/service/pbsvcdataservice";

// Package name of class.
option java_package = "com.dataomnis.gproto.service.pbsvcdataservice";
// File name of class.
option java_outer_classname = "PBSvcDataService";
option java_multiple_files = false;

import "proto/types/request/dataservice_manage.proto";
import "proto/types/response/dataservice_manage.proto";
import "proto/types/model/empty.proto";
import "proto/types/model/dataservice.proto";

service DataService {
  rpc CreateDataServiceCluster(request.CreateDataServiceCluster) returns (response.CreateDataServiceCluster) {}
  rpc ListDataServiceClusters(request.ListDataServiceClusters) returns (response.ListDataServiceClusters) {}
  rpc UpdateDataServiceCluster(request.UpdateDataServiceCluster) returns (model.EmptyStruct) {}
  rpc DescribeDataServiceCluster(request.DescribeDataServiceCluster) returns (model.DataServiceCluster) {}
  rpc DeleteDataServiceClusters(request.DeleteDataServiceClusters)   returns (model.EmptyStruct) {}

  rpc CreateApiGroup(request.CreateApiGroup) returns (response.CreateApiGroup) {}
  rpc ListApiGroups(request.ListApiGroups) returns (response.ListApiGroups) {}
  rpc DeleteApiGroups(request.DeleteApiGroups)   returns (model.EmptyStruct) {}

  rpc CreateDataServiceApi(request.CreateCustomerApi) returns (response.CreateCustomerApi) {}
  rpc UpdateDataServiceApi(request.UpdateCustomerApi) returns (model.EmptyStruct) {}
  rpc DescribeDataServiceApi(request.DescribeCustomerApi) returns (response.DescribeCustomerApi) {}
  rpc ListDataServiceApis(request.ListCustomerApis) returns (response.ListCustomerApis) {}
  rpc DeleteDataServiceApis(request.DeleteCustomerApis)   returns (model.EmptyStruct) {}

  rpc TestDataServiceApi(request.TestCustomerApi) returns (response.TestCustomerApi) {}

  rpc PublishDataServiceApi(request.PublishCustomerApi) returns (model.EmptyStruct) {}
  rpc ListDataServiceApiVersions(request.ListApiVersions) returns (response.ListApiVersions) {}
  rpc DescribeDataServiceApiVersion(request.DescribeApiVersion) returns (response.DescribeApiVersion) {}
  rpc RepublishDataServiceApi(request.DescribeApiVersion) returns (model.EmptyStruct) {}

  rpc AbolishDataServiceApi(request.PublishCustomerApi) returns (model.EmptyStruct) {}
}