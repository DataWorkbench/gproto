syntax = "proto3";

package account;

option go_package = "github.com/DataWorkbench/gproto/xgo/service/pbsvcaccount";

// Package name of class.
option java_package = "com.dataomnis.gproto.service.pbsvcaccount";
// File name of class.
option java_outer_classname = "PBSvcAccountManage";
option java_multiple_files = false;

import "proto/types/request/account_manage.proto";
import "proto/types/response/account_manage.proto";
import "proto/types/model/empty.proto";

service AccountManage {
  rpc ListUsers(request.ListUsers) returns (response.ListUsers) {}
  rpc DeleteUsers(request.DeleteUsers) returns (model.EmptyStruct) {}
  rpc DescribeUser(request.DescribeUser) returns (response.DescribeUser) {}
  rpc CreateUser(request.CreateUser) returns (response.CreateUser) {}
  rpc UpdateUser(request.UpdateUser) returns (model.EmptyStruct) {}
  rpc ChangeUserPassword(request.ChangeUserPassword) returns (model.EmptyStruct) {}
  // TODO: Only used by admin.
  rpc ResetUserPassword(request.ResetUserPassword) returns (model.EmptyStruct) {}

  rpc ListAccessKeys(request.ListAccessKeys) returns (response.ListAccessKeys) {}
  rpc DeleteAccessKeys(request.DeleteAccessKeys) returns (model.EmptyStruct) {}
  rpc DescribeAccessKey(request.DescribeAccessKey) returns (response.DescribeAccessKey) {}
  rpc CreateAccessKey(request.CreateAccessKey) returns (response.CreateAccessKey) {}
  rpc UpdatedAccessKey(request.UpdatedAccessKey) returns (model.EmptyStruct) {}

  // Session API
  rpc CreateSession(request.CreateSession) returns (response.CreateSession) {}
  rpc CheckSession(request.CheckSession) returns (response.CheckSession) {}

  // Notification API
  rpc ListNotifications(request.ListNotifications) returns (response.ListNotifications) {}
  rpc DescribeNotification(request.DescribeNotification) returns (response.DescribeNotification) {}
  rpc CreateNotification(request.CreateNotification) returns (response.CreateNotification) {}
  rpc UpdateNotification(request.UpdateNotification) returns (model.EmptyStruct) {}
  rpc DeleteNotifications(request.DeleteNotifications) returns (model.EmptyStruct) {}
}
