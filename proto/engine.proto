syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/enginepb";

package enginepb;

import "github.com/mwitkow/go-proto-validators/validator.proto";


message Engine{
    string ID = 1 [ (validator.field) = {length_eq: 20} ];
    string Name = 2 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
    string Owner = 3 [ (validator.field) = { length_lt: 65 } ];
    string Desc = 4;
    string URL = 5;
    string ServerType = 6; //spark, flink
    string Status = 7;
    string IsInbuilt = 8; // inbuilt, external
    int64 Created = 9;
    int64 Updated = 10;
}

message CreateRequest {
    string Name = 1 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
    string Owner = 2 [ (validator.field) = { length_lt: 65 } ];
    string Desc = 3;
    string URL = 4;
    string ServerType = 5; //spark, flink
}

message CreateResponse {
    string ID = 1;
    int32 StatusCode = 2;
    string Message = 3;
}

message ListRequest {
    string Owner = 1 [ (validator.field) = { string_not_empty: true } ];
    string Type = 2;  // inbuilt, external
    int32 Limit = 3 [ (validator.field) = { int_gt: 0, int_lt: 101 } ];
    int32 Offset = 4 [ (validator.field) = { msg_exists: true } ];
    int32 Verbose = 5;
}

message ListResponse {
    repeated Engine Engines = 1 [ (validator.field) = { msg_exists: false } ];
    int32 StatusCode = 2;
    string message = 3;
}

message DescribeRequest {
    string ID = 1 [ (validator.field) = {length_eq: 20} ];
}

message DescribeResponse {
    Engine engine = 1;
    int32 StatusCode = 2;
    string message = 3;
}

message RegisterRequest {
    string Name = 1 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
    string Owner = 2 [ (validator.field) = { length_lt: 65 } ];
    string Desc = 3;
    string URL = 4;
    string ServerType = 5; //spark, flink
}

message RegisterResponse {
    string ID = 1;
    int32 StatusCode = 2;
    string Message = 3;
}

message DeregisterRequest {
    string ID = 1 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
}

message DeregisterResponse {
    string ID = 1;
    int32 StatusCode = 2;
    string Message = 3;
}

message ModifyRequest {
    string ID = 1 [ (validator.field) = {length_eq: 20} ];
    string Name = 2 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
    string Desc = 3;
    string URL = 4;
}

message ModifyResponse {
    int32 StatusCode = 1;
    string Message = 2;
}

message DeleteRequest {
    repeated string ID = 1 [ (validator.field) = {length_eq: 20} ];
}

message DeleteResponse {
    int32 StatusCode = 1;
    string Message = 2;
}

// Engine Service
service EngineService {
    rpc List(ListRequest) returns (ListResponse) {}
    rpc Describe(DescribeRequest) returns (DescribeResponse) {}
    rpc Register(RegisterRequest) returns (RegisterResponse) {}
    rpc Modify(ModifyRequest) returns (ModifyResponse) {}
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
    rpc Create(CreateRequest) returns (CreateResponse) {}
}
