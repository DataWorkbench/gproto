syntax = "proto3";

option go_package = "github.com/DataWorkbench/gproto/pkg/enginepb";

package enginepb;

import "github.com/mwitkow/go-proto-validators/validator.proto";


message Engine{
    string id = 1 [ (validator.field) = {length_eq: 20} ];
    string name = 2 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
    string owner = 3 [ (validator.field) = { length_lt: 65 } ];
    string desc = 4;
    string url = 5;
    string type = 6; //spark, flink
    string transition_status = 7;
    string status = 8;
    bool is_inbuilt = 9; // inbuilt, external
    int64 create_time = 10;
    int64 update_time = 11;
}

message InbuiltEngineInfo{
    string engine_id = 1 [ (validator.field) = {length_eq: 20} ];
    uint32 job_cu = 2 [ (validator.field) = { int_gt: 0, int_lt: 4 } ];
    uint32 task_cu = 3 [ (validator.field) = { int_gt: 0, int_lt: 16 } ];
    uint32 task_num = 4;
    string extension = 5; // {accessKey: xxx, hbaseHost: {ip: hostname, ..}, ..}
    int64 create_time = 6;
    int64 update_time = 7;
}

message CreateRequest {
    string name = 1 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
    string owner = 2 [ (validator.field) = { length_lt: 65 } ];
    string type = 3; // flink and other type in the future
    string desc = 4;
    uint32 job_cu = 5;
    uint32 task_cu = 6;
    uint32 task_num = 7;
    string extension = 8; // {accessKey: xxx, hbaseHost: {xx: xx, ..}, ..}
    bool wait_ready = 9;
    uint32 wait_timeout = 10;
}

message CreateResponse {
    string id = 1;
    string url = 2;
}

message StatusRequest {
    string id = 1 [ (validator.field) = {length_eq: 20} ];
    string owner = 2 [ (validator.field) = { string_not_empty: true } ];
    string name = 3;
    bool wait_ready = 4;
    uint32 wait_timeout = 5;
}

message StatusResponse {
    string id = 1;
    string name = 2;
    string status = 3;
}

enum IsInbuiltType {
    ALL = 0;
    Yes = 1;
    No  = 2;
}

enum VerboseType {
    OnlyEngine = 0;
    WithInbuiltInfo = 1;
}

message DescribeRequest {
    string id = 1 [ (validator.field) = {length_eq: 20} ];
    string owner = 2 [ (validator.field) = { string_not_empty: true } ];
    string type = 3;
    IsInbuiltType is_inbuilt = 4;
    repeated string status = 5;
    uint32 limit = 6 [ (validator.field) = { int_gt: 0, int_lt: 101 } ];
    uint32 offset = 7 [ (validator.field) = { msg_exists: true } ];
    VerboseType verbose = 8; // 0: only engine, 1: include inbuilt_engine_info
}

message DescribeResponse {
    uint32 total = 1;
    repeated Engine engines = 2 [ (validator.field) = { msg_exists: false } ];
    repeated InbuiltEngineInfo inbuilt_engine_info = 3 [ (validator.field) = { msg_exists: false } ];
}

message RegisterRequest {
    string name = 1 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
    string owner = 2 [ (validator.field) = { length_lt: 65 } ];
    string desc = 3;
    string url = 4;
    string type = 5; //spark, flink
    string extension = 6;
}

message RegisterResponse {
    string id = 1;
    string url = 2;
}

message DeregisterRequest {
    string id = 1 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
}

message DeregisterResponse {
    string id = 1;
    uint32 status_code = 2;
    string message = 3;
}

message ModifyRequest {
    string id = 1 [ (validator.field) = {length_eq: 20} ];
    string name = 2 [ (validator.field) = { length_gt: 1, length_lt: 128 } ];
    string desc = 3;
    string url = 4;
}

message ModifyResponse {
    string id = 1;
}

message DeleteRequest {
    string id = 1 [ (validator.field) = {length_eq: 20} ];
}

message DeleteResponse {
    string id = 1;
}

// Engine Service
service EngineService {
    rpc Describe(DescribeRequest) returns (DescribeResponse) {}
    rpc Create(CreateRequest) returns (CreateResponse) {}
    rpc Modify(ModifyRequest) returns (ModifyResponse) {}
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
    rpc Register(RegisterRequest) returns (RegisterResponse) {}
    rpc DeRegister(DescribeRequest) returns (DeregisterResponse) {}
}
