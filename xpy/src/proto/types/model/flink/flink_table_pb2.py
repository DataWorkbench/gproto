# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/types/model/flink/flink_table.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from github.com.yu31.protoc_plugin.proto import validator_pb2 as github_dot_com_dot_yu31_dot_protoc__plugin_dot_proto_dot_validator__pb2
from github.com.yu31.protoc_plugin.proto import gosql_pb2 as github_dot_com_dot_yu31_dot_protoc__plugin_dot_proto_dot_gosql__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/types/model/flink/flink_table.proto',
  package='flink',
  syntax='proto3',
  serialized_options=b'\n*com.dataomnis.gproto.types.pbmodel.pbflinkB\014PBFlinkTableP\000Z9github.com/DataWorkbench/gproto/xgo/types/pbmodel/pbflink',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n)proto/types/model/flink/flink_table.proto\x12\x05\x66link\x1a\x33github.com/yu31/protoc-plugin/proto/validator.proto\x1a/github.com/yu31/protoc-plugin/proto/gosql.proto\"\xaa\x01\n\rSqlColumnType\x12\x1c\n\x06\x63olumn\x18\x01 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x1a\n\x04type\x18\x02 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x1e\n\x07\x63omment\x18\x03 \x01(\tB\r\xe2\xdf\x1f\t\x12\x07\xc2\x01\x04\x98\x02\x80\x02\x12!\n\x0bprimary_key\x18\x04 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02\x08\x12\x1c\n\x06Length\x18\x05 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02\n\"\xc4\x01\n\x11SqlTimeColumnType\x12\x1c\n\x06\x63olumn\x18\x01 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12:\n\x04type\x18\x02 \x01(\x0e\x32\x1d.flink.SqlTimeColumnType.TypeB\r\xe2\xdf\x1f\t\x12\x07\xda\x01\x04@\x01X\x01\x12!\n\nexpression\x18\x03 \x01(\tB\r\xe2\xdf\x1f\t\x12\x07\xc2\x01\x04\x98\x02\x80\x08\"2\n\x04Type\x12\r\n\tTypeUnset\x10\x00\x12\x0c\n\x08Proctime\x10\x01\x12\r\n\tWatermark\x10\x02\"L\n\x0f\x43onnectorOption\x12\x1b\n\x04name\x18\x01 \x01(\tB\r\xe2\xdf\x1f\t\x12\x07\xc2\x01\x04\x98\x02\x80\x02\x12\x1c\n\x05value\x18\x02 \x01(\tB\r\xe2\xdf\x1f\t\x12\x07\xc2\x01\x04\x98\x02\x80 \"\xd6\x01\n\nMySQLTable\x12.\n\nsql_column\x18\x01 \x03(\x0b\x32\x14.flink.SqlColumnTypeB\x04\xe2\xdf\x1f\x00\x12\"\n\x0cmapping_name\x18\x02 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x37\n\x11\x63onnector_options\x18\x03 \x03(\x0b\x32\x16.flink.ConnectorOptionB\x04\xe2\xdf\x1f\x00\x12\x33\n\x0btime_column\x18\x04 \x03(\x0b\x32\x18.flink.SqlTimeColumnTypeB\x04\xe2\xdf\x1f\x00:\x06\xca\xb2\x04\x02\n\x00\"\xdb\x01\n\x0fPostgreSQLTable\x12.\n\nsql_column\x18\x01 \x03(\x0b\x32\x14.flink.SqlColumnTypeB\x04\xe2\xdf\x1f\x00\x12\"\n\x0cmapping_name\x18\x02 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x37\n\x11\x63onnector_options\x18\x03 \x03(\x0b\x32\x16.flink.ConnectorOptionB\x04\xe2\xdf\x1f\x00\x12\x33\n\x0btime_column\x18\x04 \x03(\x0b\x32\x18.flink.SqlTimeColumnTypeB\x04\xe2\xdf\x1f\x00:\x06\xca\xb2\x04\x02\n\x00\"\xda\x01\n\x0f\x43lickHouseTable\x12.\n\nsql_column\x18\x01 \x03(\x0b\x32\x14.flink.SqlColumnTypeB\x04\xe2\xdf\x1f\x00\x12!\n\x0bMappingName\x18\x02 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x37\n\x11\x63onnector_options\x18\x03 \x03(\x0b\x32\x16.flink.ConnectorOptionB\x04\xe2\xdf\x1f\x00\x12\x33\n\x0btime_column\x18\x04 \x03(\x0b\x32\x18.flink.SqlTimeColumnTypeB\x04\xe2\xdf\x1f\x00:\x06\xca\xb2\x04\x02\n\x00\"\xd6\x01\n\nHBaseTable\x12.\n\nsql_column\x18\x01 \x03(\x0b\x32\x14.flink.SqlColumnTypeB\x04\xe2\xdf\x1f\x00\x12\"\n\x0cmapping_name\x18\x02 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x37\n\x11\x63onnector_options\x18\x03 \x03(\x0b\x32\x16.flink.ConnectorOptionB\x04\xe2\xdf\x1f\x00\x12\x33\n\x0btime_column\x18\x04 \x03(\x0b\x32\x18.flink.SqlTimeColumnTypeB\x04\xe2\xdf\x1f\x00:\x06\xca\xb2\x04\x02\n\x00\"\xec\x01\n\tHDFSTable\x12.\n\nsql_column\x18\x01 \x03(\x0b\x32\x14.flink.SqlColumnTypeB\x04\xe2\xdf\x1f\x00\x12\x1c\n\x06\x66ormat\x18\x02 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x1b\n\x04path\x18\x03 \x01(\tB\r\xe2\xdf\x1f\t\x12\x07\xc2\x01\x04\x98\x02\x80\x08\x12\x37\n\x11\x63onnector_options\x18\x04 \x03(\x0b\x32\x16.flink.ConnectorOptionB\x04\xe2\xdf\x1f\x00\x12\x33\n\x0btime_column\x18\x05 \x03(\x0b\x32\x18.flink.SqlTimeColumnTypeB\x04\xe2\xdf\x1f\x00:\x06\xca\xb2\x04\x02\n\x00\"\xea\x01\n\x07S3Table\x12.\n\nsql_column\x18\x01 \x03(\x0b\x32\x14.flink.SqlColumnTypeB\x04\xe2\xdf\x1f\x00\x12\x1c\n\x06\x66ormat\x18\x02 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x1b\n\x04path\x18\x03 \x01(\tB\r\xe2\xdf\x1f\t\x12\x07\xc2\x01\x04\x98\x02\x80\x08\x12\x37\n\x11\x63onnector_options\x18\x04 \x03(\x0b\x32\x16.flink.ConnectorOptionB\x04\xe2\xdf\x1f\x00\x12\x33\n\x0btime_column\x18\x05 \x03(\x0b\x32\x18.flink.SqlTimeColumnTypeB\x04\xe2\xdf\x1f\x00:\x06\xca\xb2\x04\x02\n\x00\"\xeb\x01\n\x08\x46tpTable\x12.\n\nsql_column\x18\x01 \x03(\x0b\x32\x14.flink.SqlColumnTypeB\x04\xe2\xdf\x1f\x00\x12\x1c\n\x06\x66ormat\x18\x02 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x1b\n\x04path\x18\x03 \x01(\tB\r\xe2\xdf\x1f\t\x12\x07\xc2\x01\x04\x98\x02\x80\x08\x12\x37\n\x11\x63onnector_options\x18\x04 \x03(\x0b\x32\x16.flink.ConnectorOptionB\x04\xe2\xdf\x1f\x00\x12\x33\n\x0btime_column\x18\x05 \x03(\x0b\x32\x18.flink.SqlTimeColumnTypeB\x04\xe2\xdf\x1f\x00:\x06\xca\xb2\x04\x02\n\x00\"\xee\x01\n\nKafkaTable\x12.\n\nsql_column\x18\x01 \x03(\x0b\x32\x14.flink.SqlColumnTypeB\x04\xe2\xdf\x1f\x00\x12\x1c\n\x06\x66ormat\x18\x02 \x01(\tB\x0c\xe2\xdf\x1f\x08\x12\x06\xc2\x01\x03\x98\x02@\x12\x1c\n\x05topic\x18\x03 \x01(\tB\r\xe2\xdf\x1f\t\x12\x07\xc2\x01\x04\x98\x02\x80\x08\x12\x37\n\x11\x63onnector_options\x18\x04 \x03(\x0b\x32\x16.flink.ConnectorOptionB\x04\xe2\xdf\x1f\x00\x12\x33\n\x0btime_column\x18\x05 \x03(\x0b\x32\x18.flink.SqlTimeColumnTypeB\x04\xe2\xdf\x1f\x00:\x06\xca\xb2\x04\x02\n\x00\"\xad\x02\n\x0bTableSchema\x12 \n\x05mysql\x18\x01 \x01(\x0b\x32\x11.flink.MySQLTable\x12*\n\npostgresql\x18\x02 \x01(\x0b\x32\x16.flink.PostgreSQLTable\x12*\n\nclickhouse\x18\x03 \x01(\x0b\x32\x16.flink.ClickHouseTable\x12 \n\x05Hbase\x18\x04 \x01(\x0b\x32\x11.flink.HBaseTable\x12 \n\x05kafka\x18\x05 \x01(\x0b\x32\x11.flink.KafkaTable\x12\x1a\n\x02s3\x18\x06 \x01(\x0b\x32\x0e.flink.S3Table\x12\x1c\n\x03\x66tp\x18\x07 \x01(\x0b\x32\x0f.flink.FtpTable\x12\x1e\n\x04hdfs\x18\x08 \x01(\x0b\x32\x10.flink.HDFSTable:\x06\xca\xb2\x04\x02\n\x00\x42w\n*com.dataomnis.gproto.types.pbmodel.pbflinkB\x0cPBFlinkTableP\x00Z9github.com/DataWorkbench/gproto/xgo/types/pbmodel/pbflinkb\x06proto3'
  ,
  dependencies=[github_dot_com_dot_yu31_dot_protoc__plugin_dot_proto_dot_validator__pb2.DESCRIPTOR,github_dot_com_dot_yu31_dot_protoc__plugin_dot_proto_dot_gosql__pb2.DESCRIPTOR,])



_SQLTIMECOLUMNTYPE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='flink.SqlTimeColumnType.Type',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TypeUnset', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Proctime', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Watermark', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=474,
  serialized_end=524,
)
_sym_db.RegisterEnumDescriptor(_SQLTIMECOLUMNTYPE_TYPE)


_SQLCOLUMNTYPE = _descriptor.Descriptor(
  name='SqlColumnType',
  full_name='flink.SqlColumnType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='column', full_name='flink.SqlColumnType.column', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='flink.SqlColumnType.type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='comment', full_name='flink.SqlColumnType.comment', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\t\022\007\302\001\004\230\002\200\002', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='primary_key', full_name='flink.SqlColumnType.primary_key', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002\010', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Length', full_name='flink.SqlColumnType.Length', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002\n', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=155,
  serialized_end=325,
)


_SQLTIMECOLUMNTYPE = _descriptor.Descriptor(
  name='SqlTimeColumnType',
  full_name='flink.SqlTimeColumnType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='column', full_name='flink.SqlTimeColumnType.column', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='flink.SqlTimeColumnType.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\t\022\007\332\001\004@\001X\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='expression', full_name='flink.SqlTimeColumnType.expression', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\t\022\007\302\001\004\230\002\200\010', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SQLTIMECOLUMNTYPE_TYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=328,
  serialized_end=524,
)


_CONNECTOROPTION = _descriptor.Descriptor(
  name='ConnectorOption',
  full_name='flink.ConnectorOption',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='flink.ConnectorOption.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\t\022\007\302\001\004\230\002\200\002', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='flink.ConnectorOption.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\t\022\007\302\001\004\230\002\200 ', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=526,
  serialized_end=602,
)


_MYSQLTABLE = _descriptor.Descriptor(
  name='MySQLTable',
  full_name='flink.MySQLTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql_column', full_name='flink.MySQLTable.sql_column', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mapping_name', full_name='flink.MySQLTable.mapping_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connector_options', full_name='flink.MySQLTable.connector_options', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_column', full_name='flink.MySQLTable.time_column', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\312\262\004\002\n\000',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=605,
  serialized_end=819,
)


_POSTGRESQLTABLE = _descriptor.Descriptor(
  name='PostgreSQLTable',
  full_name='flink.PostgreSQLTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql_column', full_name='flink.PostgreSQLTable.sql_column', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mapping_name', full_name='flink.PostgreSQLTable.mapping_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connector_options', full_name='flink.PostgreSQLTable.connector_options', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_column', full_name='flink.PostgreSQLTable.time_column', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\312\262\004\002\n\000',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=822,
  serialized_end=1041,
)


_CLICKHOUSETABLE = _descriptor.Descriptor(
  name='ClickHouseTable',
  full_name='flink.ClickHouseTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql_column', full_name='flink.ClickHouseTable.sql_column', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='MappingName', full_name='flink.ClickHouseTable.MappingName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connector_options', full_name='flink.ClickHouseTable.connector_options', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_column', full_name='flink.ClickHouseTable.time_column', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\312\262\004\002\n\000',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1044,
  serialized_end=1262,
)


_HBASETABLE = _descriptor.Descriptor(
  name='HBaseTable',
  full_name='flink.HBaseTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql_column', full_name='flink.HBaseTable.sql_column', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mapping_name', full_name='flink.HBaseTable.mapping_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connector_options', full_name='flink.HBaseTable.connector_options', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_column', full_name='flink.HBaseTable.time_column', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\312\262\004\002\n\000',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1265,
  serialized_end=1479,
)


_HDFSTABLE = _descriptor.Descriptor(
  name='HDFSTable',
  full_name='flink.HDFSTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql_column', full_name='flink.HDFSTable.sql_column', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='format', full_name='flink.HDFSTable.format', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='flink.HDFSTable.path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\t\022\007\302\001\004\230\002\200\010', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connector_options', full_name='flink.HDFSTable.connector_options', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_column', full_name='flink.HDFSTable.time_column', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\312\262\004\002\n\000',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1482,
  serialized_end=1718,
)


_S3TABLE = _descriptor.Descriptor(
  name='S3Table',
  full_name='flink.S3Table',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql_column', full_name='flink.S3Table.sql_column', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='format', full_name='flink.S3Table.format', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='flink.S3Table.path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\t\022\007\302\001\004\230\002\200\010', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connector_options', full_name='flink.S3Table.connector_options', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_column', full_name='flink.S3Table.time_column', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\312\262\004\002\n\000',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1721,
  serialized_end=1955,
)


_FTPTABLE = _descriptor.Descriptor(
  name='FtpTable',
  full_name='flink.FtpTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql_column', full_name='flink.FtpTable.sql_column', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='format', full_name='flink.FtpTable.format', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='flink.FtpTable.path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\t\022\007\302\001\004\230\002\200\010', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connector_options', full_name='flink.FtpTable.connector_options', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_column', full_name='flink.FtpTable.time_column', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\312\262\004\002\n\000',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1958,
  serialized_end=2193,
)


_KAFKATABLE = _descriptor.Descriptor(
  name='KafkaTable',
  full_name='flink.KafkaTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql_column', full_name='flink.KafkaTable.sql_column', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='format', full_name='flink.KafkaTable.format', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\010\022\006\302\001\003\230\002@', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='topic', full_name='flink.KafkaTable.topic', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\t\022\007\302\001\004\230\002\200\010', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connector_options', full_name='flink.KafkaTable.connector_options', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_column', full_name='flink.KafkaTable.time_column', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342\337\037\000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\312\262\004\002\n\000',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2196,
  serialized_end=2434,
)


_TABLESCHEMA = _descriptor.Descriptor(
  name='TableSchema',
  full_name='flink.TableSchema',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mysql', full_name='flink.TableSchema.mysql', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='postgresql', full_name='flink.TableSchema.postgresql', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='clickhouse', full_name='flink.TableSchema.clickhouse', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Hbase', full_name='flink.TableSchema.Hbase', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='kafka', full_name='flink.TableSchema.kafka', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='s3', full_name='flink.TableSchema.s3', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ftp', full_name='flink.TableSchema.ftp', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hdfs', full_name='flink.TableSchema.hdfs', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\312\262\004\002\n\000',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2437,
  serialized_end=2738,
)

_SQLTIMECOLUMNTYPE.fields_by_name['type'].enum_type = _SQLTIMECOLUMNTYPE_TYPE
_SQLTIMECOLUMNTYPE_TYPE.containing_type = _SQLTIMECOLUMNTYPE
_MYSQLTABLE.fields_by_name['sql_column'].message_type = _SQLCOLUMNTYPE
_MYSQLTABLE.fields_by_name['connector_options'].message_type = _CONNECTOROPTION
_MYSQLTABLE.fields_by_name['time_column'].message_type = _SQLTIMECOLUMNTYPE
_POSTGRESQLTABLE.fields_by_name['sql_column'].message_type = _SQLCOLUMNTYPE
_POSTGRESQLTABLE.fields_by_name['connector_options'].message_type = _CONNECTOROPTION
_POSTGRESQLTABLE.fields_by_name['time_column'].message_type = _SQLTIMECOLUMNTYPE
_CLICKHOUSETABLE.fields_by_name['sql_column'].message_type = _SQLCOLUMNTYPE
_CLICKHOUSETABLE.fields_by_name['connector_options'].message_type = _CONNECTOROPTION
_CLICKHOUSETABLE.fields_by_name['time_column'].message_type = _SQLTIMECOLUMNTYPE
_HBASETABLE.fields_by_name['sql_column'].message_type = _SQLCOLUMNTYPE
_HBASETABLE.fields_by_name['connector_options'].message_type = _CONNECTOROPTION
_HBASETABLE.fields_by_name['time_column'].message_type = _SQLTIMECOLUMNTYPE
_HDFSTABLE.fields_by_name['sql_column'].message_type = _SQLCOLUMNTYPE
_HDFSTABLE.fields_by_name['connector_options'].message_type = _CONNECTOROPTION
_HDFSTABLE.fields_by_name['time_column'].message_type = _SQLTIMECOLUMNTYPE
_S3TABLE.fields_by_name['sql_column'].message_type = _SQLCOLUMNTYPE
_S3TABLE.fields_by_name['connector_options'].message_type = _CONNECTOROPTION
_S3TABLE.fields_by_name['time_column'].message_type = _SQLTIMECOLUMNTYPE
_FTPTABLE.fields_by_name['sql_column'].message_type = _SQLCOLUMNTYPE
_FTPTABLE.fields_by_name['connector_options'].message_type = _CONNECTOROPTION
_FTPTABLE.fields_by_name['time_column'].message_type = _SQLTIMECOLUMNTYPE
_KAFKATABLE.fields_by_name['sql_column'].message_type = _SQLCOLUMNTYPE
_KAFKATABLE.fields_by_name['connector_options'].message_type = _CONNECTOROPTION
_KAFKATABLE.fields_by_name['time_column'].message_type = _SQLTIMECOLUMNTYPE
_TABLESCHEMA.fields_by_name['mysql'].message_type = _MYSQLTABLE
_TABLESCHEMA.fields_by_name['postgresql'].message_type = _POSTGRESQLTABLE
_TABLESCHEMA.fields_by_name['clickhouse'].message_type = _CLICKHOUSETABLE
_TABLESCHEMA.fields_by_name['Hbase'].message_type = _HBASETABLE
_TABLESCHEMA.fields_by_name['kafka'].message_type = _KAFKATABLE
_TABLESCHEMA.fields_by_name['s3'].message_type = _S3TABLE
_TABLESCHEMA.fields_by_name['ftp'].message_type = _FTPTABLE
_TABLESCHEMA.fields_by_name['hdfs'].message_type = _HDFSTABLE
DESCRIPTOR.message_types_by_name['SqlColumnType'] = _SQLCOLUMNTYPE
DESCRIPTOR.message_types_by_name['SqlTimeColumnType'] = _SQLTIMECOLUMNTYPE
DESCRIPTOR.message_types_by_name['ConnectorOption'] = _CONNECTOROPTION
DESCRIPTOR.message_types_by_name['MySQLTable'] = _MYSQLTABLE
DESCRIPTOR.message_types_by_name['PostgreSQLTable'] = _POSTGRESQLTABLE
DESCRIPTOR.message_types_by_name['ClickHouseTable'] = _CLICKHOUSETABLE
DESCRIPTOR.message_types_by_name['HBaseTable'] = _HBASETABLE
DESCRIPTOR.message_types_by_name['HDFSTable'] = _HDFSTABLE
DESCRIPTOR.message_types_by_name['S3Table'] = _S3TABLE
DESCRIPTOR.message_types_by_name['FtpTable'] = _FTPTABLE
DESCRIPTOR.message_types_by_name['KafkaTable'] = _KAFKATABLE
DESCRIPTOR.message_types_by_name['TableSchema'] = _TABLESCHEMA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SqlColumnType = _reflection.GeneratedProtocolMessageType('SqlColumnType', (_message.Message,), {
  'DESCRIPTOR' : _SQLCOLUMNTYPE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.SqlColumnType)
  })
_sym_db.RegisterMessage(SqlColumnType)

SqlTimeColumnType = _reflection.GeneratedProtocolMessageType('SqlTimeColumnType', (_message.Message,), {
  'DESCRIPTOR' : _SQLTIMECOLUMNTYPE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.SqlTimeColumnType)
  })
_sym_db.RegisterMessage(SqlTimeColumnType)

ConnectorOption = _reflection.GeneratedProtocolMessageType('ConnectorOption', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTOROPTION,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.ConnectorOption)
  })
_sym_db.RegisterMessage(ConnectorOption)

MySQLTable = _reflection.GeneratedProtocolMessageType('MySQLTable', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLTABLE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.MySQLTable)
  })
_sym_db.RegisterMessage(MySQLTable)

PostgreSQLTable = _reflection.GeneratedProtocolMessageType('PostgreSQLTable', (_message.Message,), {
  'DESCRIPTOR' : _POSTGRESQLTABLE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.PostgreSQLTable)
  })
_sym_db.RegisterMessage(PostgreSQLTable)

ClickHouseTable = _reflection.GeneratedProtocolMessageType('ClickHouseTable', (_message.Message,), {
  'DESCRIPTOR' : _CLICKHOUSETABLE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.ClickHouseTable)
  })
_sym_db.RegisterMessage(ClickHouseTable)

HBaseTable = _reflection.GeneratedProtocolMessageType('HBaseTable', (_message.Message,), {
  'DESCRIPTOR' : _HBASETABLE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.HBaseTable)
  })
_sym_db.RegisterMessage(HBaseTable)

HDFSTable = _reflection.GeneratedProtocolMessageType('HDFSTable', (_message.Message,), {
  'DESCRIPTOR' : _HDFSTABLE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.HDFSTable)
  })
_sym_db.RegisterMessage(HDFSTable)

S3Table = _reflection.GeneratedProtocolMessageType('S3Table', (_message.Message,), {
  'DESCRIPTOR' : _S3TABLE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.S3Table)
  })
_sym_db.RegisterMessage(S3Table)

FtpTable = _reflection.GeneratedProtocolMessageType('FtpTable', (_message.Message,), {
  'DESCRIPTOR' : _FTPTABLE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.FtpTable)
  })
_sym_db.RegisterMessage(FtpTable)

KafkaTable = _reflection.GeneratedProtocolMessageType('KafkaTable', (_message.Message,), {
  'DESCRIPTOR' : _KAFKATABLE,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.KafkaTable)
  })
_sym_db.RegisterMessage(KafkaTable)

TableSchema = _reflection.GeneratedProtocolMessageType('TableSchema', (_message.Message,), {
  'DESCRIPTOR' : _TABLESCHEMA,
  '__module__' : 'proto.types.model.flink.flink_table_pb2'
  # @@protoc_insertion_point(class_scope:flink.TableSchema)
  })
_sym_db.RegisterMessage(TableSchema)


DESCRIPTOR._options = None
_SQLCOLUMNTYPE.fields_by_name['column']._options = None
_SQLCOLUMNTYPE.fields_by_name['type']._options = None
_SQLCOLUMNTYPE.fields_by_name['comment']._options = None
_SQLCOLUMNTYPE.fields_by_name['primary_key']._options = None
_SQLCOLUMNTYPE.fields_by_name['Length']._options = None
_SQLTIMECOLUMNTYPE.fields_by_name['column']._options = None
_SQLTIMECOLUMNTYPE.fields_by_name['type']._options = None
_SQLTIMECOLUMNTYPE.fields_by_name['expression']._options = None
_CONNECTOROPTION.fields_by_name['name']._options = None
_CONNECTOROPTION.fields_by_name['value']._options = None
_MYSQLTABLE.fields_by_name['sql_column']._options = None
_MYSQLTABLE.fields_by_name['mapping_name']._options = None
_MYSQLTABLE.fields_by_name['connector_options']._options = None
_MYSQLTABLE.fields_by_name['time_column']._options = None
_MYSQLTABLE._options = None
_POSTGRESQLTABLE.fields_by_name['sql_column']._options = None
_POSTGRESQLTABLE.fields_by_name['mapping_name']._options = None
_POSTGRESQLTABLE.fields_by_name['connector_options']._options = None
_POSTGRESQLTABLE.fields_by_name['time_column']._options = None
_POSTGRESQLTABLE._options = None
_CLICKHOUSETABLE.fields_by_name['sql_column']._options = None
_CLICKHOUSETABLE.fields_by_name['MappingName']._options = None
_CLICKHOUSETABLE.fields_by_name['connector_options']._options = None
_CLICKHOUSETABLE.fields_by_name['time_column']._options = None
_CLICKHOUSETABLE._options = None
_HBASETABLE.fields_by_name['sql_column']._options = None
_HBASETABLE.fields_by_name['mapping_name']._options = None
_HBASETABLE.fields_by_name['connector_options']._options = None
_HBASETABLE.fields_by_name['time_column']._options = None
_HBASETABLE._options = None
_HDFSTABLE.fields_by_name['sql_column']._options = None
_HDFSTABLE.fields_by_name['format']._options = None
_HDFSTABLE.fields_by_name['path']._options = None
_HDFSTABLE.fields_by_name['connector_options']._options = None
_HDFSTABLE.fields_by_name['time_column']._options = None
_HDFSTABLE._options = None
_S3TABLE.fields_by_name['sql_column']._options = None
_S3TABLE.fields_by_name['format']._options = None
_S3TABLE.fields_by_name['path']._options = None
_S3TABLE.fields_by_name['connector_options']._options = None
_S3TABLE.fields_by_name['time_column']._options = None
_S3TABLE._options = None
_FTPTABLE.fields_by_name['sql_column']._options = None
_FTPTABLE.fields_by_name['format']._options = None
_FTPTABLE.fields_by_name['path']._options = None
_FTPTABLE.fields_by_name['connector_options']._options = None
_FTPTABLE.fields_by_name['time_column']._options = None
_FTPTABLE._options = None
_KAFKATABLE.fields_by_name['sql_column']._options = None
_KAFKATABLE.fields_by_name['format']._options = None
_KAFKATABLE.fields_by_name['topic']._options = None
_KAFKATABLE.fields_by_name['connector_options']._options = None
_KAFKATABLE.fields_by_name['time_column']._options = None
_KAFKATABLE._options = None
_TABLESCHEMA._options = None
# @@protoc_insertion_point(module_scope)
