// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/types/model/flink/flink_config.proto

package com.dataomnis.gproto.types.pbmodel.pbflink;

public final class PBFlinkConfig {
  private PBFlinkConfig() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FlinkConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flink.FlinkConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    java.util.List<com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item> 
        getCustomList();
    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item getCustom(int index);
    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    int getCustomCount();
    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    java.util.List<? extends com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder> 
        getCustomOrBuilderList();
    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder getCustomOrBuilder(
        int index);

    /**
     * <pre>
     * RestartStrategy settings. Is required.
     * &#64;inject_tag: json:"restart_strategy"
     * </pre>
     *
     * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
     * @return Whether the restartStrategy field is set.
     */
    boolean hasRestartStrategy();
    /**
     * <pre>
     * RestartStrategy settings. Is required.
     * &#64;inject_tag: json:"restart_strategy"
     * </pre>
     *
     * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
     * @return The restartStrategy.
     */
    com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy getRestartStrategy();
    /**
     * <pre>
     * RestartStrategy settings. Is required.
     * &#64;inject_tag: json:"restart_strategy"
     * </pre>
     *
     * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
     */
    com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategyOrBuilder getRestartStrategyOrBuilder();

    /**
     * <pre>
     * Logger settings. Is required.
     * &#64;inject_tag: json:"logger" default:"" binding:"-"
     * </pre>
     *
     * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
     * @return Whether the logger field is set.
     */
    boolean hasLogger();
    /**
     * <pre>
     * Logger settings. Is required.
     * &#64;inject_tag: json:"logger" default:"" binding:"-"
     * </pre>
     *
     * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
     * @return The logger.
     */
    com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger getLogger();
    /**
     * <pre>
     * Logger settings. Is required.
     * &#64;inject_tag: json:"logger" default:"" binding:"-"
     * </pre>
     *
     * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
     */
    com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.LoggerOrBuilder getLoggerOrBuilder();
  }
  /**
   * <pre>
   * FlinkConfig
   * </pre>
   *
   * Protobuf type {@code flink.FlinkConfig}
   */
  public static final class FlinkConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flink.FlinkConfig)
      FlinkConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlinkConfig.newBuilder() to construct.
    private FlinkConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlinkConfig() {
      custom_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlinkConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlinkConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                custom_ = new java.util.ArrayList<com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item>();
                mutable_bitField0_ |= 0x00000001;
              }
              custom_.add(
                  input.readMessage(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.parser(), extensionRegistry));
              break;
            }
            case 18: {
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.Builder subBuilder = null;
              if (restartStrategy_ != null) {
                subBuilder = restartStrategy_.toBuilder();
              }
              restartStrategy_ = input.readMessage(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(restartStrategy_);
                restartStrategy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.Builder subBuilder = null;
              if (logger_ != null) {
                subBuilder = logger_.toBuilder();
              }
              logger_ = input.readMessage(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(logger_);
                logger_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          custom_ = java.util.Collections.unmodifiableList(custom_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.class, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Builder.class);
    }

    public interface ItemOrBuilder extends
        // @@protoc_insertion_point(interface_extends:flink.FlinkConfig.Item)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The key in key/value item, Is required, Min: 1, Max: 1024.
       * &#64;inject_tag: json:"key"
       * </pre>
       *
       * <code>string key = 1 [(.validator.field) = { ... }</code>
       * @return The key.
       */
      java.lang.String getKey();
      /**
       * <pre>
       * The key in key/value item, Is required, Min: 1, Max: 1024.
       * &#64;inject_tag: json:"key"
       * </pre>
       *
       * <code>string key = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for key.
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      /**
       * <pre>
       * The value in key/value item, Is required, Min: 1, Max: 1024.
       * &#64;inject_tag: json:"value" default:"" binding:"gte=1,lte=1024"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string value = 2 [(.validator.field) = { ... }</code>
       * @return The value.
       */
      java.lang.String getValue();
      /**
       * <pre>
       * The value in key/value item, Is required, Min: 1, Max: 1024.
       * &#64;inject_tag: json:"value" default:"" binding:"gte=1,lte=1024"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string value = 2 [(.validator.field) = { ... }</code>
       * @return The bytes for value.
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * <pre>
     * Item for uses-defined config.
     * </pre>
     *
     * Protobuf type {@code flink.FlinkConfig.Item}
     */
    public static final class Item extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:flink.FlinkConfig.Item)
        ItemOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Item.newBuilder() to construct.
      private Item(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Item() {
        key_ = "";
        value_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Item();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Item(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                key_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                value_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Item_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Item_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.class, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder.class);
      }

      public static final int KEY_FIELD_NUMBER = 1;
      private volatile java.lang.Object key_;
      /**
       * <pre>
       * The key in key/value item, Is required, Min: 1, Max: 1024.
       * &#64;inject_tag: json:"key"
       * </pre>
       *
       * <code>string key = 1 [(.validator.field) = { ... }</code>
       * @return The key.
       */
      @java.lang.Override
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The key in key/value item, Is required, Min: 1, Max: 1024.
       * &#64;inject_tag: json:"key"
       * </pre>
       *
       * <code>string key = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private volatile java.lang.Object value_;
      /**
       * <pre>
       * The value in key/value item, Is required, Min: 1, Max: 1024.
       * &#64;inject_tag: json:"value" default:"" binding:"gte=1,lte=1024"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string value = 2 [(.validator.field) = { ... }</code>
       * @return The value.
       */
      @java.lang.Override
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The value in key/value item, Is required, Min: 1, Max: 1024.
       * &#64;inject_tag: json:"value" default:"" binding:"gte=1,lte=1024"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string value = 2 [(.validator.field) = { ... }</code>
       * @return The bytes for value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item)) {
          return super.equals(obj);
        }
        com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item other = (com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item) obj;

        if (!getKey()
            .equals(other.getKey())) return false;
        if (!getValue()
            .equals(other.getValue())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Item for uses-defined config.
       * </pre>
       *
       * Protobuf type {@code flink.FlinkConfig.Item}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:flink.FlinkConfig.Item)
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Item_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Item_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.class, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder.class);
        }

        // Construct using com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          key_ = "";

          value_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Item_descriptor;
        }

        @java.lang.Override
        public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item getDefaultInstanceForType() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.getDefaultInstance();
        }

        @java.lang.Override
        public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item build() {
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item buildPartial() {
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item result = new com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item(this);
          result.key_ = key_;
          result.value_ = value_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item) {
            return mergeFrom((com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item other) {
          if (other == com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.getDefaultInstance()) return this;
          if (!other.getKey().isEmpty()) {
            key_ = other.key_;
            onChanged();
          }
          if (!other.getValue().isEmpty()) {
            value_ = other.value_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object key_ = "";
        /**
         * <pre>
         * The key in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"key"
         * </pre>
         *
         * <code>string key = 1 [(.validator.field) = { ... }</code>
         * @return The key.
         */
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The key in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"key"
         * </pre>
         *
         * <code>string key = 1 [(.validator.field) = { ... }</code>
         * @return The bytes for key.
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The key in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"key"
         * </pre>
         *
         * <code>string key = 1 [(.validator.field) = { ... }</code>
         * @param value The key to set.
         * @return This builder for chaining.
         */
        public Builder setKey(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          key_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The key in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"key"
         * </pre>
         *
         * <code>string key = 1 [(.validator.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearKey() {
          
          key_ = getDefaultInstance().getKey();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The key in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"key"
         * </pre>
         *
         * <code>string key = 1 [(.validator.field) = { ... }</code>
         * @param value The bytes for key to set.
         * @return This builder for chaining.
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          key_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object value_ = "";
        /**
         * <pre>
         * The value in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"value" default:"" binding:"gte=1,lte=1024"  minLength:"1" maxLength:"1024"
         * </pre>
         *
         * <code>string value = 2 [(.validator.field) = { ... }</code>
         * @return The value.
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The value in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"value" default:"" binding:"gte=1,lte=1024"  minLength:"1" maxLength:"1024"
         * </pre>
         *
         * <code>string value = 2 [(.validator.field) = { ... }</code>
         * @return The bytes for value.
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The value in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"value" default:"" binding:"gte=1,lte=1024"  minLength:"1" maxLength:"1024"
         * </pre>
         *
         * <code>string value = 2 [(.validator.field) = { ... }</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The value in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"value" default:"" binding:"gte=1,lte=1024"  minLength:"1" maxLength:"1024"
         * </pre>
         *
         * <code>string value = 2 [(.validator.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The value in key/value item, Is required, Min: 1, Max: 1024.
         * &#64;inject_tag: json:"value" default:"" binding:"gte=1,lte=1024"  minLength:"1" maxLength:"1024"
         * </pre>
         *
         * <code>string value = 2 [(.validator.field) = { ... }</code>
         * @param value The bytes for value to set.
         * @return This builder for chaining.
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          value_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:flink.FlinkConfig.Item)
      }

      // @@protoc_insertion_point(class_scope:flink.FlinkConfig.Item)
      private static final com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item();
      }

      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Item>
          PARSER = new com.google.protobuf.AbstractParser<Item>() {
        @java.lang.Override
        public Item parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Item(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Item> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Item> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RestartStrategyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:flink.FlinkConfig.RestartStrategy)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Flink restart_strategy, Optional value: "none | fixed-delay | failure-rate"
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>string restart_strategy = 1 [(.validator.field) = { ... }</code>
       * @return The restartStrategy.
       */
      java.lang.String getRestartStrategy();
      /**
       * <pre>
       * Flink restart_strategy, Optional value: "none | fixed-delay | failure-rate"
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>string restart_strategy = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for restartStrategy.
       */
      com.google.protobuf.ByteString
          getRestartStrategyBytes();

      /**
       * <pre>
       * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 1000. Default 1.
       * &#64;inject_tag: json:"fixed_delay_attempts"
       * </pre>
       *
       * <code>int32 fixed_delay_attempts = 2 [(.defaults.field) = { ... }</code>
       * @return The fixedDelayAttempts.
       */
      int getFixedDelayAttempts();

      /**
       * <pre>
       * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 86400. Default 1, unit is second.
       * &#64;inject_tag: json:"fixed_delay_delay
       * </pre>
       *
       * <code>int32 fixed_delay_delay = 3 [(.defaults.field) = { ... }</code>
       * @return The fixedDelayDelay.
       */
      int getFixedDelayDelay();

      /**
       * <pre>
       * Affect when restart_strategy == "failure-rate". Min: 1, Max: 1000. Default 1.
       * &#64;inject_tag: json:"failure_rate_max_failures_per_interval"
       * </pre>
       *
       * <code>int32 failure_rate_max_failures_per_interval = 4 [(.defaults.field) = { ... }</code>
       * @return The failureRateMaxFailuresPerInterval.
       */
      int getFailureRateMaxFailuresPerInterval();

      /**
       * <pre>
       * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 1. unit is second.
       * &#64;inject_tag: json:"failure_rate_delay"
       * </pre>
       *
       * <code>int32 failure_rate_delay = 5 [(.defaults.field) = { ... }</code>
       * @return The failureRateDelay.
       */
      int getFailureRateDelay();

      /**
       * <pre>
       * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 60, unit is second.
       * &#64;inject_tag: json:"failure_rate_failure_rate_interval"
       * </pre>
       *
       * <code>int32 failure_rate_failure_rate_interval = 6 [(.defaults.field) = { ... }</code>
       * @return The failureRateFailureRateInterval.
       */
      int getFailureRateFailureRateInterval();
    }
    /**
     * <pre>
     * Config for flink restart strategy.
     * </pre>
     *
     * Protobuf type {@code flink.FlinkConfig.RestartStrategy}
     */
    public static final class RestartStrategy extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:flink.FlinkConfig.RestartStrategy)
        RestartStrategyOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RestartStrategy.newBuilder() to construct.
      private RestartStrategy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RestartStrategy() {
        restartStrategy_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new RestartStrategy();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RestartStrategy(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                restartStrategy_ = s;
                break;
              }
              case 16: {

                fixedDelayAttempts_ = input.readInt32();
                break;
              }
              case 24: {

                fixedDelayDelay_ = input.readInt32();
                break;
              }
              case 32: {

                failureRateMaxFailuresPerInterval_ = input.readInt32();
                break;
              }
              case 40: {

                failureRateDelay_ = input.readInt32();
                break;
              }
              case 48: {

                failureRateFailureRateInterval_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_RestartStrategy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_RestartStrategy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.class, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.Builder.class);
      }

      public static final int RESTART_STRATEGY_FIELD_NUMBER = 1;
      private volatile java.lang.Object restartStrategy_;
      /**
       * <pre>
       * Flink restart_strategy, Optional value: "none | fixed-delay | failure-rate"
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>string restart_strategy = 1 [(.validator.field) = { ... }</code>
       * @return The restartStrategy.
       */
      @java.lang.Override
      public java.lang.String getRestartStrategy() {
        java.lang.Object ref = restartStrategy_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          restartStrategy_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Flink restart_strategy, Optional value: "none | fixed-delay | failure-rate"
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>string restart_strategy = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for restartStrategy.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRestartStrategyBytes() {
        java.lang.Object ref = restartStrategy_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          restartStrategy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FIXED_DELAY_ATTEMPTS_FIELD_NUMBER = 2;
      private int fixedDelayAttempts_;
      /**
       * <pre>
       * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 1000. Default 1.
       * &#64;inject_tag: json:"fixed_delay_attempts"
       * </pre>
       *
       * <code>int32 fixed_delay_attempts = 2 [(.defaults.field) = { ... }</code>
       * @return The fixedDelayAttempts.
       */
      @java.lang.Override
      public int getFixedDelayAttempts() {
        return fixedDelayAttempts_;
      }

      public static final int FIXED_DELAY_DELAY_FIELD_NUMBER = 3;
      private int fixedDelayDelay_;
      /**
       * <pre>
       * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 86400. Default 1, unit is second.
       * &#64;inject_tag: json:"fixed_delay_delay
       * </pre>
       *
       * <code>int32 fixed_delay_delay = 3 [(.defaults.field) = { ... }</code>
       * @return The fixedDelayDelay.
       */
      @java.lang.Override
      public int getFixedDelayDelay() {
        return fixedDelayDelay_;
      }

      public static final int FAILURE_RATE_MAX_FAILURES_PER_INTERVAL_FIELD_NUMBER = 4;
      private int failureRateMaxFailuresPerInterval_;
      /**
       * <pre>
       * Affect when restart_strategy == "failure-rate". Min: 1, Max: 1000. Default 1.
       * &#64;inject_tag: json:"failure_rate_max_failures_per_interval"
       * </pre>
       *
       * <code>int32 failure_rate_max_failures_per_interval = 4 [(.defaults.field) = { ... }</code>
       * @return The failureRateMaxFailuresPerInterval.
       */
      @java.lang.Override
      public int getFailureRateMaxFailuresPerInterval() {
        return failureRateMaxFailuresPerInterval_;
      }

      public static final int FAILURE_RATE_DELAY_FIELD_NUMBER = 5;
      private int failureRateDelay_;
      /**
       * <pre>
       * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 1. unit is second.
       * &#64;inject_tag: json:"failure_rate_delay"
       * </pre>
       *
       * <code>int32 failure_rate_delay = 5 [(.defaults.field) = { ... }</code>
       * @return The failureRateDelay.
       */
      @java.lang.Override
      public int getFailureRateDelay() {
        return failureRateDelay_;
      }

      public static final int FAILURE_RATE_FAILURE_RATE_INTERVAL_FIELD_NUMBER = 6;
      private int failureRateFailureRateInterval_;
      /**
       * <pre>
       * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 60, unit is second.
       * &#64;inject_tag: json:"failure_rate_failure_rate_interval"
       * </pre>
       *
       * <code>int32 failure_rate_failure_rate_interval = 6 [(.defaults.field) = { ... }</code>
       * @return The failureRateFailureRateInterval.
       */
      @java.lang.Override
      public int getFailureRateFailureRateInterval() {
        return failureRateFailureRateInterval_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(restartStrategy_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, restartStrategy_);
        }
        if (fixedDelayAttempts_ != 0) {
          output.writeInt32(2, fixedDelayAttempts_);
        }
        if (fixedDelayDelay_ != 0) {
          output.writeInt32(3, fixedDelayDelay_);
        }
        if (failureRateMaxFailuresPerInterval_ != 0) {
          output.writeInt32(4, failureRateMaxFailuresPerInterval_);
        }
        if (failureRateDelay_ != 0) {
          output.writeInt32(5, failureRateDelay_);
        }
        if (failureRateFailureRateInterval_ != 0) {
          output.writeInt32(6, failureRateFailureRateInterval_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(restartStrategy_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, restartStrategy_);
        }
        if (fixedDelayAttempts_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, fixedDelayAttempts_);
        }
        if (fixedDelayDelay_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, fixedDelayDelay_);
        }
        if (failureRateMaxFailuresPerInterval_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, failureRateMaxFailuresPerInterval_);
        }
        if (failureRateDelay_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, failureRateDelay_);
        }
        if (failureRateFailureRateInterval_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, failureRateFailureRateInterval_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy)) {
          return super.equals(obj);
        }
        com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy other = (com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy) obj;

        if (!getRestartStrategy()
            .equals(other.getRestartStrategy())) return false;
        if (getFixedDelayAttempts()
            != other.getFixedDelayAttempts()) return false;
        if (getFixedDelayDelay()
            != other.getFixedDelayDelay()) return false;
        if (getFailureRateMaxFailuresPerInterval()
            != other.getFailureRateMaxFailuresPerInterval()) return false;
        if (getFailureRateDelay()
            != other.getFailureRateDelay()) return false;
        if (getFailureRateFailureRateInterval()
            != other.getFailureRateFailureRateInterval()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + RESTART_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getRestartStrategy().hashCode();
        hash = (37 * hash) + FIXED_DELAY_ATTEMPTS_FIELD_NUMBER;
        hash = (53 * hash) + getFixedDelayAttempts();
        hash = (37 * hash) + FIXED_DELAY_DELAY_FIELD_NUMBER;
        hash = (53 * hash) + getFixedDelayDelay();
        hash = (37 * hash) + FAILURE_RATE_MAX_FAILURES_PER_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getFailureRateMaxFailuresPerInterval();
        hash = (37 * hash) + FAILURE_RATE_DELAY_FIELD_NUMBER;
        hash = (53 * hash) + getFailureRateDelay();
        hash = (37 * hash) + FAILURE_RATE_FAILURE_RATE_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getFailureRateFailureRateInterval();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Config for flink restart strategy.
       * </pre>
       *
       * Protobuf type {@code flink.FlinkConfig.RestartStrategy}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:flink.FlinkConfig.RestartStrategy)
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_RestartStrategy_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_RestartStrategy_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.class, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.Builder.class);
        }

        // Construct using com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          restartStrategy_ = "";

          fixedDelayAttempts_ = 0;

          fixedDelayDelay_ = 0;

          failureRateMaxFailuresPerInterval_ = 0;

          failureRateDelay_ = 0;

          failureRateFailureRateInterval_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_RestartStrategy_descriptor;
        }

        @java.lang.Override
        public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy getDefaultInstanceForType() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.getDefaultInstance();
        }

        @java.lang.Override
        public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy build() {
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy buildPartial() {
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy result = new com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy(this);
          result.restartStrategy_ = restartStrategy_;
          result.fixedDelayAttempts_ = fixedDelayAttempts_;
          result.fixedDelayDelay_ = fixedDelayDelay_;
          result.failureRateMaxFailuresPerInterval_ = failureRateMaxFailuresPerInterval_;
          result.failureRateDelay_ = failureRateDelay_;
          result.failureRateFailureRateInterval_ = failureRateFailureRateInterval_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy) {
            return mergeFrom((com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy other) {
          if (other == com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.getDefaultInstance()) return this;
          if (!other.getRestartStrategy().isEmpty()) {
            restartStrategy_ = other.restartStrategy_;
            onChanged();
          }
          if (other.getFixedDelayAttempts() != 0) {
            setFixedDelayAttempts(other.getFixedDelayAttempts());
          }
          if (other.getFixedDelayDelay() != 0) {
            setFixedDelayDelay(other.getFixedDelayDelay());
          }
          if (other.getFailureRateMaxFailuresPerInterval() != 0) {
            setFailureRateMaxFailuresPerInterval(other.getFailureRateMaxFailuresPerInterval());
          }
          if (other.getFailureRateDelay() != 0) {
            setFailureRateDelay(other.getFailureRateDelay());
          }
          if (other.getFailureRateFailureRateInterval() != 0) {
            setFailureRateFailureRateInterval(other.getFailureRateFailureRateInterval());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object restartStrategy_ = "";
        /**
         * <pre>
         * Flink restart_strategy, Optional value: "none | fixed-delay | failure-rate"
         * &#64;inject_tag: json:"restart_strategy"
         * </pre>
         *
         * <code>string restart_strategy = 1 [(.validator.field) = { ... }</code>
         * @return The restartStrategy.
         */
        public java.lang.String getRestartStrategy() {
          java.lang.Object ref = restartStrategy_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            restartStrategy_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Flink restart_strategy, Optional value: "none | fixed-delay | failure-rate"
         * &#64;inject_tag: json:"restart_strategy"
         * </pre>
         *
         * <code>string restart_strategy = 1 [(.validator.field) = { ... }</code>
         * @return The bytes for restartStrategy.
         */
        public com.google.protobuf.ByteString
            getRestartStrategyBytes() {
          java.lang.Object ref = restartStrategy_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            restartStrategy_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Flink restart_strategy, Optional value: "none | fixed-delay | failure-rate"
         * &#64;inject_tag: json:"restart_strategy"
         * </pre>
         *
         * <code>string restart_strategy = 1 [(.validator.field) = { ... }</code>
         * @param value The restartStrategy to set.
         * @return This builder for chaining.
         */
        public Builder setRestartStrategy(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          restartStrategy_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Flink restart_strategy, Optional value: "none | fixed-delay | failure-rate"
         * &#64;inject_tag: json:"restart_strategy"
         * </pre>
         *
         * <code>string restart_strategy = 1 [(.validator.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearRestartStrategy() {
          
          restartStrategy_ = getDefaultInstance().getRestartStrategy();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Flink restart_strategy, Optional value: "none | fixed-delay | failure-rate"
         * &#64;inject_tag: json:"restart_strategy"
         * </pre>
         *
         * <code>string restart_strategy = 1 [(.validator.field) = { ... }</code>
         * @param value The bytes for restartStrategy to set.
         * @return This builder for chaining.
         */
        public Builder setRestartStrategyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          restartStrategy_ = value;
          onChanged();
          return this;
        }

        private int fixedDelayAttempts_ ;
        /**
         * <pre>
         * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 1000. Default 1.
         * &#64;inject_tag: json:"fixed_delay_attempts"
         * </pre>
         *
         * <code>int32 fixed_delay_attempts = 2 [(.defaults.field) = { ... }</code>
         * @return The fixedDelayAttempts.
         */
        @java.lang.Override
        public int getFixedDelayAttempts() {
          return fixedDelayAttempts_;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 1000. Default 1.
         * &#64;inject_tag: json:"fixed_delay_attempts"
         * </pre>
         *
         * <code>int32 fixed_delay_attempts = 2 [(.defaults.field) = { ... }</code>
         * @param value The fixedDelayAttempts to set.
         * @return This builder for chaining.
         */
        public Builder setFixedDelayAttempts(int value) {
          
          fixedDelayAttempts_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 1000. Default 1.
         * &#64;inject_tag: json:"fixed_delay_attempts"
         * </pre>
         *
         * <code>int32 fixed_delay_attempts = 2 [(.defaults.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearFixedDelayAttempts() {
          
          fixedDelayAttempts_ = 0;
          onChanged();
          return this;
        }

        private int fixedDelayDelay_ ;
        /**
         * <pre>
         * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 86400. Default 1, unit is second.
         * &#64;inject_tag: json:"fixed_delay_delay
         * </pre>
         *
         * <code>int32 fixed_delay_delay = 3 [(.defaults.field) = { ... }</code>
         * @return The fixedDelayDelay.
         */
        @java.lang.Override
        public int getFixedDelayDelay() {
          return fixedDelayDelay_;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 86400. Default 1, unit is second.
         * &#64;inject_tag: json:"fixed_delay_delay
         * </pre>
         *
         * <code>int32 fixed_delay_delay = 3 [(.defaults.field) = { ... }</code>
         * @param value The fixedDelayDelay to set.
         * @return This builder for chaining.
         */
        public Builder setFixedDelayDelay(int value) {
          
          fixedDelayDelay_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "fixed-delay". Min: 1, Max: 86400. Default 1, unit is second.
         * &#64;inject_tag: json:"fixed_delay_delay
         * </pre>
         *
         * <code>int32 fixed_delay_delay = 3 [(.defaults.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearFixedDelayDelay() {
          
          fixedDelayDelay_ = 0;
          onChanged();
          return this;
        }

        private int failureRateMaxFailuresPerInterval_ ;
        /**
         * <pre>
         * Affect when restart_strategy == "failure-rate". Min: 1, Max: 1000. Default 1.
         * &#64;inject_tag: json:"failure_rate_max_failures_per_interval"
         * </pre>
         *
         * <code>int32 failure_rate_max_failures_per_interval = 4 [(.defaults.field) = { ... }</code>
         * @return The failureRateMaxFailuresPerInterval.
         */
        @java.lang.Override
        public int getFailureRateMaxFailuresPerInterval() {
          return failureRateMaxFailuresPerInterval_;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "failure-rate". Min: 1, Max: 1000. Default 1.
         * &#64;inject_tag: json:"failure_rate_max_failures_per_interval"
         * </pre>
         *
         * <code>int32 failure_rate_max_failures_per_interval = 4 [(.defaults.field) = { ... }</code>
         * @param value The failureRateMaxFailuresPerInterval to set.
         * @return This builder for chaining.
         */
        public Builder setFailureRateMaxFailuresPerInterval(int value) {
          
          failureRateMaxFailuresPerInterval_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "failure-rate". Min: 1, Max: 1000. Default 1.
         * &#64;inject_tag: json:"failure_rate_max_failures_per_interval"
         * </pre>
         *
         * <code>int32 failure_rate_max_failures_per_interval = 4 [(.defaults.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearFailureRateMaxFailuresPerInterval() {
          
          failureRateMaxFailuresPerInterval_ = 0;
          onChanged();
          return this;
        }

        private int failureRateDelay_ ;
        /**
         * <pre>
         * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 1. unit is second.
         * &#64;inject_tag: json:"failure_rate_delay"
         * </pre>
         *
         * <code>int32 failure_rate_delay = 5 [(.defaults.field) = { ... }</code>
         * @return The failureRateDelay.
         */
        @java.lang.Override
        public int getFailureRateDelay() {
          return failureRateDelay_;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 1. unit is second.
         * &#64;inject_tag: json:"failure_rate_delay"
         * </pre>
         *
         * <code>int32 failure_rate_delay = 5 [(.defaults.field) = { ... }</code>
         * @param value The failureRateDelay to set.
         * @return This builder for chaining.
         */
        public Builder setFailureRateDelay(int value) {
          
          failureRateDelay_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 1. unit is second.
         * &#64;inject_tag: json:"failure_rate_delay"
         * </pre>
         *
         * <code>int32 failure_rate_delay = 5 [(.defaults.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearFailureRateDelay() {
          
          failureRateDelay_ = 0;
          onChanged();
          return this;
        }

        private int failureRateFailureRateInterval_ ;
        /**
         * <pre>
         * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 60, unit is second.
         * &#64;inject_tag: json:"failure_rate_failure_rate_interval"
         * </pre>
         *
         * <code>int32 failure_rate_failure_rate_interval = 6 [(.defaults.field) = { ... }</code>
         * @return The failureRateFailureRateInterval.
         */
        @java.lang.Override
        public int getFailureRateFailureRateInterval() {
          return failureRateFailureRateInterval_;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 60, unit is second.
         * &#64;inject_tag: json:"failure_rate_failure_rate_interval"
         * </pre>
         *
         * <code>int32 failure_rate_failure_rate_interval = 6 [(.defaults.field) = { ... }</code>
         * @param value The failureRateFailureRateInterval to set.
         * @return This builder for chaining.
         */
        public Builder setFailureRateFailureRateInterval(int value) {
          
          failureRateFailureRateInterval_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Affect when restart_strategy == "failure-rate". Min: 1, Max: 86400. Default 60, unit is second.
         * &#64;inject_tag: json:"failure_rate_failure_rate_interval"
         * </pre>
         *
         * <code>int32 failure_rate_failure_rate_interval = 6 [(.defaults.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearFailureRateFailureRateInterval() {
          
          failureRateFailureRateInterval_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:flink.FlinkConfig.RestartStrategy)
      }

      // @@protoc_insertion_point(class_scope:flink.FlinkConfig.RestartStrategy)
      private static final com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy();
      }

      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RestartStrategy>
          PARSER = new com.google.protobuf.AbstractParser<RestartStrategy>() {
        @java.lang.Override
        public RestartStrategy parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RestartStrategy(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RestartStrategy> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RestartStrategy> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LoggerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:flink.FlinkConfig.Logger)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Root log level. Optional Value: "TRACE | DEBUG | INFO | WARN | ERROR", Default is "INFO".
       * &#64;inject_tag: json:"root_log_level"
       * </pre>
       *
       * <code>string root_log_level = 1 [(.defaults.field) = { ... }</code>
       * @return The rootLogLevel.
       */
      java.lang.String getRootLogLevel();
      /**
       * <pre>
       * Root log level. Optional Value: "TRACE | DEBUG | INFO | WARN | ERROR", Default is "INFO".
       * &#64;inject_tag: json:"root_log_level"
       * </pre>
       *
       * <code>string root_log_level = 1 [(.defaults.field) = { ... }</code>
       * @return The bytes for rootLogLevel.
       */
      com.google.protobuf.ByteString
          getRootLogLevelBytes();
    }
    /**
     * <pre>
     * Log config.
     * </pre>
     *
     * Protobuf type {@code flink.FlinkConfig.Logger}
     */
    public static final class Logger extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:flink.FlinkConfig.Logger)
        LoggerOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Logger.newBuilder() to construct.
      private Logger(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Logger() {
        rootLogLevel_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Logger();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Logger(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                rootLogLevel_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Logger_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Logger_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.class, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.Builder.class);
      }

      public static final int ROOT_LOG_LEVEL_FIELD_NUMBER = 1;
      private volatile java.lang.Object rootLogLevel_;
      /**
       * <pre>
       * Root log level. Optional Value: "TRACE | DEBUG | INFO | WARN | ERROR", Default is "INFO".
       * &#64;inject_tag: json:"root_log_level"
       * </pre>
       *
       * <code>string root_log_level = 1 [(.defaults.field) = { ... }</code>
       * @return The rootLogLevel.
       */
      @java.lang.Override
      public java.lang.String getRootLogLevel() {
        java.lang.Object ref = rootLogLevel_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rootLogLevel_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Root log level. Optional Value: "TRACE | DEBUG | INFO | WARN | ERROR", Default is "INFO".
       * &#64;inject_tag: json:"root_log_level"
       * </pre>
       *
       * <code>string root_log_level = 1 [(.defaults.field) = { ... }</code>
       * @return The bytes for rootLogLevel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRootLogLevelBytes() {
        java.lang.Object ref = rootLogLevel_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rootLogLevel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(rootLogLevel_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rootLogLevel_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(rootLogLevel_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rootLogLevel_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger)) {
          return super.equals(obj);
        }
        com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger other = (com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger) obj;

        if (!getRootLogLevel()
            .equals(other.getRootLogLevel())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ROOT_LOG_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getRootLogLevel().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Log config.
       * </pre>
       *
       * Protobuf type {@code flink.FlinkConfig.Logger}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:flink.FlinkConfig.Logger)
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.LoggerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Logger_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Logger_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.class, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.Builder.class);
        }

        // Construct using com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          rootLogLevel_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_Logger_descriptor;
        }

        @java.lang.Override
        public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger getDefaultInstanceForType() {
          return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.getDefaultInstance();
        }

        @java.lang.Override
        public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger build() {
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger buildPartial() {
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger result = new com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger(this);
          result.rootLogLevel_ = rootLogLevel_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger) {
            return mergeFrom((com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger other) {
          if (other == com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.getDefaultInstance()) return this;
          if (!other.getRootLogLevel().isEmpty()) {
            rootLogLevel_ = other.rootLogLevel_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object rootLogLevel_ = "";
        /**
         * <pre>
         * Root log level. Optional Value: "TRACE | DEBUG | INFO | WARN | ERROR", Default is "INFO".
         * &#64;inject_tag: json:"root_log_level"
         * </pre>
         *
         * <code>string root_log_level = 1 [(.defaults.field) = { ... }</code>
         * @return The rootLogLevel.
         */
        public java.lang.String getRootLogLevel() {
          java.lang.Object ref = rootLogLevel_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            rootLogLevel_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Root log level. Optional Value: "TRACE | DEBUG | INFO | WARN | ERROR", Default is "INFO".
         * &#64;inject_tag: json:"root_log_level"
         * </pre>
         *
         * <code>string root_log_level = 1 [(.defaults.field) = { ... }</code>
         * @return The bytes for rootLogLevel.
         */
        public com.google.protobuf.ByteString
            getRootLogLevelBytes() {
          java.lang.Object ref = rootLogLevel_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            rootLogLevel_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Root log level. Optional Value: "TRACE | DEBUG | INFO | WARN | ERROR", Default is "INFO".
         * &#64;inject_tag: json:"root_log_level"
         * </pre>
         *
         * <code>string root_log_level = 1 [(.defaults.field) = { ... }</code>
         * @param value The rootLogLevel to set.
         * @return This builder for chaining.
         */
        public Builder setRootLogLevel(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          rootLogLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Root log level. Optional Value: "TRACE | DEBUG | INFO | WARN | ERROR", Default is "INFO".
         * &#64;inject_tag: json:"root_log_level"
         * </pre>
         *
         * <code>string root_log_level = 1 [(.defaults.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearRootLogLevel() {
          
          rootLogLevel_ = getDefaultInstance().getRootLogLevel();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Root log level. Optional Value: "TRACE | DEBUG | INFO | WARN | ERROR", Default is "INFO".
         * &#64;inject_tag: json:"root_log_level"
         * </pre>
         *
         * <code>string root_log_level = 1 [(.defaults.field) = { ... }</code>
         * @param value The bytes for rootLogLevel to set.
         * @return This builder for chaining.
         */
        public Builder setRootLogLevelBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          rootLogLevel_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:flink.FlinkConfig.Logger)
      }

      // @@protoc_insertion_point(class_scope:flink.FlinkConfig.Logger)
      private static final com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger();
      }

      public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Logger>
          PARSER = new com.google.protobuf.AbstractParser<Logger>() {
        @java.lang.Override
        public Logger parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Logger(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Logger> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Logger> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CUSTOM_FIELD_NUMBER = 1;
    private java.util.List<com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item> custom_;
    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item> getCustomList() {
      return custom_;
    }
    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder> 
        getCustomOrBuilderList() {
      return custom_;
    }
    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public int getCustomCount() {
      return custom_.size();
    }
    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item getCustom(int index) {
      return custom_.get(index);
    }
    /**
     * <pre>
     * Use-defined config. Not required.
     * &#64;inject_tag: json:"custom" default:"" binding:"-"
     * </pre>
     *
     * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder getCustomOrBuilder(
        int index) {
      return custom_.get(index);
    }

    public static final int RESTART_STRATEGY_FIELD_NUMBER = 2;
    private com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy restartStrategy_;
    /**
     * <pre>
     * RestartStrategy settings. Is required.
     * &#64;inject_tag: json:"restart_strategy"
     * </pre>
     *
     * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
     * @return Whether the restartStrategy field is set.
     */
    @java.lang.Override
    public boolean hasRestartStrategy() {
      return restartStrategy_ != null;
    }
    /**
     * <pre>
     * RestartStrategy settings. Is required.
     * &#64;inject_tag: json:"restart_strategy"
     * </pre>
     *
     * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
     * @return The restartStrategy.
     */
    @java.lang.Override
    public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy getRestartStrategy() {
      return restartStrategy_ == null ? com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.getDefaultInstance() : restartStrategy_;
    }
    /**
     * <pre>
     * RestartStrategy settings. Is required.
     * &#64;inject_tag: json:"restart_strategy"
     * </pre>
     *
     * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
     */
    @java.lang.Override
    public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategyOrBuilder getRestartStrategyOrBuilder() {
      return getRestartStrategy();
    }

    public static final int LOGGER_FIELD_NUMBER = 3;
    private com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger logger_;
    /**
     * <pre>
     * Logger settings. Is required.
     * &#64;inject_tag: json:"logger" default:"" binding:"-"
     * </pre>
     *
     * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
     * @return Whether the logger field is set.
     */
    @java.lang.Override
    public boolean hasLogger() {
      return logger_ != null;
    }
    /**
     * <pre>
     * Logger settings. Is required.
     * &#64;inject_tag: json:"logger" default:"" binding:"-"
     * </pre>
     *
     * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
     * @return The logger.
     */
    @java.lang.Override
    public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger getLogger() {
      return logger_ == null ? com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.getDefaultInstance() : logger_;
    }
    /**
     * <pre>
     * Logger settings. Is required.
     * &#64;inject_tag: json:"logger" default:"" binding:"-"
     * </pre>
     *
     * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.LoggerOrBuilder getLoggerOrBuilder() {
      return getLogger();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < custom_.size(); i++) {
        output.writeMessage(1, custom_.get(i));
      }
      if (restartStrategy_ != null) {
        output.writeMessage(2, getRestartStrategy());
      }
      if (logger_ != null) {
        output.writeMessage(3, getLogger());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < custom_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, custom_.get(i));
      }
      if (restartStrategy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRestartStrategy());
      }
      if (logger_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLogger());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig)) {
        return super.equals(obj);
      }
      com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig other = (com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig) obj;

      if (!getCustomList()
          .equals(other.getCustomList())) return false;
      if (hasRestartStrategy() != other.hasRestartStrategy()) return false;
      if (hasRestartStrategy()) {
        if (!getRestartStrategy()
            .equals(other.getRestartStrategy())) return false;
      }
      if (hasLogger() != other.hasLogger()) return false;
      if (hasLogger()) {
        if (!getLogger()
            .equals(other.getLogger())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCustomCount() > 0) {
        hash = (37 * hash) + CUSTOM_FIELD_NUMBER;
        hash = (53 * hash) + getCustomList().hashCode();
      }
      if (hasRestartStrategy()) {
        hash = (37 * hash) + RESTART_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getRestartStrategy().hashCode();
      }
      if (hasLogger()) {
        hash = (37 * hash) + LOGGER_FIELD_NUMBER;
        hash = (53 * hash) + getLogger().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * FlinkConfig
     * </pre>
     *
     * Protobuf type {@code flink.FlinkConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flink.FlinkConfig)
        com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.class, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Builder.class);
      }

      // Construct using com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCustomFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (customBuilder_ == null) {
          custom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          customBuilder_.clear();
        }
        if (restartStrategyBuilder_ == null) {
          restartStrategy_ = null;
        } else {
          restartStrategy_ = null;
          restartStrategyBuilder_ = null;
        }
        if (loggerBuilder_ == null) {
          logger_ = null;
        } else {
          logger_ = null;
          loggerBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.internal_static_flink_FlinkConfig_descriptor;
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig getDefaultInstanceForType() {
        return com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig build() {
        com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig buildPartial() {
        com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig result = new com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig(this);
        int from_bitField0_ = bitField0_;
        if (customBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            custom_ = java.util.Collections.unmodifiableList(custom_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.custom_ = custom_;
        } else {
          result.custom_ = customBuilder_.build();
        }
        if (restartStrategyBuilder_ == null) {
          result.restartStrategy_ = restartStrategy_;
        } else {
          result.restartStrategy_ = restartStrategyBuilder_.build();
        }
        if (loggerBuilder_ == null) {
          result.logger_ = logger_;
        } else {
          result.logger_ = loggerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig) {
          return mergeFrom((com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig other) {
        if (other == com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.getDefaultInstance()) return this;
        if (customBuilder_ == null) {
          if (!other.custom_.isEmpty()) {
            if (custom_.isEmpty()) {
              custom_ = other.custom_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCustomIsMutable();
              custom_.addAll(other.custom_);
            }
            onChanged();
          }
        } else {
          if (!other.custom_.isEmpty()) {
            if (customBuilder_.isEmpty()) {
              customBuilder_.dispose();
              customBuilder_ = null;
              custom_ = other.custom_;
              bitField0_ = (bitField0_ & ~0x00000001);
              customBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCustomFieldBuilder() : null;
            } else {
              customBuilder_.addAllMessages(other.custom_);
            }
          }
        }
        if (other.hasRestartStrategy()) {
          mergeRestartStrategy(other.getRestartStrategy());
        }
        if (other.hasLogger()) {
          mergeLogger(other.getLogger());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item> custom_ =
        java.util.Collections.emptyList();
      private void ensureCustomIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          custom_ = new java.util.ArrayList<com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item>(custom_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder> customBuilder_;

      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public java.util.List<com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item> getCustomList() {
        if (customBuilder_ == null) {
          return java.util.Collections.unmodifiableList(custom_);
        } else {
          return customBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public int getCustomCount() {
        if (customBuilder_ == null) {
          return custom_.size();
        } else {
          return customBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item getCustom(int index) {
        if (customBuilder_ == null) {
          return custom_.get(index);
        } else {
          return customBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public Builder setCustom(
          int index, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIsMutable();
          custom_.set(index, value);
          onChanged();
        } else {
          customBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public Builder setCustom(
          int index, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder builderForValue) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.set(index, builderForValue.build());
          onChanged();
        } else {
          customBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public Builder addCustom(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIsMutable();
          custom_.add(value);
          onChanged();
        } else {
          customBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public Builder addCustom(
          int index, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIsMutable();
          custom_.add(index, value);
          onChanged();
        } else {
          customBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public Builder addCustom(
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder builderForValue) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.add(builderForValue.build());
          onChanged();
        } else {
          customBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public Builder addCustom(
          int index, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder builderForValue) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.add(index, builderForValue.build());
          onChanged();
        } else {
          customBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public Builder addAllCustom(
          java.lang.Iterable<? extends com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item> values) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, custom_);
          onChanged();
        } else {
          customBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public Builder clearCustom() {
        if (customBuilder_ == null) {
          custom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          customBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public Builder removeCustom(int index) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.remove(index);
          onChanged();
        } else {
          customBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder getCustomBuilder(
          int index) {
        return getCustomFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder getCustomOrBuilder(
          int index) {
        if (customBuilder_ == null) {
          return custom_.get(index);  } else {
          return customBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public java.util.List<? extends com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder> 
           getCustomOrBuilderList() {
        if (customBuilder_ != null) {
          return customBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(custom_);
        }
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder addCustomBuilder() {
        return getCustomFieldBuilder().addBuilder(
            com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.getDefaultInstance());
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder addCustomBuilder(
          int index) {
        return getCustomFieldBuilder().addBuilder(
            index, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.getDefaultInstance());
      }
      /**
       * <pre>
       * Use-defined config. Not required.
       * &#64;inject_tag: json:"custom" default:"" binding:"-"
       * </pre>
       *
       * <code>repeated .flink.FlinkConfig.Item custom = 1 [(.validator.field) = { ... }</code>
       */
      public java.util.List<com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder> 
           getCustomBuilderList() {
        return getCustomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder> 
          getCustomFieldBuilder() {
        if (customBuilder_ == null) {
          customBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Item.Builder, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.ItemOrBuilder>(
                  custom_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          custom_ = null;
        }
        return customBuilder_;
      }

      private com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy restartStrategy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.Builder, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategyOrBuilder> restartStrategyBuilder_;
      /**
       * <pre>
       * RestartStrategy settings. Is required.
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
       * @return Whether the restartStrategy field is set.
       */
      public boolean hasRestartStrategy() {
        return restartStrategyBuilder_ != null || restartStrategy_ != null;
      }
      /**
       * <pre>
       * RestartStrategy settings. Is required.
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
       * @return The restartStrategy.
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy getRestartStrategy() {
        if (restartStrategyBuilder_ == null) {
          return restartStrategy_ == null ? com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.getDefaultInstance() : restartStrategy_;
        } else {
          return restartStrategyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * RestartStrategy settings. Is required.
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
       */
      public Builder setRestartStrategy(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy value) {
        if (restartStrategyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          restartStrategy_ = value;
          onChanged();
        } else {
          restartStrategyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * RestartStrategy settings. Is required.
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
       */
      public Builder setRestartStrategy(
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.Builder builderForValue) {
        if (restartStrategyBuilder_ == null) {
          restartStrategy_ = builderForValue.build();
          onChanged();
        } else {
          restartStrategyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * RestartStrategy settings. Is required.
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
       */
      public Builder mergeRestartStrategy(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy value) {
        if (restartStrategyBuilder_ == null) {
          if (restartStrategy_ != null) {
            restartStrategy_ =
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.newBuilder(restartStrategy_).mergeFrom(value).buildPartial();
          } else {
            restartStrategy_ = value;
          }
          onChanged();
        } else {
          restartStrategyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * RestartStrategy settings. Is required.
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
       */
      public Builder clearRestartStrategy() {
        if (restartStrategyBuilder_ == null) {
          restartStrategy_ = null;
          onChanged();
        } else {
          restartStrategy_ = null;
          restartStrategyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * RestartStrategy settings. Is required.
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.Builder getRestartStrategyBuilder() {
        
        onChanged();
        return getRestartStrategyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * RestartStrategy settings. Is required.
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategyOrBuilder getRestartStrategyOrBuilder() {
        if (restartStrategyBuilder_ != null) {
          return restartStrategyBuilder_.getMessageOrBuilder();
        } else {
          return restartStrategy_ == null ?
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.getDefaultInstance() : restartStrategy_;
        }
      }
      /**
       * <pre>
       * RestartStrategy settings. Is required.
       * &#64;inject_tag: json:"restart_strategy"
       * </pre>
       *
       * <code>.flink.FlinkConfig.RestartStrategy restart_strategy = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.Builder, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategyOrBuilder> 
          getRestartStrategyFieldBuilder() {
        if (restartStrategyBuilder_ == null) {
          restartStrategyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategy.Builder, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.RestartStrategyOrBuilder>(
                  getRestartStrategy(),
                  getParentForChildren(),
                  isClean());
          restartStrategy_ = null;
        }
        return restartStrategyBuilder_;
      }

      private com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger logger_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.Builder, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.LoggerOrBuilder> loggerBuilder_;
      /**
       * <pre>
       * Logger settings. Is required.
       * &#64;inject_tag: json:"logger" default:"" binding:"-"
       * </pre>
       *
       * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
       * @return Whether the logger field is set.
       */
      public boolean hasLogger() {
        return loggerBuilder_ != null || logger_ != null;
      }
      /**
       * <pre>
       * Logger settings. Is required.
       * &#64;inject_tag: json:"logger" default:"" binding:"-"
       * </pre>
       *
       * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
       * @return The logger.
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger getLogger() {
        if (loggerBuilder_ == null) {
          return logger_ == null ? com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.getDefaultInstance() : logger_;
        } else {
          return loggerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Logger settings. Is required.
       * &#64;inject_tag: json:"logger" default:"" binding:"-"
       * </pre>
       *
       * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
       */
      public Builder setLogger(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger value) {
        if (loggerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          logger_ = value;
          onChanged();
        } else {
          loggerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Logger settings. Is required.
       * &#64;inject_tag: json:"logger" default:"" binding:"-"
       * </pre>
       *
       * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
       */
      public Builder setLogger(
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.Builder builderForValue) {
        if (loggerBuilder_ == null) {
          logger_ = builderForValue.build();
          onChanged();
        } else {
          loggerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Logger settings. Is required.
       * &#64;inject_tag: json:"logger" default:"" binding:"-"
       * </pre>
       *
       * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
       */
      public Builder mergeLogger(com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger value) {
        if (loggerBuilder_ == null) {
          if (logger_ != null) {
            logger_ =
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.newBuilder(logger_).mergeFrom(value).buildPartial();
          } else {
            logger_ = value;
          }
          onChanged();
        } else {
          loggerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Logger settings. Is required.
       * &#64;inject_tag: json:"logger" default:"" binding:"-"
       * </pre>
       *
       * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
       */
      public Builder clearLogger() {
        if (loggerBuilder_ == null) {
          logger_ = null;
          onChanged();
        } else {
          logger_ = null;
          loggerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Logger settings. Is required.
       * &#64;inject_tag: json:"logger" default:"" binding:"-"
       * </pre>
       *
       * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.Builder getLoggerBuilder() {
        
        onChanged();
        return getLoggerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Logger settings. Is required.
       * &#64;inject_tag: json:"logger" default:"" binding:"-"
       * </pre>
       *
       * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
       */
      public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.LoggerOrBuilder getLoggerOrBuilder() {
        if (loggerBuilder_ != null) {
          return loggerBuilder_.getMessageOrBuilder();
        } else {
          return logger_ == null ?
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.getDefaultInstance() : logger_;
        }
      }
      /**
       * <pre>
       * Logger settings. Is required.
       * &#64;inject_tag: json:"logger" default:"" binding:"-"
       * </pre>
       *
       * <code>.flink.FlinkConfig.Logger logger = 3 [(.validator.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.Builder, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.LoggerOrBuilder> 
          getLoggerFieldBuilder() {
        if (loggerBuilder_ == null) {
          loggerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.Logger.Builder, com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig.LoggerOrBuilder>(
                  getLogger(),
                  getParentForChildren(),
                  isClean());
          logger_ = null;
        }
        return loggerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flink.FlinkConfig)
    }

    // @@protoc_insertion_point(class_scope:flink.FlinkConfig)
    private static final com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig();
    }

    public static com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlinkConfig>
        PARSER = new com.google.protobuf.AbstractParser<FlinkConfig>() {
      @java.lang.Override
      public FlinkConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlinkConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlinkConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlinkConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dataomnis.gproto.types.pbmodel.pbflink.PBFlinkConfig.FlinkConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flink_FlinkConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flink_FlinkConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flink_FlinkConfig_Item_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flink_FlinkConfig_Item_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flink_FlinkConfig_RestartStrategy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flink_FlinkConfig_RestartStrategy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flink_FlinkConfig_Logger_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flink_FlinkConfig_Logger_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*proto/types/model/flink/flink_config.p" +
      "roto\022\005flink\0325github.com/yu31/proto-go-pl" +
      "ugin/proto/validator.proto\0321github.com/y" +
      "u31/proto-go-plugin/proto/gosql.proto\0324g" +
      "ithub.com/yu31/proto-go-plugin/proto/def" +
      "aults.proto\"\276\005\n\013FlinkConfig\022-\n\006custom\030\001 " +
      "\003(\0132\027.flink.FlinkConfig.ItemB\004\342\337\037\000\022<\n\020re" +
      "start_strategy\030\002 \001(\0132\".flink.FlinkConfig" +
      ".RestartStrategy\0226\n\006logger\030\003 \001(\0132\031.flink" +
      ".FlinkConfig.LoggerB\013\342\337\037\007\022\005\342\001\002\020\001\032@\n\004Item" +
      "\022\032\n\003key\030\001 \001(\tB\r\342\337\037\t\022\007\302\001\004\230\002\200\010\022\034\n\005value\030\002 " +
      "\001(\tB\r\342\337\037\t\022\007\302\001\004\230\002\200\010\032\346\002\n\017RestartStrategy\022D" +
      "\n\020restart_strategy\030\001 \001(\tB*\342\337\037&\022$\302\001!J\004non" +
      "eJ\013fixed-delayJ\014failure-rate\0224\n\024fixed_de" +
      "lay_attempts\030\002 \001(\005B\026\242\241\037\004\252\006\0011\342\337\037\n\022\010\262\001\0058\350\007" +
      "@\001\022#\n\021fixed_delay_delay\030\003 \001(\005B\010\242\241\037\004\252\006\0011\022" +
      "8\n&failure_rate_max_failures_per_interva" +
      "l\030\004 \001(\005B\010\242\241\037\004\252\006\0011\0223\n\022failure_rate_delay\030" +
      "\005 \001(\005B\027\242\241\037\004\252\006\0011\342\337\037\013\022\t\262\001\0068\200\243\005@\001\022C\n\"failur" +
      "e_rate_failure_rate_interval\030\006 \001(\005B\027\242\241\037\004" +
      "\252\006\0013\342\337\037\013\022\t\262\001\0068\200\243\005@\001\032W\n\006Logger\022M\n\016root_lo" +
      "g_level\030\001 \001(\tB5\242\241\037\007\252\006\004INFO\342\337\037&\022$\302\001!J\005TRA" +
      "CEJ\005DEBUGJ\004INFOJ\004WARNJ\005ERROR:\006\312\262\004\002\n\000Bx\n*" +
      "com.dataomnis.gproto.types.pbmodel.pbfli" +
      "nkB\rPBFlinkConfigP\000Z9github.com/DataWork" +
      "bench/gproto/pkg/types/pbmodel/pbflinkb\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.github.yu31.validatorpb.ValidatorPB.getDescriptor(),
          com.github.yu31.gosqlpb.GoSQLPB.getDescriptor(),
          com.github.yu31.defaultspb.DefaultsPB.getDescriptor(),
        });
    internal_static_flink_FlinkConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flink_FlinkConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flink_FlinkConfig_descriptor,
        new java.lang.String[] { "Custom", "RestartStrategy", "Logger", });
    internal_static_flink_FlinkConfig_Item_descriptor =
      internal_static_flink_FlinkConfig_descriptor.getNestedTypes().get(0);
    internal_static_flink_FlinkConfig_Item_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flink_FlinkConfig_Item_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_flink_FlinkConfig_RestartStrategy_descriptor =
      internal_static_flink_FlinkConfig_descriptor.getNestedTypes().get(1);
    internal_static_flink_FlinkConfig_RestartStrategy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flink_FlinkConfig_RestartStrategy_descriptor,
        new java.lang.String[] { "RestartStrategy", "FixedDelayAttempts", "FixedDelayDelay", "FailureRateMaxFailuresPerInterval", "FailureRateDelay", "FailureRateFailureRateInterval", });
    internal_static_flink_FlinkConfig_Logger_descriptor =
      internal_static_flink_FlinkConfig_descriptor.getNestedTypes().get(2);
    internal_static_flink_FlinkConfig_Logger_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flink_FlinkConfig_Logger_descriptor,
        new java.lang.String[] { "RootLogLevel", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.github.yu31.defaultspb.DefaultsPB.field);
    registry.add(com.github.yu31.gosqlpb.GoSQLPB.serialize);
    registry.add(com.github.yu31.validatorpb.ValidatorPB.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.github.yu31.validatorpb.ValidatorPB.getDescriptor();
    com.github.yu31.gosqlpb.GoSQLPB.getDescriptor();
    com.github.yu31.defaultspb.DefaultsPB.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
