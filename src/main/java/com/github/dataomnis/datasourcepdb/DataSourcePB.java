// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/datasource.proto

package com.github.dataomnis.datasourcepdb;

public final class DataSourcePB {
  private DataSourcePB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DatasourceNetworkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.DatasourceNetwork)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The Network type, 1 =&gt; eip, 2 =&gt; vpc(internal vpc)
     * &#64;inject_tag: json:"type" default:"" binding:"gte=1,lte=2" required:"true" minLength:"1" maxLength:"2"
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.Type type = 1 [(.validator.field) = { ... }</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * The Network type, 1 =&gt; eip, 2 =&gt; vpc(internal vpc)
     * &#64;inject_tag: json:"type" default:"" binding:"gte=1,lte=2" required:"true" minLength:"1" maxLength:"2"
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.Type type = 1 [(.validator.field) = { ... }</code>
     * @return The type.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type getType();

    /**
     * <pre>
     * The internal Network
     * &#64;inject_tag: json:"vpc_network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
     * @return Whether the vpcNetwork field is set.
     */
    boolean hasVpcNetwork();
    /**
     * <pre>
     * The internal Network
     * &#64;inject_tag: json:"vpc_network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
     * @return The vpcNetwork.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork getVpcNetwork();
    /**
     * <pre>
     * The internal Network
     * &#64;inject_tag: json:"vpc_network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetworkOrBuilder getVpcNetworkOrBuilder();
  }
  /**
   * <pre>
   * DatasourceNetwork
   * </pre>
   *
   * Protobuf type {@code datasource.DatasourceNetwork}
   */
  public static final class DatasourceNetwork extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.DatasourceNetwork)
      DatasourceNetworkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DatasourceNetwork.newBuilder() to construct.
    private DatasourceNetwork(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DatasourceNetwork() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DatasourceNetwork();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DatasourceNetwork(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.Builder subBuilder = null;
              if (vpcNetwork_ != null) {
                subBuilder = vpcNetwork_.toBuilder();
              }
              vpcNetwork_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vpcNetwork_);
                vpcNetwork_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.class, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder.class);
    }

    /**
     * Protobuf enum {@code datasource.DatasourceNetwork.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TypeUnset = 0;</code>
       */
      TypeUnset(0),
      /**
       * <code>Eip = 1;</code>
       */
      Eip(1),
      /**
       * <code>Vpc = 2;</code>
       */
      Vpc(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TypeUnset = 0;</code>
       */
      public static final int TypeUnset_VALUE = 0;
      /**
       * <code>Eip = 1;</code>
       */
      public static final int Eip_VALUE = 1;
      /**
       * <code>Vpc = 2;</code>
       */
      public static final int Vpc_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return TypeUnset;
          case 1: return Eip;
          case 2: return Vpc;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:datasource.DatasourceNetwork.Type)
    }

    public interface VpcNetworkOrBuilder extends
        // @@protoc_insertion_point(interface_extends:datasource.DatasourceNetwork.VpcNetwork)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Network id
       * &#64;inject_tag: json:"network_id" binding:"gte=0,lte=20" required:"true" minLength:"0" maxLength:"20"
       * </pre>
       *
       * <code>string network_id = 1 [(.validator.field) = { ... }</code>
       * @return The networkId.
       */
      java.lang.String getNetworkId();
      /**
       * <pre>
       * Network id
       * &#64;inject_tag: json:"network_id" binding:"gte=0,lte=20" required:"true" minLength:"0" maxLength:"20"
       * </pre>
       *
       * <code>string network_id = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for networkId.
       */
      com.google.protobuf.ByteString
          getNetworkIdBytes();
    }
    /**
     * Protobuf type {@code datasource.DatasourceNetwork.VpcNetwork}
     */
    public static final class VpcNetwork extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:datasource.DatasourceNetwork.VpcNetwork)
        VpcNetworkOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use VpcNetwork.newBuilder() to construct.
      private VpcNetwork(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private VpcNetwork() {
        networkId_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new VpcNetwork();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private VpcNetwork(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                networkId_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_VpcNetwork_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_VpcNetwork_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.class, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.Builder.class);
      }

      public static final int NETWORK_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object networkId_;
      /**
       * <pre>
       * Network id
       * &#64;inject_tag: json:"network_id" binding:"gte=0,lte=20" required:"true" minLength:"0" maxLength:"20"
       * </pre>
       *
       * <code>string network_id = 1 [(.validator.field) = { ... }</code>
       * @return The networkId.
       */
      @java.lang.Override
      public java.lang.String getNetworkId() {
        java.lang.Object ref = networkId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          networkId_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Network id
       * &#64;inject_tag: json:"network_id" binding:"gte=0,lte=20" required:"true" minLength:"0" maxLength:"20"
       * </pre>
       *
       * <code>string network_id = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for networkId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNetworkIdBytes() {
        java.lang.Object ref = networkId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          networkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getNetworkIdBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, networkId_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getNetworkIdBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, networkId_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork)) {
          return super.equals(obj);
        }
        com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork other = (com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork) obj;

        if (!getNetworkId()
            .equals(other.getNetworkId())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NETWORK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getNetworkId().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code datasource.DatasourceNetwork.VpcNetwork}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:datasource.DatasourceNetwork.VpcNetwork)
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetworkOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_VpcNetwork_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_VpcNetwork_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.class, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.Builder.class);
        }

        // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          networkId_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_VpcNetwork_descriptor;
        }

        @java.lang.Override
        public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork getDefaultInstanceForType() {
          return com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.getDefaultInstance();
        }

        @java.lang.Override
        public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork build() {
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork buildPartial() {
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork result = new com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork(this);
          result.networkId_ = networkId_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork) {
            return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork other) {
          if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.getDefaultInstance()) return this;
          if (!other.getNetworkId().isEmpty()) {
            networkId_ = other.networkId_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object networkId_ = "";
        /**
         * <pre>
         * Network id
         * &#64;inject_tag: json:"network_id" binding:"gte=0,lte=20" required:"true" minLength:"0" maxLength:"20"
         * </pre>
         *
         * <code>string network_id = 1 [(.validator.field) = { ... }</code>
         * @return The networkId.
         */
        public java.lang.String getNetworkId() {
          java.lang.Object ref = networkId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            networkId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Network id
         * &#64;inject_tag: json:"network_id" binding:"gte=0,lte=20" required:"true" minLength:"0" maxLength:"20"
         * </pre>
         *
         * <code>string network_id = 1 [(.validator.field) = { ... }</code>
         * @return The bytes for networkId.
         */
        public com.google.protobuf.ByteString
            getNetworkIdBytes() {
          java.lang.Object ref = networkId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            networkId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Network id
         * &#64;inject_tag: json:"network_id" binding:"gte=0,lte=20" required:"true" minLength:"0" maxLength:"20"
         * </pre>
         *
         * <code>string network_id = 1 [(.validator.field) = { ... }</code>
         * @param value The networkId to set.
         * @return This builder for chaining.
         */
        public Builder setNetworkId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          networkId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Network id
         * &#64;inject_tag: json:"network_id" binding:"gte=0,lte=20" required:"true" minLength:"0" maxLength:"20"
         * </pre>
         *
         * <code>string network_id = 1 [(.validator.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearNetworkId() {
          
          networkId_ = getDefaultInstance().getNetworkId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Network id
         * &#64;inject_tag: json:"network_id" binding:"gte=0,lte=20" required:"true" minLength:"0" maxLength:"20"
         * </pre>
         *
         * <code>string network_id = 1 [(.validator.field) = { ... }</code>
         * @param value The bytes for networkId to set.
         * @return This builder for chaining.
         */
        public Builder setNetworkIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          networkId_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:datasource.DatasourceNetwork.VpcNetwork)
      }

      // @@protoc_insertion_point(class_scope:datasource.DatasourceNetwork.VpcNetwork)
      private static final com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork();
      }

      public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<VpcNetwork>
          PARSER = new com.google.protobuf.AbstractParser<VpcNetwork>() {
        @java.lang.Override
        public VpcNetwork parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new VpcNetwork(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<VpcNetwork> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<VpcNetwork> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * The Network type, 1 =&gt; eip, 2 =&gt; vpc(internal vpc)
     * &#64;inject_tag: json:"type" default:"" binding:"gte=1,lte=2" required:"true" minLength:"1" maxLength:"2"
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.Type type = 1 [(.validator.field) = { ... }</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The Network type, 1 =&gt; eip, 2 =&gt; vpc(internal vpc)
     * &#64;inject_tag: json:"type" default:"" binding:"gte=1,lte=2" required:"true" minLength:"1" maxLength:"2"
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.Type type = 1 [(.validator.field) = { ... }</code>
     * @return The type.
     */
    @java.lang.Override public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type getType() {
      @SuppressWarnings("deprecation")
      com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type result = com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type.valueOf(type_);
      return result == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type.UNRECOGNIZED : result;
    }

    public static final int VPC_NETWORK_FIELD_NUMBER = 2;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork vpcNetwork_;
    /**
     * <pre>
     * The internal Network
     * &#64;inject_tag: json:"vpc_network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
     * @return Whether the vpcNetwork field is set.
     */
    @java.lang.Override
    public boolean hasVpcNetwork() {
      return vpcNetwork_ != null;
    }
    /**
     * <pre>
     * The internal Network
     * &#64;inject_tag: json:"vpc_network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
     * @return The vpcNetwork.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork getVpcNetwork() {
      return vpcNetwork_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.getDefaultInstance() : vpcNetwork_;
    }
    /**
     * <pre>
     * The internal Network
     * &#64;inject_tag: json:"vpc_network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetworkOrBuilder getVpcNetworkOrBuilder() {
      return getVpcNetwork();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type.TypeUnset.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (vpcNetwork_ != null) {
        output.writeMessage(2, getVpcNetwork());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type.TypeUnset.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (vpcNetwork_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getVpcNetwork());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork other = (com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork) obj;

      if (type_ != other.type_) return false;
      if (hasVpcNetwork() != other.hasVpcNetwork()) return false;
      if (hasVpcNetwork()) {
        if (!getVpcNetwork()
            .equals(other.getVpcNetwork())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasVpcNetwork()) {
        hash = (37 * hash) + VPC_NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getVpcNetwork().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * DatasourceNetwork
     * </pre>
     *
     * Protobuf type {@code datasource.DatasourceNetwork}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.DatasourceNetwork)
        com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.class, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (vpcNetworkBuilder_ == null) {
          vpcNetwork_ = null;
        } else {
          vpcNetwork_ = null;
          vpcNetworkBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DatasourceNetwork_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork result = new com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork(this);
        result.type_ = type_;
        if (vpcNetworkBuilder_ == null) {
          result.vpcNetwork_ = vpcNetwork_;
        } else {
          result.vpcNetwork_ = vpcNetworkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasVpcNetwork()) {
          mergeVpcNetwork(other.getVpcNetwork());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The Network type, 1 =&gt; eip, 2 =&gt; vpc(internal vpc)
       * &#64;inject_tag: json:"type" default:"" binding:"gte=1,lte=2" required:"true" minLength:"1" maxLength:"2"
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.Type type = 1 [(.validator.field) = { ... }</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The Network type, 1 =&gt; eip, 2 =&gt; vpc(internal vpc)
       * &#64;inject_tag: json:"type" default:"" binding:"gte=1,lte=2" required:"true" minLength:"1" maxLength:"2"
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.Type type = 1 [(.validator.field) = { ... }</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Network type, 1 =&gt; eip, 2 =&gt; vpc(internal vpc)
       * &#64;inject_tag: json:"type" default:"" binding:"gte=1,lte=2" required:"true" minLength:"1" maxLength:"2"
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.Type type = 1 [(.validator.field) = { ... }</code>
       * @return The type.
       */
      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type getType() {
        @SuppressWarnings("deprecation")
        com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type result = com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type.valueOf(type_);
        return result == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The Network type, 1 =&gt; eip, 2 =&gt; vpc(internal vpc)
       * &#64;inject_tag: json:"type" default:"" binding:"gte=1,lte=2" required:"true" minLength:"1" maxLength:"2"
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.Type type = 1 [(.validator.field) = { ... }</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Network type, 1 =&gt; eip, 2 =&gt; vpc(internal vpc)
       * &#64;inject_tag: json:"type" default:"" binding:"gte=1,lte=2" required:"true" minLength:"1" maxLength:"2"
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.Type type = 1 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork vpcNetwork_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetworkOrBuilder> vpcNetworkBuilder_;
      /**
       * <pre>
       * The internal Network
       * &#64;inject_tag: json:"vpc_network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
       * @return Whether the vpcNetwork field is set.
       */
      public boolean hasVpcNetwork() {
        return vpcNetworkBuilder_ != null || vpcNetwork_ != null;
      }
      /**
       * <pre>
       * The internal Network
       * &#64;inject_tag: json:"vpc_network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
       * @return The vpcNetwork.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork getVpcNetwork() {
        if (vpcNetworkBuilder_ == null) {
          return vpcNetwork_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.getDefaultInstance() : vpcNetwork_;
        } else {
          return vpcNetworkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The internal Network
       * &#64;inject_tag: json:"vpc_network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
       */
      public Builder setVpcNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork value) {
        if (vpcNetworkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vpcNetwork_ = value;
          onChanged();
        } else {
          vpcNetworkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The internal Network
       * &#64;inject_tag: json:"vpc_network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
       */
      public Builder setVpcNetwork(
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.Builder builderForValue) {
        if (vpcNetworkBuilder_ == null) {
          vpcNetwork_ = builderForValue.build();
          onChanged();
        } else {
          vpcNetworkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The internal Network
       * &#64;inject_tag: json:"vpc_network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
       */
      public Builder mergeVpcNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork value) {
        if (vpcNetworkBuilder_ == null) {
          if (vpcNetwork_ != null) {
            vpcNetwork_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.newBuilder(vpcNetwork_).mergeFrom(value).buildPartial();
          } else {
            vpcNetwork_ = value;
          }
          onChanged();
        } else {
          vpcNetworkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The internal Network
       * &#64;inject_tag: json:"vpc_network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
       */
      public Builder clearVpcNetwork() {
        if (vpcNetworkBuilder_ == null) {
          vpcNetwork_ = null;
          onChanged();
        } else {
          vpcNetwork_ = null;
          vpcNetworkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The internal Network
       * &#64;inject_tag: json:"vpc_network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.Builder getVpcNetworkBuilder() {
        
        onChanged();
        return getVpcNetworkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The internal Network
       * &#64;inject_tag: json:"vpc_network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetworkOrBuilder getVpcNetworkOrBuilder() {
        if (vpcNetworkBuilder_ != null) {
          return vpcNetworkBuilder_.getMessageOrBuilder();
        } else {
          return vpcNetwork_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.getDefaultInstance() : vpcNetwork_;
        }
      }
      /**
       * <pre>
       * The internal Network
       * &#64;inject_tag: json:"vpc_network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork.VpcNetwork vpc_network = 2 [(.validator.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetworkOrBuilder> 
          getVpcNetworkFieldBuilder() {
        if (vpcNetworkBuilder_ == null) {
          vpcNetworkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.VpcNetworkOrBuilder>(
                  getVpcNetwork(),
                  getParentForChildren(),
                  isClean());
          vpcNetwork_ = null;
        }
        return vpcNetworkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.DatasourceNetwork)
    }

    // @@protoc_insertion_point(class_scope:datasource.DatasourceNetwork)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DatasourceNetwork>
        PARSER = new com.google.protobuf.AbstractParser<DatasourceNetwork>() {
      @java.lang.Override
      public DatasourceNetwork parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DatasourceNetwork(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DatasourceNetwork> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DatasourceNetwork> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MySQLURLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.MySQLURL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The password.
     */
    java.lang.String getPassword();
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for password.
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The host.
     */
    java.lang.String getHost();
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for host.
     */
    com.google.protobuf.ByteString
        getHostBytes();

    /**
     * <pre>
     * The port
     * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
     * </pre>
     *
     * <code>int32 port = 4 [(.validator.field) = { ... }</code>
     * @return The port.
     */
    int getPort();

    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The database.
     */
    java.lang.String getDatabase();
    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The bytes for database.
     */
    com.google.protobuf.ByteString
        getDatabaseBytes();

    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    boolean hasNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder();
  }
  /**
   * Protobuf type {@code datasource.MySQLURL}
   */
  public static final class MySQLURL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.MySQLURL)
      MySQLURLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MySQLURL.newBuilder() to construct.
    private MySQLURL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MySQLURL() {
      user_ = "";
      password_ = "";
      host_ = "";
      database_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MySQLURL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MySQLURL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              user_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              host_ = s;
              break;
            }
            case 32: {

              port_ = input.readInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              database_ = s;
              break;
            }
            case 50: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder subBuilder = null;
              if (network_ != null) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_MySQLURL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_MySQLURL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.Builder.class);
    }

    public static final int USER_FIELD_NUMBER = 1;
    private volatile java.lang.Object user_;
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The password.
     */
    @java.lang.Override
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for password.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOST_FIELD_NUMBER = 3;
    private volatile java.lang.Object host_;
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The host.
     */
    @java.lang.Override
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        host_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for host.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 4;
    private int port_;
    /**
     * <pre>
     * The port
     * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
     * </pre>
     *
     * <code>int32 port = 4 [(.validator.field) = { ... }</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }

    public static final int DATABASE_FIELD_NUMBER = 5;
    private volatile java.lang.Object database_;
    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The database.
     */
    @java.lang.Override
    public java.lang.String getDatabase() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        database_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The bytes for database.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDatabaseBytes() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        database_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORK_FIELD_NUMBER = 6;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return network_ != null;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
      return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
      return getNetwork();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUserBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, user_);
      }
      if (!getPasswordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      if (!getHostBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, host_);
      }
      if (port_ != 0) {
        output.writeInt32(4, port_);
      }
      if (!getDatabaseBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, database_);
      }
      if (network_ != null) {
        output.writeMessage(6, getNetwork());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUserBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, user_);
      }
      if (!getPasswordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      if (!getHostBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, host_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      if (!getDatabaseBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, database_);
      }
      if (network_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getNetwork());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL) obj;

      if (!getUser()
          .equals(other.getUser())) return false;
      if (!getPassword()
          .equals(other.getPassword())) return false;
      if (!getHost()
          .equals(other.getHost())) return false;
      if (getPort()
          != other.getPort()) return false;
      if (!getDatabase()
          .equals(other.getDatabase())) return false;
      if (hasNetwork() != other.hasNetwork()) return false;
      if (hasNetwork()) {
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      hash = (37 * hash) + HOST_FIELD_NUMBER;
      hash = (53 * hash) + getHost().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + DATABASE_FIELD_NUMBER;
      hash = (53 * hash) + getDatabase().hashCode();
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code datasource.MySQLURL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.MySQLURL)
        com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_MySQLURL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_MySQLURL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        user_ = "";

        password_ = "";

        host_ = "";

        port_ = 0;

        database_ = "";

        if (networkBuilder_ == null) {
          network_ = null;
        } else {
          network_ = null;
          networkBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_MySQLURL_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL(this);
        result.user_ = user_;
        result.password_ = password_;
        result.host_ = host_;
        result.port_ = port_;
        result.database_ = database_;
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.getDefaultInstance()) return this;
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          onChanged();
        }
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        if (!other.getHost().isEmpty()) {
          host_ = other.host_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (!other.getDatabase().isEmpty()) {
          database_ = other.database_;
          onChanged();
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @return The user.
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for user.
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        user_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @return The password.
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @return The bytes for password.
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @param value The password to set.
       * @return This builder for chaining.
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @param value The bytes for password to set.
       * @return This builder for chaining.
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object host_ = "";
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @return The host.
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @return The bytes for host.
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @param value The host to set.
       * @return This builder for chaining.
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearHost() {
        
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @param value The bytes for host to set.
       * @return This builder for chaining.
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        host_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 4 [(.validator.field) = { ... }</code>
       * @return The port.
       */
      @java.lang.Override
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 4 [(.validator.field) = { ... }</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 4 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object database_ = "";
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @return The database.
       */
      public java.lang.String getDatabase() {
        java.lang.Object ref = database_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          database_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @return The bytes for database.
       */
      public com.google.protobuf.ByteString
          getDatabaseBytes() {
        java.lang.Object ref = database_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          database_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @param value The database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabase(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        database_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearDatabase() {
        
        database_ = getDefaultInstance().getDatabase();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @param value The bytes for database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        database_ = value;
        onChanged();
        return this;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> networkBuilder_;
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       * @return Whether the network field is set.
       */
      public boolean hasNetwork() {
        return networkBuilder_ != null || network_ != null;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       * @return The network.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder mergeNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (network_ != null) {
            network_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = null;
          onChanged();
        } else {
          network_ = null;
          networkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder getNetworkBuilder() {
        
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.MySQLURL)
    }

    // @@protoc_insertion_point(class_scope:datasource.MySQLURL)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MySQLURL>
        PARSER = new com.google.protobuf.AbstractParser<MySQLURL>() {
      @java.lang.Override
      public MySQLURL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MySQLURL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MySQLURL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MySQLURL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PostgreSQLURLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.PostgreSQLURL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The password.
     */
    java.lang.String getPassword();
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for password.
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The host.
     */
    java.lang.String getHost();
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for host.
     */
    com.google.protobuf.ByteString
        getHostBytes();

    /**
     * <pre>
     * The port
     * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
     * </pre>
     *
     * <code>int32 port = 4 [(.validator.field) = { ... }</code>
     * @return The port.
     */
    int getPort();

    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The database.
     */
    java.lang.String getDatabase();
    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The bytes for database.
     */
    com.google.protobuf.ByteString
        getDatabaseBytes();

    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    boolean hasNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder();
  }
  /**
   * <pre>
   * PostgreSQLURL used as request parameters for RPC and HTTP(based on Body)
   * </pre>
   *
   * Protobuf type {@code datasource.PostgreSQLURL}
   */
  public static final class PostgreSQLURL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.PostgreSQLURL)
      PostgreSQLURLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PostgreSQLURL.newBuilder() to construct.
    private PostgreSQLURL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PostgreSQLURL() {
      user_ = "";
      password_ = "";
      host_ = "";
      database_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PostgreSQLURL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PostgreSQLURL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              user_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              host_ = s;
              break;
            }
            case 32: {

              port_ = input.readInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              database_ = s;
              break;
            }
            case 50: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder subBuilder = null;
              if (network_ != null) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_PostgreSQLURL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_PostgreSQLURL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.Builder.class);
    }

    public static final int USER_FIELD_NUMBER = 1;
    private volatile java.lang.Object user_;
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The password.
     */
    @java.lang.Override
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for password.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOST_FIELD_NUMBER = 3;
    private volatile java.lang.Object host_;
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The host.
     */
    @java.lang.Override
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        host_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for host.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 4;
    private int port_;
    /**
     * <pre>
     * The port
     * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
     * </pre>
     *
     * <code>int32 port = 4 [(.validator.field) = { ... }</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }

    public static final int DATABASE_FIELD_NUMBER = 5;
    private volatile java.lang.Object database_;
    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The database.
     */
    @java.lang.Override
    public java.lang.String getDatabase() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        database_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The bytes for database.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDatabaseBytes() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        database_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORK_FIELD_NUMBER = 6;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return network_ != null;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
      return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
      return getNetwork();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUserBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, user_);
      }
      if (!getPasswordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      if (!getHostBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, host_);
      }
      if (port_ != 0) {
        output.writeInt32(4, port_);
      }
      if (!getDatabaseBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, database_);
      }
      if (network_ != null) {
        output.writeMessage(6, getNetwork());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUserBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, user_);
      }
      if (!getPasswordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      if (!getHostBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, host_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      if (!getDatabaseBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, database_);
      }
      if (network_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getNetwork());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL) obj;

      if (!getUser()
          .equals(other.getUser())) return false;
      if (!getPassword()
          .equals(other.getPassword())) return false;
      if (!getHost()
          .equals(other.getHost())) return false;
      if (getPort()
          != other.getPort()) return false;
      if (!getDatabase()
          .equals(other.getDatabase())) return false;
      if (hasNetwork() != other.hasNetwork()) return false;
      if (hasNetwork()) {
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      hash = (37 * hash) + HOST_FIELD_NUMBER;
      hash = (53 * hash) + getHost().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + DATABASE_FIELD_NUMBER;
      hash = (53 * hash) + getDatabase().hashCode();
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PostgreSQLURL used as request parameters for RPC and HTTP(based on Body)
     * </pre>
     *
     * Protobuf type {@code datasource.PostgreSQLURL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.PostgreSQLURL)
        com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_PostgreSQLURL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_PostgreSQLURL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        user_ = "";

        password_ = "";

        host_ = "";

        port_ = 0;

        database_ = "";

        if (networkBuilder_ == null) {
          network_ = null;
        } else {
          network_ = null;
          networkBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_PostgreSQLURL_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL(this);
        result.user_ = user_;
        result.password_ = password_;
        result.host_ = host_;
        result.port_ = port_;
        result.database_ = database_;
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.getDefaultInstance()) return this;
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          onChanged();
        }
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        if (!other.getHost().isEmpty()) {
          host_ = other.host_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (!other.getDatabase().isEmpty()) {
          database_ = other.database_;
          onChanged();
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @return The user.
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for user.
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        user_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @return The password.
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @return The bytes for password.
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @param value The password to set.
       * @return This builder for chaining.
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @param value The bytes for password to set.
       * @return This builder for chaining.
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object host_ = "";
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @return The host.
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @return The bytes for host.
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @param value The host to set.
       * @return This builder for chaining.
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearHost() {
        
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @param value The bytes for host to set.
       * @return This builder for chaining.
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        host_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 4 [(.validator.field) = { ... }</code>
       * @return The port.
       */
      @java.lang.Override
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 4 [(.validator.field) = { ... }</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 4 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object database_ = "";
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @return The database.
       */
      public java.lang.String getDatabase() {
        java.lang.Object ref = database_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          database_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @return The bytes for database.
       */
      public com.google.protobuf.ByteString
          getDatabaseBytes() {
        java.lang.Object ref = database_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          database_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @param value The database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabase(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        database_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearDatabase() {
        
        database_ = getDefaultInstance().getDatabase();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @param value The bytes for database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        database_ = value;
        onChanged();
        return this;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> networkBuilder_;
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       * @return Whether the network field is set.
       */
      public boolean hasNetwork() {
        return networkBuilder_ != null || network_ != null;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       * @return The network.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder mergeNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (network_ != null) {
            network_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = null;
          onChanged();
        } else {
          network_ = null;
          networkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder getNetworkBuilder() {
        
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.PostgreSQLURL)
    }

    // @@protoc_insertion_point(class_scope:datasource.PostgreSQLURL)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PostgreSQLURL>
        PARSER = new com.google.protobuf.AbstractParser<PostgreSQLURL>() {
      @java.lang.Override
      public PostgreSQLURL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PostgreSQLURL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PostgreSQLURL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PostgreSQLURL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClickHouseURLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.ClickHouseURL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=0,lte=64" required:"true" minLength:"0" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The password.
     */
    java.lang.String getPassword();
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=0,lte=64" required:"true" minLength:"0" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for password.
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The host.
     */
    java.lang.String getHost();
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for host.
     */
    com.google.protobuf.ByteString
        getHostBytes();

    /**
     * <pre>
     * The port
     * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
     * </pre>
     *
     * <code>int32 port = 4 [(.validator.field) = { ... }</code>
     * @return The port.
     */
    int getPort();

    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The database.
     */
    java.lang.String getDatabase();
    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The bytes for database.
     */
    com.google.protobuf.ByteString
        getDatabaseBytes();

    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    boolean hasNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder();
  }
  /**
   * <pre>
   * ClickHouseURL used as request parameters for RPC and HTTP(based on Body)
   * </pre>
   *
   * Protobuf type {@code datasource.ClickHouseURL}
   */
  public static final class ClickHouseURL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.ClickHouseURL)
      ClickHouseURLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClickHouseURL.newBuilder() to construct.
    private ClickHouseURL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClickHouseURL() {
      user_ = "";
      password_ = "";
      host_ = "";
      database_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClickHouseURL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClickHouseURL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              user_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              host_ = s;
              break;
            }
            case 32: {

              port_ = input.readInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              database_ = s;
              break;
            }
            case 50: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder subBuilder = null;
              if (network_ != null) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_ClickHouseURL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_ClickHouseURL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.Builder.class);
    }

    public static final int USER_FIELD_NUMBER = 1;
    private volatile java.lang.Object user_;
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=0,lte=64" required:"true" minLength:"0" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The password.
     */
    @java.lang.Override
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=0,lte=64" required:"true" minLength:"0" maxLength:"64"
     * </pre>
     *
     * <code>string password = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for password.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOST_FIELD_NUMBER = 3;
    private volatile java.lang.Object host_;
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The host.
     */
    @java.lang.Override
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        host_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for host.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 4;
    private int port_;
    /**
     * <pre>
     * The port
     * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
     * </pre>
     *
     * <code>int32 port = 4 [(.validator.field) = { ... }</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }

    public static final int DATABASE_FIELD_NUMBER = 5;
    private volatile java.lang.Object database_;
    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The database.
     */
    @java.lang.Override
    public java.lang.String getDatabase() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        database_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The database
     * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string database = 5 [(.validator.field) = { ... }</code>
     * @return The bytes for database.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDatabaseBytes() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        database_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORK_FIELD_NUMBER = 6;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return network_ != null;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
      return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
      return getNetwork();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUserBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, user_);
      }
      if (!getPasswordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      if (!getHostBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, host_);
      }
      if (port_ != 0) {
        output.writeInt32(4, port_);
      }
      if (!getDatabaseBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, database_);
      }
      if (network_ != null) {
        output.writeMessage(6, getNetwork());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUserBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, user_);
      }
      if (!getPasswordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      if (!getHostBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, host_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      if (!getDatabaseBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, database_);
      }
      if (network_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getNetwork());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL) obj;

      if (!getUser()
          .equals(other.getUser())) return false;
      if (!getPassword()
          .equals(other.getPassword())) return false;
      if (!getHost()
          .equals(other.getHost())) return false;
      if (getPort()
          != other.getPort()) return false;
      if (!getDatabase()
          .equals(other.getDatabase())) return false;
      if (hasNetwork() != other.hasNetwork()) return false;
      if (hasNetwork()) {
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      hash = (37 * hash) + HOST_FIELD_NUMBER;
      hash = (53 * hash) + getHost().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + DATABASE_FIELD_NUMBER;
      hash = (53 * hash) + getDatabase().hashCode();
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ClickHouseURL used as request parameters for RPC and HTTP(based on Body)
     * </pre>
     *
     * Protobuf type {@code datasource.ClickHouseURL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.ClickHouseURL)
        com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_ClickHouseURL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_ClickHouseURL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        user_ = "";

        password_ = "";

        host_ = "";

        port_ = 0;

        database_ = "";

        if (networkBuilder_ == null) {
          network_ = null;
        } else {
          network_ = null;
          networkBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_ClickHouseURL_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL(this);
        result.user_ = user_;
        result.password_ = password_;
        result.host_ = host_;
        result.port_ = port_;
        result.database_ = database_;
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.getDefaultInstance()) return this;
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          onChanged();
        }
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        if (!other.getHost().isEmpty()) {
          host_ = other.host_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (!other.getDatabase().isEmpty()) {
          database_ = other.database_;
          onChanged();
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @return The user.
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for user.
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 1 [(.validator.field) = { ... }</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        user_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=0,lte=64" required:"true" minLength:"0" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @return The password.
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=0,lte=64" required:"true" minLength:"0" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @return The bytes for password.
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=0,lte=64" required:"true" minLength:"0" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @param value The password to set.
       * @return This builder for chaining.
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=0,lte=64" required:"true" minLength:"0" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=0,lte=64" required:"true" minLength:"0" maxLength:"64"
       * </pre>
       *
       * <code>string password = 2 [(.validator.field) = { ... }</code>
       * @param value The bytes for password to set.
       * @return This builder for chaining.
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object host_ = "";
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @return The host.
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @return The bytes for host.
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @param value The host to set.
       * @return This builder for chaining.
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearHost() {
        
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 3 [(.validator.field) = { ... }</code>
       * @param value The bytes for host to set.
       * @return This builder for chaining.
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        host_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 4 [(.validator.field) = { ... }</code>
       * @return The port.
       */
      @java.lang.Override
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 4 [(.validator.field) = { ... }</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 4 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object database_ = "";
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @return The database.
       */
      public java.lang.String getDatabase() {
        java.lang.Object ref = database_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          database_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @return The bytes for database.
       */
      public com.google.protobuf.ByteString
          getDatabaseBytes() {
        java.lang.Object ref = database_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          database_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @param value The database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabase(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        database_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearDatabase() {
        
        database_ = getDefaultInstance().getDatabase();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The database
       * &#64;inject_tag: json:"database" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string database = 5 [(.validator.field) = { ... }</code>
       * @param value The bytes for database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        database_ = value;
        onChanged();
        return this;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> networkBuilder_;
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       * @return Whether the network field is set.
       */
      public boolean hasNetwork() {
        return networkBuilder_ != null || network_ != null;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       * @return The network.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder mergeNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (network_ != null) {
            network_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = null;
          onChanged();
        } else {
          network_ = null;
          networkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder getNetworkBuilder() {
        
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 6 [(.validator.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.ClickHouseURL)
    }

    // @@protoc_insertion_point(class_scope:datasource.ClickHouseURL)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClickHouseURL>
        PARSER = new com.google.protobuf.AbstractParser<ClickHouseURL>() {
      @java.lang.Override
      public ClickHouseURL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClickHouseURL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClickHouseURL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClickHouseURL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KafkaURLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.KafkaURL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The kafak brokers.
     * &#64;inject_tag: json:"kafka_brokers" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string kafka_brokers = 1 [(.validator.field) = { ... }</code>
     * @return The kafkaBrokers.
     */
    java.lang.String getKafkaBrokers();
    /**
     * <pre>
     * The kafak brokers.
     * &#64;inject_tag: json:"kafka_brokers" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string kafka_brokers = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for kafkaBrokers.
     */
    com.google.protobuf.ByteString
        getKafkaBrokersBytes();

    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    boolean hasNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder();
  }
  /**
   * <pre>
   * KafkaURL used as request parameters for RPC and HTTP(based on Body)
   * </pre>
   *
   * Protobuf type {@code datasource.KafkaURL}
   */
  public static final class KafkaURL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.KafkaURL)
      KafkaURLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KafkaURL.newBuilder() to construct.
    private KafkaURL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KafkaURL() {
      kafkaBrokers_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KafkaURL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KafkaURL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              kafkaBrokers_ = s;
              break;
            }
            case 18: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder subBuilder = null;
              if (network_ != null) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_KafkaURL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_KafkaURL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.Builder.class);
    }

    public static final int KAFKA_BROKERS_FIELD_NUMBER = 1;
    private volatile java.lang.Object kafkaBrokers_;
    /**
     * <pre>
     * The kafak brokers.
     * &#64;inject_tag: json:"kafka_brokers" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string kafka_brokers = 1 [(.validator.field) = { ... }</code>
     * @return The kafkaBrokers.
     */
    @java.lang.Override
    public java.lang.String getKafkaBrokers() {
      java.lang.Object ref = kafkaBrokers_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kafkaBrokers_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The kafak brokers.
     * &#64;inject_tag: json:"kafka_brokers" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string kafka_brokers = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for kafkaBrokers.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKafkaBrokersBytes() {
      java.lang.Object ref = kafkaBrokers_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kafkaBrokers_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORK_FIELD_NUMBER = 2;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return network_ != null;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
      return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
      return getNetwork();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKafkaBrokersBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, kafkaBrokers_);
      }
      if (network_ != null) {
        output.writeMessage(2, getNetwork());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKafkaBrokersBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, kafkaBrokers_);
      }
      if (network_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNetwork());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL) obj;

      if (!getKafkaBrokers()
          .equals(other.getKafkaBrokers())) return false;
      if (hasNetwork() != other.hasNetwork()) return false;
      if (hasNetwork()) {
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KAFKA_BROKERS_FIELD_NUMBER;
      hash = (53 * hash) + getKafkaBrokers().hashCode();
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * KafkaURL used as request parameters for RPC and HTTP(based on Body)
     * </pre>
     *
     * Protobuf type {@code datasource.KafkaURL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.KafkaURL)
        com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_KafkaURL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_KafkaURL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        kafkaBrokers_ = "";

        if (networkBuilder_ == null) {
          network_ = null;
        } else {
          network_ = null;
          networkBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_KafkaURL_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL(this);
        result.kafkaBrokers_ = kafkaBrokers_;
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.getDefaultInstance()) return this;
        if (!other.getKafkaBrokers().isEmpty()) {
          kafkaBrokers_ = other.kafkaBrokers_;
          onChanged();
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object kafkaBrokers_ = "";
      /**
       * <pre>
       * The kafak brokers.
       * &#64;inject_tag: json:"kafka_brokers" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string kafka_brokers = 1 [(.validator.field) = { ... }</code>
       * @return The kafkaBrokers.
       */
      public java.lang.String getKafkaBrokers() {
        java.lang.Object ref = kafkaBrokers_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          kafkaBrokers_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The kafak brokers.
       * &#64;inject_tag: json:"kafka_brokers" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string kafka_brokers = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for kafkaBrokers.
       */
      public com.google.protobuf.ByteString
          getKafkaBrokersBytes() {
        java.lang.Object ref = kafkaBrokers_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          kafkaBrokers_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The kafak brokers.
       * &#64;inject_tag: json:"kafka_brokers" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string kafka_brokers = 1 [(.validator.field) = { ... }</code>
       * @param value The kafkaBrokers to set.
       * @return This builder for chaining.
       */
      public Builder setKafkaBrokers(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        kafkaBrokers_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The kafak brokers.
       * &#64;inject_tag: json:"kafka_brokers" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string kafka_brokers = 1 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearKafkaBrokers() {
        
        kafkaBrokers_ = getDefaultInstance().getKafkaBrokers();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The kafak brokers.
       * &#64;inject_tag: json:"kafka_brokers" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string kafka_brokers = 1 [(.validator.field) = { ... }</code>
       * @param value The bytes for kafkaBrokers to set.
       * @return This builder for chaining.
       */
      public Builder setKafkaBrokersBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        kafkaBrokers_ = value;
        onChanged();
        return this;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> networkBuilder_;
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
       * @return Whether the network field is set.
       */
      public boolean hasNetwork() {
        return networkBuilder_ != null || network_ != null;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
       * @return The network.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
       */
      public Builder mergeNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (network_ != null) {
            network_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = null;
          onChanged();
        } else {
          network_ = null;
          networkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder getNetworkBuilder() {
        
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2 [(.validator.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.KafkaURL)
    }

    // @@protoc_insertion_point(class_scope:datasource.KafkaURL)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KafkaURL>
        PARSER = new com.google.protobuf.AbstractParser<KafkaURL>() {
      @java.lang.Override
      public KafkaURL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KafkaURL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KafkaURL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KafkaURL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S3URLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.S3URL)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * S3Url used as request parameters for RPC and HTTP(based on Body)
   * </pre>
   *
   * Protobuf type {@code datasource.S3URL}
   */
  public static final class S3URL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.S3URL)
      S3URLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S3URL.newBuilder() to construct.
    private S3URL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S3URL() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new S3URL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S3URL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_S3URL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_S3URL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * S3Url used as request parameters for RPC and HTTP(based on Body)
     * </pre>
     *
     * Protobuf type {@code datasource.S3URL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.S3URL)
        com.github.dataomnis.datasourcepdb.DataSourcePB.S3URLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_S3URL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_S3URL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_S3URL_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.S3URL)
    }

    // @@protoc_insertion_point(class_scope:datasource.S3URL)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<S3URL>
        PARSER = new com.google.protobuf.AbstractParser<S3URL>() {
      @java.lang.Override
      public S3URL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S3URL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S3URL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<S3URL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HBaseURLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.HBaseURL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The hbase Zookeeper
     * &#64;inject_tag: json:"zookeeper" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string zookeeper = 1 [(.validator.field) = { ... }</code>
     * @return The zookeeper.
     */
    java.lang.String getZookeeper();
    /**
     * <pre>
     * The hbase Zookeeper
     * &#64;inject_tag: json:"zookeeper" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string zookeeper = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for zookeeper.
     */
    com.google.protobuf.ByteString
        getZookeeperBytes();

    /**
     * <pre>
     * The hbase Zookeeper Node
     * &#64;inject_tag: json:"z_node" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string z_node = 2 [(.validator.field) = { ... }</code>
     * @return The zNode.
     */
    java.lang.String getZNode();
    /**
     * <pre>
     * The hbase Zookeeper Node
     * &#64;inject_tag: json:"z_node" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string z_node = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for zNode.
     */
    com.google.protobuf.ByteString
        getZNodeBytes();

    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    boolean hasNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder();
  }
  /**
   * <pre>
   * HBaseURL used as request parameters for RPC and HTTP(based on Body)
   * </pre>
   *
   * Protobuf type {@code datasource.HBaseURL}
   */
  public static final class HBaseURL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.HBaseURL)
      HBaseURLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HBaseURL.newBuilder() to construct.
    private HBaseURL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HBaseURL() {
      zookeeper_ = "";
      zNode_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HBaseURL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HBaseURL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              zookeeper_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              zNode_ = s;
              break;
            }
            case 26: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder subBuilder = null;
              if (network_ != null) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HBaseURL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HBaseURL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.Builder.class);
    }

    public static final int ZOOKEEPER_FIELD_NUMBER = 1;
    private volatile java.lang.Object zookeeper_;
    /**
     * <pre>
     * The hbase Zookeeper
     * &#64;inject_tag: json:"zookeeper" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string zookeeper = 1 [(.validator.field) = { ... }</code>
     * @return The zookeeper.
     */
    @java.lang.Override
    public java.lang.String getZookeeper() {
      java.lang.Object ref = zookeeper_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        zookeeper_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The hbase Zookeeper
     * &#64;inject_tag: json:"zookeeper" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string zookeeper = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for zookeeper.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getZookeeperBytes() {
      java.lang.Object ref = zookeeper_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        zookeeper_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int Z_NODE_FIELD_NUMBER = 2;
    private volatile java.lang.Object zNode_;
    /**
     * <pre>
     * The hbase Zookeeper Node
     * &#64;inject_tag: json:"z_node" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string z_node = 2 [(.validator.field) = { ... }</code>
     * @return The zNode.
     */
    @java.lang.Override
    public java.lang.String getZNode() {
      java.lang.Object ref = zNode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        zNode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The hbase Zookeeper Node
     * &#64;inject_tag: json:"z_node" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>string z_node = 2 [(.validator.field) = { ... }</code>
     * @return The bytes for zNode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getZNodeBytes() {
      java.lang.Object ref = zNode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        zNode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORK_FIELD_NUMBER = 3;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return network_ != null;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
      return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
      return getNetwork();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getZookeeperBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, zookeeper_);
      }
      if (!getZNodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, zNode_);
      }
      if (network_ != null) {
        output.writeMessage(3, getNetwork());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getZookeeperBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, zookeeper_);
      }
      if (!getZNodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, zNode_);
      }
      if (network_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNetwork());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL) obj;

      if (!getZookeeper()
          .equals(other.getZookeeper())) return false;
      if (!getZNode()
          .equals(other.getZNode())) return false;
      if (hasNetwork() != other.hasNetwork()) return false;
      if (hasNetwork()) {
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ZOOKEEPER_FIELD_NUMBER;
      hash = (53 * hash) + getZookeeper().hashCode();
      hash = (37 * hash) + Z_NODE_FIELD_NUMBER;
      hash = (53 * hash) + getZNode().hashCode();
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * HBaseURL used as request parameters for RPC and HTTP(based on Body)
     * </pre>
     *
     * Protobuf type {@code datasource.HBaseURL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.HBaseURL)
        com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HBaseURL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HBaseURL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        zookeeper_ = "";

        zNode_ = "";

        if (networkBuilder_ == null) {
          network_ = null;
        } else {
          network_ = null;
          networkBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HBaseURL_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL(this);
        result.zookeeper_ = zookeeper_;
        result.zNode_ = zNode_;
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.getDefaultInstance()) return this;
        if (!other.getZookeeper().isEmpty()) {
          zookeeper_ = other.zookeeper_;
          onChanged();
        }
        if (!other.getZNode().isEmpty()) {
          zNode_ = other.zNode_;
          onChanged();
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object zookeeper_ = "";
      /**
       * <pre>
       * The hbase Zookeeper
       * &#64;inject_tag: json:"zookeeper" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string zookeeper = 1 [(.validator.field) = { ... }</code>
       * @return The zookeeper.
       */
      public java.lang.String getZookeeper() {
        java.lang.Object ref = zookeeper_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          zookeeper_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The hbase Zookeeper
       * &#64;inject_tag: json:"zookeeper" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string zookeeper = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for zookeeper.
       */
      public com.google.protobuf.ByteString
          getZookeeperBytes() {
        java.lang.Object ref = zookeeper_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zookeeper_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The hbase Zookeeper
       * &#64;inject_tag: json:"zookeeper" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string zookeeper = 1 [(.validator.field) = { ... }</code>
       * @param value The zookeeper to set.
       * @return This builder for chaining.
       */
      public Builder setZookeeper(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        zookeeper_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The hbase Zookeeper
       * &#64;inject_tag: json:"zookeeper" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string zookeeper = 1 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearZookeeper() {
        
        zookeeper_ = getDefaultInstance().getZookeeper();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The hbase Zookeeper
       * &#64;inject_tag: json:"zookeeper" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string zookeeper = 1 [(.validator.field) = { ... }</code>
       * @param value The bytes for zookeeper to set.
       * @return This builder for chaining.
       */
      public Builder setZookeeperBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        zookeeper_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object zNode_ = "";
      /**
       * <pre>
       * The hbase Zookeeper Node
       * &#64;inject_tag: json:"z_node" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string z_node = 2 [(.validator.field) = { ... }</code>
       * @return The zNode.
       */
      public java.lang.String getZNode() {
        java.lang.Object ref = zNode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          zNode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The hbase Zookeeper Node
       * &#64;inject_tag: json:"z_node" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string z_node = 2 [(.validator.field) = { ... }</code>
       * @return The bytes for zNode.
       */
      public com.google.protobuf.ByteString
          getZNodeBytes() {
        java.lang.Object ref = zNode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zNode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The hbase Zookeeper Node
       * &#64;inject_tag: json:"z_node" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string z_node = 2 [(.validator.field) = { ... }</code>
       * @param value The zNode to set.
       * @return This builder for chaining.
       */
      public Builder setZNode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        zNode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The hbase Zookeeper Node
       * &#64;inject_tag: json:"z_node" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string z_node = 2 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearZNode() {
        
        zNode_ = getDefaultInstance().getZNode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The hbase Zookeeper Node
       * &#64;inject_tag: json:"z_node" default:"" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>string z_node = 2 [(.validator.field) = { ... }</code>
       * @param value The bytes for zNode to set.
       * @return This builder for chaining.
       */
      public Builder setZNodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        zNode_ = value;
        onChanged();
        return this;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> networkBuilder_;
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
       * @return Whether the network field is set.
       */
      public boolean hasNetwork() {
        return networkBuilder_ != null || network_ != null;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
       * @return The network.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
       */
      public Builder mergeNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (network_ != null) {
            network_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = null;
          onChanged();
        } else {
          network_ = null;
          networkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder getNetworkBuilder() {
        
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 3 [(.validator.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.HBaseURL)
    }

    // @@protoc_insertion_point(class_scope:datasource.HBaseURL)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HBaseURL>
        PARSER = new com.google.protobuf.AbstractParser<HBaseURL>() {
      @java.lang.Override
      public HBaseURL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HBaseURL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HBaseURL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HBaseURL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FtpURLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.FtpURL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 1 [(.validator.field) = { ... }</code>
     * @return The host.
     */
    java.lang.String getHost();
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for host.
     */
    com.google.protobuf.ByteString
        getHostBytes();

    /**
     * <pre>
     * The port
     * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
     * </pre>
     *
     * <code>int32 port = 2 [(.validator.field) = { ... }</code>
     * @return The port.
     */
    int getPort();

    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 3 [(.validator.field) = { ... }</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 4 [(.validator.field) = { ... }</code>
     * @return The password.
     */
    java.lang.String getPassword();
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 4 [(.validator.field) = { ... }</code>
     * @return The bytes for password.
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    boolean hasNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder();
  }
  /**
   * <pre>
   * FtpURL used as request parameters for RPC and HTTP(based on Body)
   * </pre>
   *
   * Protobuf type {@code datasource.FtpURL}
   */
  public static final class FtpURL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.FtpURL)
      FtpURLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FtpURL.newBuilder() to construct.
    private FtpURL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FtpURL() {
      host_ = "";
      user_ = "";
      password_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FtpURL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FtpURL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              host_ = s;
              break;
            }
            case 16: {

              port_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              user_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
            case 42: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder subBuilder = null;
              if (network_ != null) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_FtpURL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_FtpURL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.Builder.class);
    }

    public static final int HOST_FIELD_NUMBER = 1;
    private volatile java.lang.Object host_;
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 1 [(.validator.field) = { ... }</code>
     * @return The host.
     */
    @java.lang.Override
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        host_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The host
     * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string host = 1 [(.validator.field) = { ... }</code>
     * @return The bytes for host.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    /**
     * <pre>
     * The port
     * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
     * </pre>
     *
     * <code>int32 port = 2 [(.validator.field) = { ... }</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }

    public static final int USER_FIELD_NUMBER = 3;
    private volatile java.lang.Object user_;
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 3 [(.validator.field) = { ... }</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The username
     * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string user = 3 [(.validator.field) = { ... }</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 4;
    private volatile java.lang.Object password_;
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 4 [(.validator.field) = { ... }</code>
     * @return The password.
     */
    @java.lang.Override
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The password
     * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
     * </pre>
     *
     * <code>string password = 4 [(.validator.field) = { ... }</code>
     * @return The bytes for password.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORK_FIELD_NUMBER = 5;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return network_ != null;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
     * @return The network.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
      return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
      return getNetwork();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getHostBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, host_);
      }
      if (port_ != 0) {
        output.writeInt32(2, port_);
      }
      if (!getUserBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, user_);
      }
      if (!getPasswordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, password_);
      }
      if (network_ != null) {
        output.writeMessage(5, getNetwork());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getHostBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, host_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, port_);
      }
      if (!getUserBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, user_);
      }
      if (!getPasswordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, password_);
      }
      if (network_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getNetwork());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL) obj;

      if (!getHost()
          .equals(other.getHost())) return false;
      if (getPort()
          != other.getPort()) return false;
      if (!getUser()
          .equals(other.getUser())) return false;
      if (!getPassword()
          .equals(other.getPassword())) return false;
      if (hasNetwork() != other.hasNetwork()) return false;
      if (hasNetwork()) {
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HOST_FIELD_NUMBER;
      hash = (53 * hash) + getHost().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * FtpURL used as request parameters for RPC and HTTP(based on Body)
     * </pre>
     *
     * Protobuf type {@code datasource.FtpURL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.FtpURL)
        com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_FtpURL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_FtpURL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        host_ = "";

        port_ = 0;

        user_ = "";

        password_ = "";

        if (networkBuilder_ == null) {
          network_ = null;
        } else {
          network_ = null;
          networkBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_FtpURL_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL(this);
        result.host_ = host_;
        result.port_ = port_;
        result.user_ = user_;
        result.password_ = password_;
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.getDefaultInstance()) return this;
        if (!other.getHost().isEmpty()) {
          host_ = other.host_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          onChanged();
        }
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object host_ = "";
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 1 [(.validator.field) = { ... }</code>
       * @return The host.
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for host.
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 1 [(.validator.field) = { ... }</code>
       * @param value The host to set.
       * @return This builder for chaining.
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 1 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearHost() {
        
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"host" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string host = 1 [(.validator.field) = { ... }</code>
       * @param value The bytes for host to set.
       * @return This builder for chaining.
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        host_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 2 [(.validator.field) = { ... }</code>
       * @return The port.
       */
      @java.lang.Override
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 2 [(.validator.field) = { ... }</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gt=0" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 2 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 3 [(.validator.field) = { ... }</code>
       * @return The user.
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 3 [(.validator.field) = { ... }</code>
       * @return The bytes for user.
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 3 [(.validator.field) = { ... }</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 3 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The username
       * &#64;inject_tag: json:"user" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string user = 3 [(.validator.field) = { ... }</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        user_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 4 [(.validator.field) = { ... }</code>
       * @return The password.
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 4 [(.validator.field) = { ... }</code>
       * @return The bytes for password.
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 4 [(.validator.field) = { ... }</code>
       * @param value The password to set.
       * @return This builder for chaining.
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 4 [(.validator.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The password
       * &#64;inject_tag: json:"password" default:"" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"
       * </pre>
       *
       * <code>string password = 4 [(.validator.field) = { ... }</code>
       * @param value The bytes for password to set.
       * @return This builder for chaining.
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> networkBuilder_;
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
       * @return Whether the network field is set.
       */
      public boolean hasNetwork() {
        return networkBuilder_ != null || network_ != null;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
       * @return The network.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
       */
      public Builder setNetwork(
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
       */
      public Builder mergeNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (network_ != null) {
            network_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = null;
          onChanged();
        } else {
          network_ = null;
          networkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder getNetworkBuilder() {
        
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 5 [(.validator.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.FtpURL)
    }

    // @@protoc_insertion_point(class_scope:datasource.FtpURL)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FtpURL>
        PARSER = new com.google.protobuf.AbstractParser<FtpURL>() {
      @java.lang.Override
      public FtpURL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FtpURL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FtpURL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FtpURL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HDFSURLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.HDFSURL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
     * @return Whether the nodes field is set.
     */
    boolean hasNodes();
    /**
     * <pre>
     * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
     * @return The nodes.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL getNodes();
    /**
     * <pre>
     * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURLOrBuilder getNodesOrBuilder();

    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2;</code>
     * @return Whether the network field is set.
     */
    boolean hasNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2;</code>
     * @return The network.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork();
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder();
  }
  /**
   * <pre>
   * HDFSURL used as request parameters for RPC and HTTP(based on Body)
   * </pre>
   *
   * Protobuf type {@code datasource.HDFSURL}
   */
  public static final class HDFSURL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.HDFSURL)
      HDFSURLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HDFSURL.newBuilder() to construct.
    private HDFSURL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HDFSURL() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HDFSURL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HDFSURL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.Builder subBuilder = null;
              if (nodes_ != null) {
                subBuilder = nodes_.toBuilder();
              }
              nodes_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodes_);
                nodes_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder subBuilder = null;
              if (network_ != null) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.Builder.class);
    }

    public interface HDFSNodeURLOrBuilder extends
        // @@protoc_insertion_point(interface_extends:datasource.HDFSURL.HDFSNodeURL)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"name_node" default:"" binding:"gte=1,lte=64" required:"true"
       * </pre>
       *
       * <code>string name_node = 1 [(.validator.field) = { ... }</code>
       * @return The nameNode.
       */
      java.lang.String getNameNode();
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"name_node" default:"" binding:"gte=1,lte=64" required:"true"
       * </pre>
       *
       * <code>string name_node = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for nameNode.
       */
      com.google.protobuf.ByteString
          getNameNodeBytes();

      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gte=1" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 2 [(.validator.field) = { ... }</code>
       * @return The port.
       */
      int getPort();
    }
    /**
     * Protobuf type {@code datasource.HDFSURL.HDFSNodeURL}
     */
    public static final class HDFSNodeURL extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:datasource.HDFSURL.HDFSNodeURL)
        HDFSNodeURLOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HDFSNodeURL.newBuilder() to construct.
      private HDFSNodeURL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HDFSNodeURL() {
        nameNode_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HDFSNodeURL();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private HDFSNodeURL(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                nameNode_ = s;
                break;
              }
              case 16: {

                port_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_HDFSNodeURL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_HDFSNodeURL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.Builder.class);
      }

      public static final int NAME_NODE_FIELD_NUMBER = 1;
      private volatile java.lang.Object nameNode_;
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"name_node" default:"" binding:"gte=1,lte=64" required:"true"
       * </pre>
       *
       * <code>string name_node = 1 [(.validator.field) = { ... }</code>
       * @return The nameNode.
       */
      @java.lang.Override
      public java.lang.String getNameNode() {
        java.lang.Object ref = nameNode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nameNode_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The host
       * &#64;inject_tag: json:"name_node" default:"" binding:"gte=1,lte=64" required:"true"
       * </pre>
       *
       * <code>string name_node = 1 [(.validator.field) = { ... }</code>
       * @return The bytes for nameNode.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameNodeBytes() {
        java.lang.Object ref = nameNode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nameNode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PORT_FIELD_NUMBER = 2;
      private int port_;
      /**
       * <pre>
       * The port
       * &#64;inject_tag: json:"port" default:"" binding:"gte=1" required:"true" mininum:"1" maximum:"65536"
       * </pre>
       *
       * <code>int32 port = 2 [(.validator.field) = { ... }</code>
       * @return The port.
       */
      @java.lang.Override
      public int getPort() {
        return port_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getNameNodeBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nameNode_);
        }
        if (port_ != 0) {
          output.writeInt32(2, port_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getNameNodeBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nameNode_);
        }
        if (port_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, port_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL)) {
          return super.equals(obj);
        }
        com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL) obj;

        if (!getNameNode()
            .equals(other.getNameNode())) return false;
        if (getPort()
            != other.getPort()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_NODE_FIELD_NUMBER;
        hash = (53 * hash) + getNameNode().hashCode();
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code datasource.HDFSURL.HDFSNodeURL}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:datasource.HDFSURL.HDFSNodeURL)
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURLOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_HDFSNodeURL_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_HDFSNodeURL_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.Builder.class);
        }

        // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          nameNode_ = "";

          port_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_HDFSNodeURL_descriptor;
        }

        @java.lang.Override
        public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL getDefaultInstanceForType() {
          return com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.getDefaultInstance();
        }

        @java.lang.Override
        public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL build() {
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL buildPartial() {
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL(this);
          result.nameNode_ = nameNode_;
          result.port_ = port_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL) {
            return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL other) {
          if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.getDefaultInstance()) return this;
          if (!other.getNameNode().isEmpty()) {
            nameNode_ = other.nameNode_;
            onChanged();
          }
          if (other.getPort() != 0) {
            setPort(other.getPort());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object nameNode_ = "";
        /**
         * <pre>
         * The host
         * &#64;inject_tag: json:"name_node" default:"" binding:"gte=1,lte=64" required:"true"
         * </pre>
         *
         * <code>string name_node = 1 [(.validator.field) = { ... }</code>
         * @return The nameNode.
         */
        public java.lang.String getNameNode() {
          java.lang.Object ref = nameNode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            nameNode_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The host
         * &#64;inject_tag: json:"name_node" default:"" binding:"gte=1,lte=64" required:"true"
         * </pre>
         *
         * <code>string name_node = 1 [(.validator.field) = { ... }</code>
         * @return The bytes for nameNode.
         */
        public com.google.protobuf.ByteString
            getNameNodeBytes() {
          java.lang.Object ref = nameNode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            nameNode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The host
         * &#64;inject_tag: json:"name_node" default:"" binding:"gte=1,lte=64" required:"true"
         * </pre>
         *
         * <code>string name_node = 1 [(.validator.field) = { ... }</code>
         * @param value The nameNode to set.
         * @return This builder for chaining.
         */
        public Builder setNameNode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          nameNode_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The host
         * &#64;inject_tag: json:"name_node" default:"" binding:"gte=1,lte=64" required:"true"
         * </pre>
         *
         * <code>string name_node = 1 [(.validator.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearNameNode() {
          
          nameNode_ = getDefaultInstance().getNameNode();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The host
         * &#64;inject_tag: json:"name_node" default:"" binding:"gte=1,lte=64" required:"true"
         * </pre>
         *
         * <code>string name_node = 1 [(.validator.field) = { ... }</code>
         * @param value The bytes for nameNode to set.
         * @return This builder for chaining.
         */
        public Builder setNameNodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          nameNode_ = value;
          onChanged();
          return this;
        }

        private int port_ ;
        /**
         * <pre>
         * The port
         * &#64;inject_tag: json:"port" default:"" binding:"gte=1" required:"true" mininum:"1" maximum:"65536"
         * </pre>
         *
         * <code>int32 port = 2 [(.validator.field) = { ... }</code>
         * @return The port.
         */
        @java.lang.Override
        public int getPort() {
          return port_;
        }
        /**
         * <pre>
         * The port
         * &#64;inject_tag: json:"port" default:"" binding:"gte=1" required:"true" mininum:"1" maximum:"65536"
         * </pre>
         *
         * <code>int32 port = 2 [(.validator.field) = { ... }</code>
         * @param value The port to set.
         * @return This builder for chaining.
         */
        public Builder setPort(int value) {
          
          port_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The port
         * &#64;inject_tag: json:"port" default:"" binding:"gte=1" required:"true" mininum:"1" maximum:"65536"
         * </pre>
         *
         * <code>int32 port = 2 [(.validator.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearPort() {
          
          port_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:datasource.HDFSURL.HDFSNodeURL)
      }

      // @@protoc_insertion_point(class_scope:datasource.HDFSURL.HDFSNodeURL)
      private static final com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL();
      }

      public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HDFSNodeURL>
          PARSER = new com.google.protobuf.AbstractParser<HDFSNodeURL>() {
        @java.lang.Override
        public HDFSNodeURL parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HDFSNodeURL(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HDFSNodeURL> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HDFSNodeURL> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int NODES_FIELD_NUMBER = 1;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL nodes_;
    /**
     * <pre>
     * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
     * @return Whether the nodes field is set.
     */
    @java.lang.Override
    public boolean hasNodes() {
      return nodes_ != null;
    }
    /**
     * <pre>
     * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
     * @return The nodes.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL getNodes() {
      return nodes_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.getDefaultInstance() : nodes_;
    }
    /**
     * <pre>
     * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
     * </pre>
     *
     * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURLOrBuilder getNodesOrBuilder() {
      return getNodes();
    }

    public static final int NETWORK_FIELD_NUMBER = 2;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2;</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return network_ != null;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2;</code>
     * @return The network.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
      return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
    }
    /**
     * <pre>
     * the Network
     * &#64;inject_tag: json:"network" default:""
     * </pre>
     *
     * <code>.datasource.DatasourceNetwork network = 2;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
      return getNetwork();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodes_ != null) {
        output.writeMessage(1, getNodes());
      }
      if (network_ != null) {
        output.writeMessage(2, getNetwork());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodes_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNodes());
      }
      if (network_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNetwork());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL) obj;

      if (hasNodes() != other.hasNodes()) return false;
      if (hasNodes()) {
        if (!getNodes()
            .equals(other.getNodes())) return false;
      }
      if (hasNetwork() != other.hasNetwork()) return false;
      if (hasNetwork()) {
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNodes()) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodes().hashCode();
      }
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * HDFSURL used as request parameters for RPC and HTTP(based on Body)
     * </pre>
     *
     * Protobuf type {@code datasource.HDFSURL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.HDFSURL)
        com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = null;
        } else {
          nodes_ = null;
          nodesBuilder_ = null;
        }
        if (networkBuilder_ == null) {
          network_ = null;
        } else {
          network_ = null;
          networkBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_HDFSURL_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL(this);
        if (nodesBuilder_ == null) {
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.getDefaultInstance()) return this;
        if (other.hasNodes()) {
          mergeNodes(other.getNodes());
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL nodes_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURLOrBuilder> nodesBuilder_;
      /**
       * <pre>
       * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
       * @return Whether the nodes field is set.
       */
      public boolean hasNodes() {
        return nodesBuilder_ != null || nodes_ != null;
      }
      /**
       * <pre>
       * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
       * @return The nodes.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL getNodes() {
        if (nodesBuilder_ == null) {
          return nodes_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.getDefaultInstance() : nodes_;
        } else {
          return nodesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
       */
      public Builder setNodes(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodes_ = value;
          onChanged();
        } else {
          nodesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
       */
      public Builder setNodes(
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          nodes_ = builderForValue.build();
          onChanged();
        } else {
          nodesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
       */
      public Builder mergeNodes(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL value) {
        if (nodesBuilder_ == null) {
          if (nodes_ != null) {
            nodes_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.newBuilder(nodes_).mergeFrom(value).buildPartial();
          } else {
            nodes_ = value;
          }
          onChanged();
        } else {
          nodesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = null;
          onChanged();
        } else {
          nodes_ = null;
          nodesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.Builder getNodesBuilder() {
        
        onChanged();
        return getNodesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURLOrBuilder getNodesOrBuilder() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilder();
        } else {
          return nodes_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.getDefaultInstance() : nodes_;
        }
      }
      /**
       * <pre>
       * &#64;inject_tag: json:"nodes" default:"" binding:"gte=1,lte=1024" required:"true"  minLength:"1" maxLength:"1024"
       * </pre>
       *
       * <code>.datasource.HDFSURL.HDFSNodeURL nodes = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURLOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.HDFSNodeURLOrBuilder>(
                  getNodes(),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork network_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> networkBuilder_;
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2;</code>
       * @return Whether the network field is set.
       */
      public boolean hasNetwork() {
        return networkBuilder_ != null || network_ != null;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2;</code>
       * @return The network.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2;</code>
       */
      public Builder setNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2;</code>
       */
      public Builder setNetwork(
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2;</code>
       */
      public Builder mergeNetwork(com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork value) {
        if (networkBuilder_ == null) {
          if (network_ != null) {
            network_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2;</code>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = null;
          onChanged();
        } else {
          network_ = null;
          networkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder getNetworkBuilder() {
        
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.getDefaultInstance() : network_;
        }
      }
      /**
       * <pre>
       * the Network
       * &#64;inject_tag: json:"network" default:""
       * </pre>
       *
       * <code>.datasource.DatasourceNetwork network = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetwork.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.DatasourceNetworkOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.HDFSURL)
    }

    // @@protoc_insertion_point(class_scope:datasource.HDFSURL)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HDFSURL>
        PARSER = new com.google.protobuf.AbstractParser<HDFSURL>() {
      @java.lang.Override
      public HDFSURL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HDFSURL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HDFSURL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HDFSURL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataSourceURLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:datasource.DataSourceURL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * MySQL Source Connection Info.
     * &#64;inject_tag: json:"mysql"
     * </pre>
     *
     * <code>.datasource.MySQLURL mysql = 1;</code>
     * @return Whether the mysql field is set.
     */
    boolean hasMysql();
    /**
     * <pre>
     * MySQL Source Connection Info.
     * &#64;inject_tag: json:"mysql"
     * </pre>
     *
     * <code>.datasource.MySQLURL mysql = 1;</code>
     * @return The mysql.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL getMysql();
    /**
     * <pre>
     * MySQL Source Connection Info.
     * &#64;inject_tag: json:"mysql"
     * </pre>
     *
     * <code>.datasource.MySQLURL mysql = 1;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURLOrBuilder getMysqlOrBuilder();

    /**
     * <pre>
     * PostgreSQL Source Connection Info.
     * &#64;inject_tag: json:"postgresql"
     * </pre>
     *
     * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
     * @return Whether the postgresql field is set.
     */
    boolean hasPostgresql();
    /**
     * <pre>
     * PostgreSQL Source Connection Info.
     * &#64;inject_tag: json:"postgresql"
     * </pre>
     *
     * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
     * @return The postgresql.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL getPostgresql();
    /**
     * <pre>
     * PostgreSQL Source Connection Info.
     * &#64;inject_tag: json:"postgresql"
     * </pre>
     *
     * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURLOrBuilder getPostgresqlOrBuilder();

    /**
     * <pre>
     * ClickHouse Source Connection Info.
     * &#64;inject_tag: json:"clickhouse"
     * </pre>
     *
     * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
     * @return Whether the clickhouse field is set.
     */
    boolean hasClickhouse();
    /**
     * <pre>
     * ClickHouse Source Connection Info.
     * &#64;inject_tag: json:"clickhouse"
     * </pre>
     *
     * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
     * @return The clickhouse.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL getClickhouse();
    /**
     * <pre>
     * ClickHouse Source Connection Info.
     * &#64;inject_tag: json:"clickhouse"
     * </pre>
     *
     * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURLOrBuilder getClickhouseOrBuilder();

    /**
     * <pre>
     * Kafka Source Connection Info.
     * &#64;inject_tag: json:"kafka"
     * </pre>
     *
     * <code>.datasource.KafkaURL kafka = 4;</code>
     * @return Whether the kafka field is set.
     */
    boolean hasKafka();
    /**
     * <pre>
     * Kafka Source Connection Info.
     * &#64;inject_tag: json:"kafka"
     * </pre>
     *
     * <code>.datasource.KafkaURL kafka = 4;</code>
     * @return The kafka.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL getKafka();
    /**
     * <pre>
     * Kafka Source Connection Info.
     * &#64;inject_tag: json:"kafka"
     * </pre>
     *
     * <code>.datasource.KafkaURL kafka = 4;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURLOrBuilder getKafkaOrBuilder();

    /**
     * <pre>
     * S3 Source Connection Info.
     * &#64;inject_tag: json:"s3"
     * </pre>
     *
     * <code>.datasource.S3URL s3 = 5;</code>
     * @return Whether the s3 field is set.
     */
    boolean hasS3();
    /**
     * <pre>
     * S3 Source Connection Info.
     * &#64;inject_tag: json:"s3"
     * </pre>
     *
     * <code>.datasource.S3URL s3 = 5;</code>
     * @return The s3.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL getS3();
    /**
     * <pre>
     * S3 Source Connection Info.
     * &#64;inject_tag: json:"s3"
     * </pre>
     *
     * <code>.datasource.S3URL s3 = 5;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.S3URLOrBuilder getS3OrBuilder();

    /**
     * <pre>
     * Hbase Source Connection Info.
     * &#64;inject_tag: json:"hbase"
     * </pre>
     *
     * <code>.datasource.HBaseURL hbase = 6;</code>
     * @return Whether the hbase field is set.
     */
    boolean hasHbase();
    /**
     * <pre>
     * Hbase Source Connection Info.
     * &#64;inject_tag: json:"hbase"
     * </pre>
     *
     * <code>.datasource.HBaseURL hbase = 6;</code>
     * @return The hbase.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL getHbase();
    /**
     * <pre>
     * Hbase Source Connection Info.
     * &#64;inject_tag: json:"hbase"
     * </pre>
     *
     * <code>.datasource.HBaseURL hbase = 6;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURLOrBuilder getHbaseOrBuilder();

    /**
     * <pre>
     * Ftp Source Connection Info.
     * &#64;inject_tag: json:"ftp"
     * </pre>
     *
     * <code>.datasource.FtpURL ftp = 7;</code>
     * @return Whether the ftp field is set.
     */
    boolean hasFtp();
    /**
     * <pre>
     * Ftp Source Connection Info.
     * &#64;inject_tag: json:"ftp"
     * </pre>
     *
     * <code>.datasource.FtpURL ftp = 7;</code>
     * @return The ftp.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL getFtp();
    /**
     * <pre>
     * Ftp Source Connection Info.
     * &#64;inject_tag: json:"ftp"
     * </pre>
     *
     * <code>.datasource.FtpURL ftp = 7;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURLOrBuilder getFtpOrBuilder();

    /**
     * <pre>
     * HDFS Source Connection Info.
     * &#64;inject_tag: json:"hdfs"
     * </pre>
     *
     * <code>.datasource.HDFSURL hdfs = 8;</code>
     * @return Whether the hdfs field is set.
     */
    boolean hasHdfs();
    /**
     * <pre>
     * HDFS Source Connection Info.
     * &#64;inject_tag: json:"hdfs"
     * </pre>
     *
     * <code>.datasource.HDFSURL hdfs = 8;</code>
     * @return The hdfs.
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL getHdfs();
    /**
     * <pre>
     * HDFS Source Connection Info.
     * &#64;inject_tag: json:"hdfs"
     * </pre>
     *
     * <code>.datasource.HDFSURL hdfs = 8;</code>
     */
    com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURLOrBuilder getHdfsOrBuilder();
  }
  /**
   * <pre>
   * SourceUrl used as request parameters for RPC and HTTP(based on Body)
   * </pre>
   *
   * Protobuf type {@code datasource.DataSourceURL}
   */
  public static final class DataSourceURL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:datasource.DataSourceURL)
      DataSourceURLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataSourceURL.newBuilder() to construct.
    private DataSourceURL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataSourceURL() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DataSourceURL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DataSourceURL(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.Builder subBuilder = null;
              if (mysql_ != null) {
                subBuilder = mysql_.toBuilder();
              }
              mysql_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mysql_);
                mysql_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.Builder subBuilder = null;
              if (postgresql_ != null) {
                subBuilder = postgresql_.toBuilder();
              }
              postgresql_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(postgresql_);
                postgresql_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.Builder subBuilder = null;
              if (clickhouse_ != null) {
                subBuilder = clickhouse_.toBuilder();
              }
              clickhouse_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clickhouse_);
                clickhouse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.Builder subBuilder = null;
              if (kafka_ != null) {
                subBuilder = kafka_.toBuilder();
              }
              kafka_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(kafka_);
                kafka_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.Builder subBuilder = null;
              if (s3_ != null) {
                subBuilder = s3_.toBuilder();
              }
              s3_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(s3_);
                s3_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.Builder subBuilder = null;
              if (hbase_ != null) {
                subBuilder = hbase_.toBuilder();
              }
              hbase_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hbase_);
                hbase_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.Builder subBuilder = null;
              if (ftp_ != null) {
                subBuilder = ftp_.toBuilder();
              }
              ftp_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ftp_);
                ftp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.Builder subBuilder = null;
              if (hdfs_ != null) {
                subBuilder = hdfs_.toBuilder();
              }
              hdfs_ = input.readMessage(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hdfs_);
                hdfs_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DataSourceURL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DataSourceURL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL.Builder.class);
    }

    public static final int MYSQL_FIELD_NUMBER = 1;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL mysql_;
    /**
     * <pre>
     * MySQL Source Connection Info.
     * &#64;inject_tag: json:"mysql"
     * </pre>
     *
     * <code>.datasource.MySQLURL mysql = 1;</code>
     * @return Whether the mysql field is set.
     */
    @java.lang.Override
    public boolean hasMysql() {
      return mysql_ != null;
    }
    /**
     * <pre>
     * MySQL Source Connection Info.
     * &#64;inject_tag: json:"mysql"
     * </pre>
     *
     * <code>.datasource.MySQLURL mysql = 1;</code>
     * @return The mysql.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL getMysql() {
      return mysql_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.getDefaultInstance() : mysql_;
    }
    /**
     * <pre>
     * MySQL Source Connection Info.
     * &#64;inject_tag: json:"mysql"
     * </pre>
     *
     * <code>.datasource.MySQLURL mysql = 1;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURLOrBuilder getMysqlOrBuilder() {
      return getMysql();
    }

    public static final int POSTGRESQL_FIELD_NUMBER = 2;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL postgresql_;
    /**
     * <pre>
     * PostgreSQL Source Connection Info.
     * &#64;inject_tag: json:"postgresql"
     * </pre>
     *
     * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
     * @return Whether the postgresql field is set.
     */
    @java.lang.Override
    public boolean hasPostgresql() {
      return postgresql_ != null;
    }
    /**
     * <pre>
     * PostgreSQL Source Connection Info.
     * &#64;inject_tag: json:"postgresql"
     * </pre>
     *
     * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
     * @return The postgresql.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL getPostgresql() {
      return postgresql_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.getDefaultInstance() : postgresql_;
    }
    /**
     * <pre>
     * PostgreSQL Source Connection Info.
     * &#64;inject_tag: json:"postgresql"
     * </pre>
     *
     * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURLOrBuilder getPostgresqlOrBuilder() {
      return getPostgresql();
    }

    public static final int CLICKHOUSE_FIELD_NUMBER = 3;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL clickhouse_;
    /**
     * <pre>
     * ClickHouse Source Connection Info.
     * &#64;inject_tag: json:"clickhouse"
     * </pre>
     *
     * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
     * @return Whether the clickhouse field is set.
     */
    @java.lang.Override
    public boolean hasClickhouse() {
      return clickhouse_ != null;
    }
    /**
     * <pre>
     * ClickHouse Source Connection Info.
     * &#64;inject_tag: json:"clickhouse"
     * </pre>
     *
     * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
     * @return The clickhouse.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL getClickhouse() {
      return clickhouse_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.getDefaultInstance() : clickhouse_;
    }
    /**
     * <pre>
     * ClickHouse Source Connection Info.
     * &#64;inject_tag: json:"clickhouse"
     * </pre>
     *
     * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURLOrBuilder getClickhouseOrBuilder() {
      return getClickhouse();
    }

    public static final int KAFKA_FIELD_NUMBER = 4;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL kafka_;
    /**
     * <pre>
     * Kafka Source Connection Info.
     * &#64;inject_tag: json:"kafka"
     * </pre>
     *
     * <code>.datasource.KafkaURL kafka = 4;</code>
     * @return Whether the kafka field is set.
     */
    @java.lang.Override
    public boolean hasKafka() {
      return kafka_ != null;
    }
    /**
     * <pre>
     * Kafka Source Connection Info.
     * &#64;inject_tag: json:"kafka"
     * </pre>
     *
     * <code>.datasource.KafkaURL kafka = 4;</code>
     * @return The kafka.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL getKafka() {
      return kafka_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.getDefaultInstance() : kafka_;
    }
    /**
     * <pre>
     * Kafka Source Connection Info.
     * &#64;inject_tag: json:"kafka"
     * </pre>
     *
     * <code>.datasource.KafkaURL kafka = 4;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURLOrBuilder getKafkaOrBuilder() {
      return getKafka();
    }

    public static final int S3_FIELD_NUMBER = 5;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL s3_;
    /**
     * <pre>
     * S3 Source Connection Info.
     * &#64;inject_tag: json:"s3"
     * </pre>
     *
     * <code>.datasource.S3URL s3 = 5;</code>
     * @return Whether the s3 field is set.
     */
    @java.lang.Override
    public boolean hasS3() {
      return s3_ != null;
    }
    /**
     * <pre>
     * S3 Source Connection Info.
     * &#64;inject_tag: json:"s3"
     * </pre>
     *
     * <code>.datasource.S3URL s3 = 5;</code>
     * @return The s3.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL getS3() {
      return s3_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.getDefaultInstance() : s3_;
    }
    /**
     * <pre>
     * S3 Source Connection Info.
     * &#64;inject_tag: json:"s3"
     * </pre>
     *
     * <code>.datasource.S3URL s3 = 5;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.S3URLOrBuilder getS3OrBuilder() {
      return getS3();
    }

    public static final int HBASE_FIELD_NUMBER = 6;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL hbase_;
    /**
     * <pre>
     * Hbase Source Connection Info.
     * &#64;inject_tag: json:"hbase"
     * </pre>
     *
     * <code>.datasource.HBaseURL hbase = 6;</code>
     * @return Whether the hbase field is set.
     */
    @java.lang.Override
    public boolean hasHbase() {
      return hbase_ != null;
    }
    /**
     * <pre>
     * Hbase Source Connection Info.
     * &#64;inject_tag: json:"hbase"
     * </pre>
     *
     * <code>.datasource.HBaseURL hbase = 6;</code>
     * @return The hbase.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL getHbase() {
      return hbase_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.getDefaultInstance() : hbase_;
    }
    /**
     * <pre>
     * Hbase Source Connection Info.
     * &#64;inject_tag: json:"hbase"
     * </pre>
     *
     * <code>.datasource.HBaseURL hbase = 6;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURLOrBuilder getHbaseOrBuilder() {
      return getHbase();
    }

    public static final int FTP_FIELD_NUMBER = 7;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL ftp_;
    /**
     * <pre>
     * Ftp Source Connection Info.
     * &#64;inject_tag: json:"ftp"
     * </pre>
     *
     * <code>.datasource.FtpURL ftp = 7;</code>
     * @return Whether the ftp field is set.
     */
    @java.lang.Override
    public boolean hasFtp() {
      return ftp_ != null;
    }
    /**
     * <pre>
     * Ftp Source Connection Info.
     * &#64;inject_tag: json:"ftp"
     * </pre>
     *
     * <code>.datasource.FtpURL ftp = 7;</code>
     * @return The ftp.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL getFtp() {
      return ftp_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.getDefaultInstance() : ftp_;
    }
    /**
     * <pre>
     * Ftp Source Connection Info.
     * &#64;inject_tag: json:"ftp"
     * </pre>
     *
     * <code>.datasource.FtpURL ftp = 7;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURLOrBuilder getFtpOrBuilder() {
      return getFtp();
    }

    public static final int HDFS_FIELD_NUMBER = 8;
    private com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL hdfs_;
    /**
     * <pre>
     * HDFS Source Connection Info.
     * &#64;inject_tag: json:"hdfs"
     * </pre>
     *
     * <code>.datasource.HDFSURL hdfs = 8;</code>
     * @return Whether the hdfs field is set.
     */
    @java.lang.Override
    public boolean hasHdfs() {
      return hdfs_ != null;
    }
    /**
     * <pre>
     * HDFS Source Connection Info.
     * &#64;inject_tag: json:"hdfs"
     * </pre>
     *
     * <code>.datasource.HDFSURL hdfs = 8;</code>
     * @return The hdfs.
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL getHdfs() {
      return hdfs_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.getDefaultInstance() : hdfs_;
    }
    /**
     * <pre>
     * HDFS Source Connection Info.
     * &#64;inject_tag: json:"hdfs"
     * </pre>
     *
     * <code>.datasource.HDFSURL hdfs = 8;</code>
     */
    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURLOrBuilder getHdfsOrBuilder() {
      return getHdfs();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mysql_ != null) {
        output.writeMessage(1, getMysql());
      }
      if (postgresql_ != null) {
        output.writeMessage(2, getPostgresql());
      }
      if (clickhouse_ != null) {
        output.writeMessage(3, getClickhouse());
      }
      if (kafka_ != null) {
        output.writeMessage(4, getKafka());
      }
      if (s3_ != null) {
        output.writeMessage(5, getS3());
      }
      if (hbase_ != null) {
        output.writeMessage(6, getHbase());
      }
      if (ftp_ != null) {
        output.writeMessage(7, getFtp());
      }
      if (hdfs_ != null) {
        output.writeMessage(8, getHdfs());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mysql_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMysql());
      }
      if (postgresql_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPostgresql());
      }
      if (clickhouse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getClickhouse());
      }
      if (kafka_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getKafka());
      }
      if (s3_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getS3());
      }
      if (hbase_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getHbase());
      }
      if (ftp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getFtp());
      }
      if (hdfs_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getHdfs());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL)) {
        return super.equals(obj);
      }
      com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL other = (com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL) obj;

      if (hasMysql() != other.hasMysql()) return false;
      if (hasMysql()) {
        if (!getMysql()
            .equals(other.getMysql())) return false;
      }
      if (hasPostgresql() != other.hasPostgresql()) return false;
      if (hasPostgresql()) {
        if (!getPostgresql()
            .equals(other.getPostgresql())) return false;
      }
      if (hasClickhouse() != other.hasClickhouse()) return false;
      if (hasClickhouse()) {
        if (!getClickhouse()
            .equals(other.getClickhouse())) return false;
      }
      if (hasKafka() != other.hasKafka()) return false;
      if (hasKafka()) {
        if (!getKafka()
            .equals(other.getKafka())) return false;
      }
      if (hasS3() != other.hasS3()) return false;
      if (hasS3()) {
        if (!getS3()
            .equals(other.getS3())) return false;
      }
      if (hasHbase() != other.hasHbase()) return false;
      if (hasHbase()) {
        if (!getHbase()
            .equals(other.getHbase())) return false;
      }
      if (hasFtp() != other.hasFtp()) return false;
      if (hasFtp()) {
        if (!getFtp()
            .equals(other.getFtp())) return false;
      }
      if (hasHdfs() != other.hasHdfs()) return false;
      if (hasHdfs()) {
        if (!getHdfs()
            .equals(other.getHdfs())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMysql()) {
        hash = (37 * hash) + MYSQL_FIELD_NUMBER;
        hash = (53 * hash) + getMysql().hashCode();
      }
      if (hasPostgresql()) {
        hash = (37 * hash) + POSTGRESQL_FIELD_NUMBER;
        hash = (53 * hash) + getPostgresql().hashCode();
      }
      if (hasClickhouse()) {
        hash = (37 * hash) + CLICKHOUSE_FIELD_NUMBER;
        hash = (53 * hash) + getClickhouse().hashCode();
      }
      if (hasKafka()) {
        hash = (37 * hash) + KAFKA_FIELD_NUMBER;
        hash = (53 * hash) + getKafka().hashCode();
      }
      if (hasS3()) {
        hash = (37 * hash) + S3_FIELD_NUMBER;
        hash = (53 * hash) + getS3().hashCode();
      }
      if (hasHbase()) {
        hash = (37 * hash) + HBASE_FIELD_NUMBER;
        hash = (53 * hash) + getHbase().hashCode();
      }
      if (hasFtp()) {
        hash = (37 * hash) + FTP_FIELD_NUMBER;
        hash = (53 * hash) + getFtp().hashCode();
      }
      if (hasHdfs()) {
        hash = (37 * hash) + HDFS_FIELD_NUMBER;
        hash = (53 * hash) + getHdfs().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SourceUrl used as request parameters for RPC and HTTP(based on Body)
     * </pre>
     *
     * Protobuf type {@code datasource.DataSourceURL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:datasource.DataSourceURL)
        com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DataSourceURL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DataSourceURL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL.class, com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL.Builder.class);
      }

      // Construct using com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (mysqlBuilder_ == null) {
          mysql_ = null;
        } else {
          mysql_ = null;
          mysqlBuilder_ = null;
        }
        if (postgresqlBuilder_ == null) {
          postgresql_ = null;
        } else {
          postgresql_ = null;
          postgresqlBuilder_ = null;
        }
        if (clickhouseBuilder_ == null) {
          clickhouse_ = null;
        } else {
          clickhouse_ = null;
          clickhouseBuilder_ = null;
        }
        if (kafkaBuilder_ == null) {
          kafka_ = null;
        } else {
          kafka_ = null;
          kafkaBuilder_ = null;
        }
        if (s3Builder_ == null) {
          s3_ = null;
        } else {
          s3_ = null;
          s3Builder_ = null;
        }
        if (hbaseBuilder_ == null) {
          hbase_ = null;
        } else {
          hbase_ = null;
          hbaseBuilder_ = null;
        }
        if (ftpBuilder_ == null) {
          ftp_ = null;
        } else {
          ftp_ = null;
          ftpBuilder_ = null;
        }
        if (hdfsBuilder_ == null) {
          hdfs_ = null;
        } else {
          hdfs_ = null;
          hdfsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.internal_static_datasource_DataSourceURL_descriptor;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL getDefaultInstanceForType() {
        return com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL build() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL buildPartial() {
        com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL result = new com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL(this);
        if (mysqlBuilder_ == null) {
          result.mysql_ = mysql_;
        } else {
          result.mysql_ = mysqlBuilder_.build();
        }
        if (postgresqlBuilder_ == null) {
          result.postgresql_ = postgresql_;
        } else {
          result.postgresql_ = postgresqlBuilder_.build();
        }
        if (clickhouseBuilder_ == null) {
          result.clickhouse_ = clickhouse_;
        } else {
          result.clickhouse_ = clickhouseBuilder_.build();
        }
        if (kafkaBuilder_ == null) {
          result.kafka_ = kafka_;
        } else {
          result.kafka_ = kafkaBuilder_.build();
        }
        if (s3Builder_ == null) {
          result.s3_ = s3_;
        } else {
          result.s3_ = s3Builder_.build();
        }
        if (hbaseBuilder_ == null) {
          result.hbase_ = hbase_;
        } else {
          result.hbase_ = hbaseBuilder_.build();
        }
        if (ftpBuilder_ == null) {
          result.ftp_ = ftp_;
        } else {
          result.ftp_ = ftpBuilder_.build();
        }
        if (hdfsBuilder_ == null) {
          result.hdfs_ = hdfs_;
        } else {
          result.hdfs_ = hdfsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL) {
          return mergeFrom((com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL other) {
        if (other == com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL.getDefaultInstance()) return this;
        if (other.hasMysql()) {
          mergeMysql(other.getMysql());
        }
        if (other.hasPostgresql()) {
          mergePostgresql(other.getPostgresql());
        }
        if (other.hasClickhouse()) {
          mergeClickhouse(other.getClickhouse());
        }
        if (other.hasKafka()) {
          mergeKafka(other.getKafka());
        }
        if (other.hasS3()) {
          mergeS3(other.getS3());
        }
        if (other.hasHbase()) {
          mergeHbase(other.getHbase());
        }
        if (other.hasFtp()) {
          mergeFtp(other.getFtp());
        }
        if (other.hasHdfs()) {
          mergeHdfs(other.getHdfs());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL mysql_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL, com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURLOrBuilder> mysqlBuilder_;
      /**
       * <pre>
       * MySQL Source Connection Info.
       * &#64;inject_tag: json:"mysql"
       * </pre>
       *
       * <code>.datasource.MySQLURL mysql = 1;</code>
       * @return Whether the mysql field is set.
       */
      public boolean hasMysql() {
        return mysqlBuilder_ != null || mysql_ != null;
      }
      /**
       * <pre>
       * MySQL Source Connection Info.
       * &#64;inject_tag: json:"mysql"
       * </pre>
       *
       * <code>.datasource.MySQLURL mysql = 1;</code>
       * @return The mysql.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL getMysql() {
        if (mysqlBuilder_ == null) {
          return mysql_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.getDefaultInstance() : mysql_;
        } else {
          return mysqlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * MySQL Source Connection Info.
       * &#64;inject_tag: json:"mysql"
       * </pre>
       *
       * <code>.datasource.MySQLURL mysql = 1;</code>
       */
      public Builder setMysql(com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL value) {
        if (mysqlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mysql_ = value;
          onChanged();
        } else {
          mysqlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * MySQL Source Connection Info.
       * &#64;inject_tag: json:"mysql"
       * </pre>
       *
       * <code>.datasource.MySQLURL mysql = 1;</code>
       */
      public Builder setMysql(
          com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.Builder builderForValue) {
        if (mysqlBuilder_ == null) {
          mysql_ = builderForValue.build();
          onChanged();
        } else {
          mysqlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * MySQL Source Connection Info.
       * &#64;inject_tag: json:"mysql"
       * </pre>
       *
       * <code>.datasource.MySQLURL mysql = 1;</code>
       */
      public Builder mergeMysql(com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL value) {
        if (mysqlBuilder_ == null) {
          if (mysql_ != null) {
            mysql_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.newBuilder(mysql_).mergeFrom(value).buildPartial();
          } else {
            mysql_ = value;
          }
          onChanged();
        } else {
          mysqlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * MySQL Source Connection Info.
       * &#64;inject_tag: json:"mysql"
       * </pre>
       *
       * <code>.datasource.MySQLURL mysql = 1;</code>
       */
      public Builder clearMysql() {
        if (mysqlBuilder_ == null) {
          mysql_ = null;
          onChanged();
        } else {
          mysql_ = null;
          mysqlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * MySQL Source Connection Info.
       * &#64;inject_tag: json:"mysql"
       * </pre>
       *
       * <code>.datasource.MySQLURL mysql = 1;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.Builder getMysqlBuilder() {
        
        onChanged();
        return getMysqlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * MySQL Source Connection Info.
       * &#64;inject_tag: json:"mysql"
       * </pre>
       *
       * <code>.datasource.MySQLURL mysql = 1;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURLOrBuilder getMysqlOrBuilder() {
        if (mysqlBuilder_ != null) {
          return mysqlBuilder_.getMessageOrBuilder();
        } else {
          return mysql_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.getDefaultInstance() : mysql_;
        }
      }
      /**
       * <pre>
       * MySQL Source Connection Info.
       * &#64;inject_tag: json:"mysql"
       * </pre>
       *
       * <code>.datasource.MySQLURL mysql = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL, com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURLOrBuilder> 
          getMysqlFieldBuilder() {
        if (mysqlBuilder_ == null) {
          mysqlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL, com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.MySQLURLOrBuilder>(
                  getMysql(),
                  getParentForChildren(),
                  isClean());
          mysql_ = null;
        }
        return mysqlBuilder_;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL postgresql_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL, com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURLOrBuilder> postgresqlBuilder_;
      /**
       * <pre>
       * PostgreSQL Source Connection Info.
       * &#64;inject_tag: json:"postgresql"
       * </pre>
       *
       * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
       * @return Whether the postgresql field is set.
       */
      public boolean hasPostgresql() {
        return postgresqlBuilder_ != null || postgresql_ != null;
      }
      /**
       * <pre>
       * PostgreSQL Source Connection Info.
       * &#64;inject_tag: json:"postgresql"
       * </pre>
       *
       * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
       * @return The postgresql.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL getPostgresql() {
        if (postgresqlBuilder_ == null) {
          return postgresql_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.getDefaultInstance() : postgresql_;
        } else {
          return postgresqlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * PostgreSQL Source Connection Info.
       * &#64;inject_tag: json:"postgresql"
       * </pre>
       *
       * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
       */
      public Builder setPostgresql(com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL value) {
        if (postgresqlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          postgresql_ = value;
          onChanged();
        } else {
          postgresqlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * PostgreSQL Source Connection Info.
       * &#64;inject_tag: json:"postgresql"
       * </pre>
       *
       * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
       */
      public Builder setPostgresql(
          com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.Builder builderForValue) {
        if (postgresqlBuilder_ == null) {
          postgresql_ = builderForValue.build();
          onChanged();
        } else {
          postgresqlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * PostgreSQL Source Connection Info.
       * &#64;inject_tag: json:"postgresql"
       * </pre>
       *
       * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
       */
      public Builder mergePostgresql(com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL value) {
        if (postgresqlBuilder_ == null) {
          if (postgresql_ != null) {
            postgresql_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.newBuilder(postgresql_).mergeFrom(value).buildPartial();
          } else {
            postgresql_ = value;
          }
          onChanged();
        } else {
          postgresqlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * PostgreSQL Source Connection Info.
       * &#64;inject_tag: json:"postgresql"
       * </pre>
       *
       * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
       */
      public Builder clearPostgresql() {
        if (postgresqlBuilder_ == null) {
          postgresql_ = null;
          onChanged();
        } else {
          postgresql_ = null;
          postgresqlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * PostgreSQL Source Connection Info.
       * &#64;inject_tag: json:"postgresql"
       * </pre>
       *
       * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.Builder getPostgresqlBuilder() {
        
        onChanged();
        return getPostgresqlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * PostgreSQL Source Connection Info.
       * &#64;inject_tag: json:"postgresql"
       * </pre>
       *
       * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURLOrBuilder getPostgresqlOrBuilder() {
        if (postgresqlBuilder_ != null) {
          return postgresqlBuilder_.getMessageOrBuilder();
        } else {
          return postgresql_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.getDefaultInstance() : postgresql_;
        }
      }
      /**
       * <pre>
       * PostgreSQL Source Connection Info.
       * &#64;inject_tag: json:"postgresql"
       * </pre>
       *
       * <code>.datasource.PostgreSQLURL postgresql = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL, com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURLOrBuilder> 
          getPostgresqlFieldBuilder() {
        if (postgresqlBuilder_ == null) {
          postgresqlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL, com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.PostgreSQLURLOrBuilder>(
                  getPostgresql(),
                  getParentForChildren(),
                  isClean());
          postgresql_ = null;
        }
        return postgresqlBuilder_;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL clickhouse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL, com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURLOrBuilder> clickhouseBuilder_;
      /**
       * <pre>
       * ClickHouse Source Connection Info.
       * &#64;inject_tag: json:"clickhouse"
       * </pre>
       *
       * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
       * @return Whether the clickhouse field is set.
       */
      public boolean hasClickhouse() {
        return clickhouseBuilder_ != null || clickhouse_ != null;
      }
      /**
       * <pre>
       * ClickHouse Source Connection Info.
       * &#64;inject_tag: json:"clickhouse"
       * </pre>
       *
       * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
       * @return The clickhouse.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL getClickhouse() {
        if (clickhouseBuilder_ == null) {
          return clickhouse_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.getDefaultInstance() : clickhouse_;
        } else {
          return clickhouseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * ClickHouse Source Connection Info.
       * &#64;inject_tag: json:"clickhouse"
       * </pre>
       *
       * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
       */
      public Builder setClickhouse(com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL value) {
        if (clickhouseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clickhouse_ = value;
          onChanged();
        } else {
          clickhouseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * ClickHouse Source Connection Info.
       * &#64;inject_tag: json:"clickhouse"
       * </pre>
       *
       * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
       */
      public Builder setClickhouse(
          com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.Builder builderForValue) {
        if (clickhouseBuilder_ == null) {
          clickhouse_ = builderForValue.build();
          onChanged();
        } else {
          clickhouseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * ClickHouse Source Connection Info.
       * &#64;inject_tag: json:"clickhouse"
       * </pre>
       *
       * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
       */
      public Builder mergeClickhouse(com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL value) {
        if (clickhouseBuilder_ == null) {
          if (clickhouse_ != null) {
            clickhouse_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.newBuilder(clickhouse_).mergeFrom(value).buildPartial();
          } else {
            clickhouse_ = value;
          }
          onChanged();
        } else {
          clickhouseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * ClickHouse Source Connection Info.
       * &#64;inject_tag: json:"clickhouse"
       * </pre>
       *
       * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
       */
      public Builder clearClickhouse() {
        if (clickhouseBuilder_ == null) {
          clickhouse_ = null;
          onChanged();
        } else {
          clickhouse_ = null;
          clickhouseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * ClickHouse Source Connection Info.
       * &#64;inject_tag: json:"clickhouse"
       * </pre>
       *
       * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.Builder getClickhouseBuilder() {
        
        onChanged();
        return getClickhouseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * ClickHouse Source Connection Info.
       * &#64;inject_tag: json:"clickhouse"
       * </pre>
       *
       * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURLOrBuilder getClickhouseOrBuilder() {
        if (clickhouseBuilder_ != null) {
          return clickhouseBuilder_.getMessageOrBuilder();
        } else {
          return clickhouse_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.getDefaultInstance() : clickhouse_;
        }
      }
      /**
       * <pre>
       * ClickHouse Source Connection Info.
       * &#64;inject_tag: json:"clickhouse"
       * </pre>
       *
       * <code>.datasource.ClickHouseURL clickhouse = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL, com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURLOrBuilder> 
          getClickhouseFieldBuilder() {
        if (clickhouseBuilder_ == null) {
          clickhouseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL, com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.ClickHouseURLOrBuilder>(
                  getClickhouse(),
                  getParentForChildren(),
                  isClean());
          clickhouse_ = null;
        }
        return clickhouseBuilder_;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL kafka_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL, com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURLOrBuilder> kafkaBuilder_;
      /**
       * <pre>
       * Kafka Source Connection Info.
       * &#64;inject_tag: json:"kafka"
       * </pre>
       *
       * <code>.datasource.KafkaURL kafka = 4;</code>
       * @return Whether the kafka field is set.
       */
      public boolean hasKafka() {
        return kafkaBuilder_ != null || kafka_ != null;
      }
      /**
       * <pre>
       * Kafka Source Connection Info.
       * &#64;inject_tag: json:"kafka"
       * </pre>
       *
       * <code>.datasource.KafkaURL kafka = 4;</code>
       * @return The kafka.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL getKafka() {
        if (kafkaBuilder_ == null) {
          return kafka_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.getDefaultInstance() : kafka_;
        } else {
          return kafkaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Kafka Source Connection Info.
       * &#64;inject_tag: json:"kafka"
       * </pre>
       *
       * <code>.datasource.KafkaURL kafka = 4;</code>
       */
      public Builder setKafka(com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL value) {
        if (kafkaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kafka_ = value;
          onChanged();
        } else {
          kafkaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Kafka Source Connection Info.
       * &#64;inject_tag: json:"kafka"
       * </pre>
       *
       * <code>.datasource.KafkaURL kafka = 4;</code>
       */
      public Builder setKafka(
          com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.Builder builderForValue) {
        if (kafkaBuilder_ == null) {
          kafka_ = builderForValue.build();
          onChanged();
        } else {
          kafkaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Kafka Source Connection Info.
       * &#64;inject_tag: json:"kafka"
       * </pre>
       *
       * <code>.datasource.KafkaURL kafka = 4;</code>
       */
      public Builder mergeKafka(com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL value) {
        if (kafkaBuilder_ == null) {
          if (kafka_ != null) {
            kafka_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.newBuilder(kafka_).mergeFrom(value).buildPartial();
          } else {
            kafka_ = value;
          }
          onChanged();
        } else {
          kafkaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Kafka Source Connection Info.
       * &#64;inject_tag: json:"kafka"
       * </pre>
       *
       * <code>.datasource.KafkaURL kafka = 4;</code>
       */
      public Builder clearKafka() {
        if (kafkaBuilder_ == null) {
          kafka_ = null;
          onChanged();
        } else {
          kafka_ = null;
          kafkaBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Kafka Source Connection Info.
       * &#64;inject_tag: json:"kafka"
       * </pre>
       *
       * <code>.datasource.KafkaURL kafka = 4;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.Builder getKafkaBuilder() {
        
        onChanged();
        return getKafkaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Kafka Source Connection Info.
       * &#64;inject_tag: json:"kafka"
       * </pre>
       *
       * <code>.datasource.KafkaURL kafka = 4;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURLOrBuilder getKafkaOrBuilder() {
        if (kafkaBuilder_ != null) {
          return kafkaBuilder_.getMessageOrBuilder();
        } else {
          return kafka_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.getDefaultInstance() : kafka_;
        }
      }
      /**
       * <pre>
       * Kafka Source Connection Info.
       * &#64;inject_tag: json:"kafka"
       * </pre>
       *
       * <code>.datasource.KafkaURL kafka = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL, com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURLOrBuilder> 
          getKafkaFieldBuilder() {
        if (kafkaBuilder_ == null) {
          kafkaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL, com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.KafkaURLOrBuilder>(
                  getKafka(),
                  getParentForChildren(),
                  isClean());
          kafka_ = null;
        }
        return kafkaBuilder_;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL s3_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL, com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.S3URLOrBuilder> s3Builder_;
      /**
       * <pre>
       * S3 Source Connection Info.
       * &#64;inject_tag: json:"s3"
       * </pre>
       *
       * <code>.datasource.S3URL s3 = 5;</code>
       * @return Whether the s3 field is set.
       */
      public boolean hasS3() {
        return s3Builder_ != null || s3_ != null;
      }
      /**
       * <pre>
       * S3 Source Connection Info.
       * &#64;inject_tag: json:"s3"
       * </pre>
       *
       * <code>.datasource.S3URL s3 = 5;</code>
       * @return The s3.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL getS3() {
        if (s3Builder_ == null) {
          return s3_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.getDefaultInstance() : s3_;
        } else {
          return s3Builder_.getMessage();
        }
      }
      /**
       * <pre>
       * S3 Source Connection Info.
       * &#64;inject_tag: json:"s3"
       * </pre>
       *
       * <code>.datasource.S3URL s3 = 5;</code>
       */
      public Builder setS3(com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL value) {
        if (s3Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          s3_ = value;
          onChanged();
        } else {
          s3Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * S3 Source Connection Info.
       * &#64;inject_tag: json:"s3"
       * </pre>
       *
       * <code>.datasource.S3URL s3 = 5;</code>
       */
      public Builder setS3(
          com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.Builder builderForValue) {
        if (s3Builder_ == null) {
          s3_ = builderForValue.build();
          onChanged();
        } else {
          s3Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * S3 Source Connection Info.
       * &#64;inject_tag: json:"s3"
       * </pre>
       *
       * <code>.datasource.S3URL s3 = 5;</code>
       */
      public Builder mergeS3(com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL value) {
        if (s3Builder_ == null) {
          if (s3_ != null) {
            s3_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.newBuilder(s3_).mergeFrom(value).buildPartial();
          } else {
            s3_ = value;
          }
          onChanged();
        } else {
          s3Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * S3 Source Connection Info.
       * &#64;inject_tag: json:"s3"
       * </pre>
       *
       * <code>.datasource.S3URL s3 = 5;</code>
       */
      public Builder clearS3() {
        if (s3Builder_ == null) {
          s3_ = null;
          onChanged();
        } else {
          s3_ = null;
          s3Builder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * S3 Source Connection Info.
       * &#64;inject_tag: json:"s3"
       * </pre>
       *
       * <code>.datasource.S3URL s3 = 5;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.Builder getS3Builder() {
        
        onChanged();
        return getS3FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * S3 Source Connection Info.
       * &#64;inject_tag: json:"s3"
       * </pre>
       *
       * <code>.datasource.S3URL s3 = 5;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.S3URLOrBuilder getS3OrBuilder() {
        if (s3Builder_ != null) {
          return s3Builder_.getMessageOrBuilder();
        } else {
          return s3_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.getDefaultInstance() : s3_;
        }
      }
      /**
       * <pre>
       * S3 Source Connection Info.
       * &#64;inject_tag: json:"s3"
       * </pre>
       *
       * <code>.datasource.S3URL s3 = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL, com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.S3URLOrBuilder> 
          getS3FieldBuilder() {
        if (s3Builder_ == null) {
          s3Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL, com.github.dataomnis.datasourcepdb.DataSourcePB.S3URL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.S3URLOrBuilder>(
                  getS3(),
                  getParentForChildren(),
                  isClean());
          s3_ = null;
        }
        return s3Builder_;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL hbase_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL, com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURLOrBuilder> hbaseBuilder_;
      /**
       * <pre>
       * Hbase Source Connection Info.
       * &#64;inject_tag: json:"hbase"
       * </pre>
       *
       * <code>.datasource.HBaseURL hbase = 6;</code>
       * @return Whether the hbase field is set.
       */
      public boolean hasHbase() {
        return hbaseBuilder_ != null || hbase_ != null;
      }
      /**
       * <pre>
       * Hbase Source Connection Info.
       * &#64;inject_tag: json:"hbase"
       * </pre>
       *
       * <code>.datasource.HBaseURL hbase = 6;</code>
       * @return The hbase.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL getHbase() {
        if (hbaseBuilder_ == null) {
          return hbase_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.getDefaultInstance() : hbase_;
        } else {
          return hbaseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Hbase Source Connection Info.
       * &#64;inject_tag: json:"hbase"
       * </pre>
       *
       * <code>.datasource.HBaseURL hbase = 6;</code>
       */
      public Builder setHbase(com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL value) {
        if (hbaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hbase_ = value;
          onChanged();
        } else {
          hbaseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Hbase Source Connection Info.
       * &#64;inject_tag: json:"hbase"
       * </pre>
       *
       * <code>.datasource.HBaseURL hbase = 6;</code>
       */
      public Builder setHbase(
          com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.Builder builderForValue) {
        if (hbaseBuilder_ == null) {
          hbase_ = builderForValue.build();
          onChanged();
        } else {
          hbaseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Hbase Source Connection Info.
       * &#64;inject_tag: json:"hbase"
       * </pre>
       *
       * <code>.datasource.HBaseURL hbase = 6;</code>
       */
      public Builder mergeHbase(com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL value) {
        if (hbaseBuilder_ == null) {
          if (hbase_ != null) {
            hbase_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.newBuilder(hbase_).mergeFrom(value).buildPartial();
          } else {
            hbase_ = value;
          }
          onChanged();
        } else {
          hbaseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Hbase Source Connection Info.
       * &#64;inject_tag: json:"hbase"
       * </pre>
       *
       * <code>.datasource.HBaseURL hbase = 6;</code>
       */
      public Builder clearHbase() {
        if (hbaseBuilder_ == null) {
          hbase_ = null;
          onChanged();
        } else {
          hbase_ = null;
          hbaseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Hbase Source Connection Info.
       * &#64;inject_tag: json:"hbase"
       * </pre>
       *
       * <code>.datasource.HBaseURL hbase = 6;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.Builder getHbaseBuilder() {
        
        onChanged();
        return getHbaseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Hbase Source Connection Info.
       * &#64;inject_tag: json:"hbase"
       * </pre>
       *
       * <code>.datasource.HBaseURL hbase = 6;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURLOrBuilder getHbaseOrBuilder() {
        if (hbaseBuilder_ != null) {
          return hbaseBuilder_.getMessageOrBuilder();
        } else {
          return hbase_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.getDefaultInstance() : hbase_;
        }
      }
      /**
       * <pre>
       * Hbase Source Connection Info.
       * &#64;inject_tag: json:"hbase"
       * </pre>
       *
       * <code>.datasource.HBaseURL hbase = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL, com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURLOrBuilder> 
          getHbaseFieldBuilder() {
        if (hbaseBuilder_ == null) {
          hbaseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL, com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.HBaseURLOrBuilder>(
                  getHbase(),
                  getParentForChildren(),
                  isClean());
          hbase_ = null;
        }
        return hbaseBuilder_;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL ftp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL, com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURLOrBuilder> ftpBuilder_;
      /**
       * <pre>
       * Ftp Source Connection Info.
       * &#64;inject_tag: json:"ftp"
       * </pre>
       *
       * <code>.datasource.FtpURL ftp = 7;</code>
       * @return Whether the ftp field is set.
       */
      public boolean hasFtp() {
        return ftpBuilder_ != null || ftp_ != null;
      }
      /**
       * <pre>
       * Ftp Source Connection Info.
       * &#64;inject_tag: json:"ftp"
       * </pre>
       *
       * <code>.datasource.FtpURL ftp = 7;</code>
       * @return The ftp.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL getFtp() {
        if (ftpBuilder_ == null) {
          return ftp_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.getDefaultInstance() : ftp_;
        } else {
          return ftpBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Ftp Source Connection Info.
       * &#64;inject_tag: json:"ftp"
       * </pre>
       *
       * <code>.datasource.FtpURL ftp = 7;</code>
       */
      public Builder setFtp(com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL value) {
        if (ftpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ftp_ = value;
          onChanged();
        } else {
          ftpBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Ftp Source Connection Info.
       * &#64;inject_tag: json:"ftp"
       * </pre>
       *
       * <code>.datasource.FtpURL ftp = 7;</code>
       */
      public Builder setFtp(
          com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.Builder builderForValue) {
        if (ftpBuilder_ == null) {
          ftp_ = builderForValue.build();
          onChanged();
        } else {
          ftpBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Ftp Source Connection Info.
       * &#64;inject_tag: json:"ftp"
       * </pre>
       *
       * <code>.datasource.FtpURL ftp = 7;</code>
       */
      public Builder mergeFtp(com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL value) {
        if (ftpBuilder_ == null) {
          if (ftp_ != null) {
            ftp_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.newBuilder(ftp_).mergeFrom(value).buildPartial();
          } else {
            ftp_ = value;
          }
          onChanged();
        } else {
          ftpBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Ftp Source Connection Info.
       * &#64;inject_tag: json:"ftp"
       * </pre>
       *
       * <code>.datasource.FtpURL ftp = 7;</code>
       */
      public Builder clearFtp() {
        if (ftpBuilder_ == null) {
          ftp_ = null;
          onChanged();
        } else {
          ftp_ = null;
          ftpBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Ftp Source Connection Info.
       * &#64;inject_tag: json:"ftp"
       * </pre>
       *
       * <code>.datasource.FtpURL ftp = 7;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.Builder getFtpBuilder() {
        
        onChanged();
        return getFtpFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Ftp Source Connection Info.
       * &#64;inject_tag: json:"ftp"
       * </pre>
       *
       * <code>.datasource.FtpURL ftp = 7;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURLOrBuilder getFtpOrBuilder() {
        if (ftpBuilder_ != null) {
          return ftpBuilder_.getMessageOrBuilder();
        } else {
          return ftp_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.getDefaultInstance() : ftp_;
        }
      }
      /**
       * <pre>
       * Ftp Source Connection Info.
       * &#64;inject_tag: json:"ftp"
       * </pre>
       *
       * <code>.datasource.FtpURL ftp = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL, com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURLOrBuilder> 
          getFtpFieldBuilder() {
        if (ftpBuilder_ == null) {
          ftpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL, com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.FtpURLOrBuilder>(
                  getFtp(),
                  getParentForChildren(),
                  isClean());
          ftp_ = null;
        }
        return ftpBuilder_;
      }

      private com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL hdfs_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURLOrBuilder> hdfsBuilder_;
      /**
       * <pre>
       * HDFS Source Connection Info.
       * &#64;inject_tag: json:"hdfs"
       * </pre>
       *
       * <code>.datasource.HDFSURL hdfs = 8;</code>
       * @return Whether the hdfs field is set.
       */
      public boolean hasHdfs() {
        return hdfsBuilder_ != null || hdfs_ != null;
      }
      /**
       * <pre>
       * HDFS Source Connection Info.
       * &#64;inject_tag: json:"hdfs"
       * </pre>
       *
       * <code>.datasource.HDFSURL hdfs = 8;</code>
       * @return The hdfs.
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL getHdfs() {
        if (hdfsBuilder_ == null) {
          return hdfs_ == null ? com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.getDefaultInstance() : hdfs_;
        } else {
          return hdfsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * HDFS Source Connection Info.
       * &#64;inject_tag: json:"hdfs"
       * </pre>
       *
       * <code>.datasource.HDFSURL hdfs = 8;</code>
       */
      public Builder setHdfs(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL value) {
        if (hdfsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hdfs_ = value;
          onChanged();
        } else {
          hdfsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * HDFS Source Connection Info.
       * &#64;inject_tag: json:"hdfs"
       * </pre>
       *
       * <code>.datasource.HDFSURL hdfs = 8;</code>
       */
      public Builder setHdfs(
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.Builder builderForValue) {
        if (hdfsBuilder_ == null) {
          hdfs_ = builderForValue.build();
          onChanged();
        } else {
          hdfsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * HDFS Source Connection Info.
       * &#64;inject_tag: json:"hdfs"
       * </pre>
       *
       * <code>.datasource.HDFSURL hdfs = 8;</code>
       */
      public Builder mergeHdfs(com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL value) {
        if (hdfsBuilder_ == null) {
          if (hdfs_ != null) {
            hdfs_ =
              com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.newBuilder(hdfs_).mergeFrom(value).buildPartial();
          } else {
            hdfs_ = value;
          }
          onChanged();
        } else {
          hdfsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * HDFS Source Connection Info.
       * &#64;inject_tag: json:"hdfs"
       * </pre>
       *
       * <code>.datasource.HDFSURL hdfs = 8;</code>
       */
      public Builder clearHdfs() {
        if (hdfsBuilder_ == null) {
          hdfs_ = null;
          onChanged();
        } else {
          hdfs_ = null;
          hdfsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * HDFS Source Connection Info.
       * &#64;inject_tag: json:"hdfs"
       * </pre>
       *
       * <code>.datasource.HDFSURL hdfs = 8;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.Builder getHdfsBuilder() {
        
        onChanged();
        return getHdfsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * HDFS Source Connection Info.
       * &#64;inject_tag: json:"hdfs"
       * </pre>
       *
       * <code>.datasource.HDFSURL hdfs = 8;</code>
       */
      public com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURLOrBuilder getHdfsOrBuilder() {
        if (hdfsBuilder_ != null) {
          return hdfsBuilder_.getMessageOrBuilder();
        } else {
          return hdfs_ == null ?
              com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.getDefaultInstance() : hdfs_;
        }
      }
      /**
       * <pre>
       * HDFS Source Connection Info.
       * &#64;inject_tag: json:"hdfs"
       * </pre>
       *
       * <code>.datasource.HDFSURL hdfs = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURLOrBuilder> 
          getHdfsFieldBuilder() {
        if (hdfsBuilder_ == null) {
          hdfsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURL.Builder, com.github.dataomnis.datasourcepdb.DataSourcePB.HDFSURLOrBuilder>(
                  getHdfs(),
                  getParentForChildren(),
                  isClean());
          hdfs_ = null;
        }
        return hdfsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:datasource.DataSourceURL)
    }

    // @@protoc_insertion_point(class_scope:datasource.DataSourceURL)
    private static final com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL();
    }

    public static com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DataSourceURL>
        PARSER = new com.google.protobuf.AbstractParser<DataSourceURL>() {
      @java.lang.Override
      public DataSourceURL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataSourceURL(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DataSourceURL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataSourceURL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.dataomnis.datasourcepdb.DataSourcePB.DataSourceURL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_DatasourceNetwork_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_DatasourceNetwork_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_DatasourceNetwork_VpcNetwork_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_DatasourceNetwork_VpcNetwork_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_MySQLURL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_MySQLURL_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_PostgreSQLURL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_PostgreSQLURL_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_ClickHouseURL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_ClickHouseURL_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_KafkaURL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_KafkaURL_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_S3URL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_S3URL_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_HBaseURL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_HBaseURL_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_FtpURL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_FtpURL_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_HDFSURL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_HDFSURL_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_HDFSURL_HDFSNodeURL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_HDFSURL_HDFSNodeURL_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_datasource_DataSourceURL_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_datasource_DataSourceURL_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026proto/datasource.proto\022\ndatasource\0321gi" +
      "thub.com/yu31/proto-go-plugin/proto/gosq" +
      "l.proto\0325github.com/yu31/proto-go-plugin" +
      "/proto/validator.proto\"\372\001\n\021DatasourceNet" +
      "work\022?\n\004type\030\001 \001(\0162\".datasource.Datasour" +
      "ceNetwork.TypeB\r\342\337\037\t\022\007\332\001\0040\000X\001\022C\n\013vpc_net" +
      "work\030\002 \001(\0132(.datasource.DatasourceNetwor" +
      "k.VpcNetworkB\004\342\337\037\000\032.\n\nVpcNetwork\022 \n\nnetw" +
      "ork_id\030\001 \001(\tB\014\342\337\037\010\022\006\302\001\003\360\001\024\"\'\n\004Type\022\r\n\tTy" +
      "peUnset\020\000\022\007\n\003Eip\020\001\022\007\n\003Vpc\020\002:\006\312\262\004\002\n\000\"\353\001\n\010" +
      "MySQLURL\022\035\n\004user\030\001 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\022" +
      "!\n\010password\030\002 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\022\035\n\004ho" +
      "st\030\003 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\022\035\n\004port\030\004 \001(\005B" +
      "\017\342\337\037\013\022\t\262\001\0068\200\200\004@\000\022!\n\010database\030\005 \001(\tB\017\342\337\037\013" +
      "\022\t\302\001\006\220\002\001\230\002@\0224\n\007network\030\006 \001(\0132\035.datasourc" +
      "e.DatasourceNetworkB\004\342\337\037\000:\006\312\262\004\002\n\000\"\360\001\n\rPo" +
      "stgreSQLURL\022\035\n\004user\030\001 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230" +
      "\002@\022!\n\010password\030\002 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\022\035\n" +
      "\004host\030\003 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\022\035\n\004port\030\004 \001" +
      "(\005B\017\342\337\037\013\022\t\262\001\0068\200\200\004@\000\022!\n\010database\030\005 \001(\tB\017\342" +
      "\337\037\013\022\t\302\001\006\220\002\001\230\002@\0224\n\007network\030\006 \001(\0132\035.dataso" +
      "urce.DatasourceNetworkB\004\342\337\037\000:\006\312\262\004\002\n\000\"\360\001\n" +
      "\rClickHouseURL\022\035\n\004user\030\001 \001(\tB\017\342\337\037\013\022\t\302\001\006\220" +
      "\002\001\230\002@\022!\n\010password\030\002 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@" +
      "\022\035\n\004host\030\003 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\022\035\n\004port\030" +
      "\004 \001(\005B\017\342\337\037\013\022\t\262\001\0068\200\200\004@\000\022!\n\010database\030\005 \001(\t" +
      "B\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\0224\n\007network\030\006 \001(\0132\035.dat" +
      "asource.DatasourceNetworkB\004\342\337\037\000:\006\312\262\004\002\n\000\"" +
      "q\n\010KafkaURL\022\'\n\rkafka_brokers\030\001 \001(\tB\020\342\337\037\014" +
      "\022\n\302\001\007\220\002\001\230\002\200\010\0224\n\007network\030\002 \001(\0132\035.datasour" +
      "ce.DatasourceNetworkB\004\342\337\037\000:\006\312\262\004\002\n\000\"\017\n\005S3" +
      "URL:\006\312\262\004\002\n\000\"\217\001\n\010HBaseURL\022#\n\tzookeeper\030\001 " +
      "\001(\tB\020\342\337\037\014\022\n\302\001\007\220\002\001\230\002\200\010\022 \n\006z_node\030\002 \001(\tB\020\342" +
      "\337\037\014\022\n\302\001\007\220\002\001\230\002\200\010\0224\n\007network\030\003 \001(\0132\035.datas" +
      "ource.DatasourceNetworkB\004\342\337\037\000:\006\312\262\004\002\n\000\"\306\001" +
      "\n\006FtpURL\022\035\n\004host\030\001 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\022" +
      "\035\n\004port\030\002 \001(\005B\017\342\337\037\013\022\t\262\001\0068\200\200\004@\000\022\035\n\004user\030\003" +
      " \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\022!\n\010password\030\004 \001(\tB" +
      "\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\0224\n\007network\030\005 \001(\0132\035.data" +
      "source.DatasourceNetworkB\004\342\337\037\000:\006\312\262\004\002\n\000\"\303" +
      "\001\n\007HDFSURL\022.\n\005nodes\030\001 \001(\0132\037.datasource.H" +
      "DFSURL.HDFSNodeURL\022.\n\007network\030\002 \001(\0132\035.da" +
      "tasource.DatasourceNetwork\032P\n\013HDFSNodeUR" +
      "L\022\"\n\tname_node\030\001 \001(\tB\017\342\337\037\013\022\t\302\001\006\220\002\001\230\002@\022\035\n" +
      "\004port\030\002 \001(\005B\017\342\337\037\013\022\t\262\001\0068\200\200\004@\000:\006\312\262\004\002\n\000\"\307\002\n" +
      "\rDataSourceURL\022#\n\005mysql\030\001 \001(\0132\024.datasour" +
      "ce.MySQLURL\022-\n\npostgresql\030\002 \001(\0132\031.dataso" +
      "urce.PostgreSQLURL\022-\n\nclickhouse\030\003 \001(\0132\031" +
      ".datasource.ClickHouseURL\022#\n\005kafka\030\004 \001(\013" +
      "2\024.datasource.KafkaURL\022\035\n\002s3\030\005 \001(\0132\021.dat" +
      "asource.S3URL\022#\n\005hbase\030\006 \001(\0132\024.datasourc" +
      "e.HBaseURL\022\037\n\003ftp\030\007 \001(\0132\022.datasource.Ftp" +
      "URL\022!\n\004hdfs\030\010 \001(\0132\023.datasource.HDFSURL:\006" +
      "\312\262\004\002\n\000Bf\n\"com.github.dataomnis.datasourc" +
      "epdbB\014DataSourcePBP\000Z0github.com/DataWor" +
      "kbench/gproto/pkg/datasourcepbb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.github.yu31.gosqlpb.GoSQLPB.getDescriptor(),
          com.github.yu31.validatorpb.ValidatorPB.getDescriptor(),
        });
    internal_static_datasource_DatasourceNetwork_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_datasource_DatasourceNetwork_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_DatasourceNetwork_descriptor,
        new java.lang.String[] { "Type", "VpcNetwork", });
    internal_static_datasource_DatasourceNetwork_VpcNetwork_descriptor =
      internal_static_datasource_DatasourceNetwork_descriptor.getNestedTypes().get(0);
    internal_static_datasource_DatasourceNetwork_VpcNetwork_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_DatasourceNetwork_VpcNetwork_descriptor,
        new java.lang.String[] { "NetworkId", });
    internal_static_datasource_MySQLURL_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_datasource_MySQLURL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_MySQLURL_descriptor,
        new java.lang.String[] { "User", "Password", "Host", "Port", "Database", "Network", });
    internal_static_datasource_PostgreSQLURL_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_datasource_PostgreSQLURL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_PostgreSQLURL_descriptor,
        new java.lang.String[] { "User", "Password", "Host", "Port", "Database", "Network", });
    internal_static_datasource_ClickHouseURL_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_datasource_ClickHouseURL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_ClickHouseURL_descriptor,
        new java.lang.String[] { "User", "Password", "Host", "Port", "Database", "Network", });
    internal_static_datasource_KafkaURL_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_datasource_KafkaURL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_KafkaURL_descriptor,
        new java.lang.String[] { "KafkaBrokers", "Network", });
    internal_static_datasource_S3URL_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_datasource_S3URL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_S3URL_descriptor,
        new java.lang.String[] { });
    internal_static_datasource_HBaseURL_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_datasource_HBaseURL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_HBaseURL_descriptor,
        new java.lang.String[] { "Zookeeper", "ZNode", "Network", });
    internal_static_datasource_FtpURL_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_datasource_FtpURL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_FtpURL_descriptor,
        new java.lang.String[] { "Host", "Port", "User", "Password", "Network", });
    internal_static_datasource_HDFSURL_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_datasource_HDFSURL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_HDFSURL_descriptor,
        new java.lang.String[] { "Nodes", "Network", });
    internal_static_datasource_HDFSURL_HDFSNodeURL_descriptor =
      internal_static_datasource_HDFSURL_descriptor.getNestedTypes().get(0);
    internal_static_datasource_HDFSURL_HDFSNodeURL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_HDFSURL_HDFSNodeURL_descriptor,
        new java.lang.String[] { "NameNode", "Port", });
    internal_static_datasource_DataSourceURL_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_datasource_DataSourceURL_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_datasource_DataSourceURL_descriptor,
        new java.lang.String[] { "Mysql", "Postgresql", "Clickhouse", "Kafka", "S3", "Hbase", "Ftp", "Hdfs", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.github.yu31.gosqlpb.GoSQLPB.serialize);
    registry.add(com.github.yu31.validatorpb.ValidatorPB.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.github.yu31.gosqlpb.GoSQLPB.getDescriptor();
    com.github.yu31.validatorpb.ValidatorPB.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
