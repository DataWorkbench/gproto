// Code generated by protoc-gen-godefaults. DO NOT EDIT.
// versions:
// 		protoc-gen-godefaults v0.1
// source: proto/datasource.proto

package datasourcepb

import (
	_ "github.com/yu31/proto-go-plugin/pkg/pb/gosqlpb"
	_ "github.com/yu31/proto-go-plugin/pkg/pb/validatorpb"
)

// Set default value for message datasource.DatasourceNetwork
func (this *DatasourceNetwork) SetDefaults() {
	if this == nil {
		return
	}
	if this.VpcNetwork != nil {
		if dt, ok := interface{}(this.VpcNetwork).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message datasource.DatasourceNetwork.VpcNetwork
func (this *DatasourceNetwork_VpcNetwork) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message datasource.MySQLURL
func (this *MySQLURL) SetDefaults() {
	if this == nil {
		return
	}
	if this.Network != nil {
		if dt, ok := interface{}(this.Network).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message datasource.PostgreSQLURL
func (this *PostgreSQLURL) SetDefaults() {
	if this == nil {
		return
	}
	if this.Network != nil {
		if dt, ok := interface{}(this.Network).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message datasource.ClickHouseURL
func (this *ClickHouseURL) SetDefaults() {
	if this == nil {
		return
	}
	if this.Network != nil {
		if dt, ok := interface{}(this.Network).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message datasource.KafkaURL
func (this *KafkaURL) SetDefaults() {
	if this == nil {
		return
	}
	if this.Network != nil {
		if dt, ok := interface{}(this.Network).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message datasource.S3URL
func (this *S3URL) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message datasource.HBaseURL
func (this *HBaseURL) SetDefaults() {
	if this == nil {
		return
	}
	if this.Network != nil {
		if dt, ok := interface{}(this.Network).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message datasource.FtpURL
func (this *FtpURL) SetDefaults() {
	if this == nil {
		return
	}
	if this.Network != nil {
		if dt, ok := interface{}(this.Network).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message datasource.HDFSURL
func (this *HDFSURL) SetDefaults() {
	if this == nil {
		return
	}
	if this.Nodes != nil {
		if dt, ok := interface{}(this.Nodes).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Network != nil {
		if dt, ok := interface{}(this.Network).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message datasource.HDFSURL.HDFSNodeURL
func (this *HDFSURL_HDFSNodeURL) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message datasource.DataSourceURL
func (this *DataSourceURL) SetDefaults() {
	if this == nil {
		return
	}
	if this.Mysql != nil {
		if dt, ok := interface{}(this.Mysql).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Postgresql != nil {
		if dt, ok := interface{}(this.Postgresql).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Clickhouse != nil {
		if dt, ok := interface{}(this.Clickhouse).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Kafka != nil {
		if dt, ok := interface{}(this.Kafka).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.S3 != nil {
		if dt, ok := interface{}(this.S3).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Hbase != nil {
		if dt, ok := interface{}(this.Hbase).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Ftp != nil {
		if dt, ok := interface{}(this.Ftp).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Hdfs != nil {
		if dt, ok := interface{}(this.Hdfs).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}
