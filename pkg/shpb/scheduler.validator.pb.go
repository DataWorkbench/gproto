// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/scheduler.proto

package shpb

import (
	fmt "fmt"
	_ "github.com/DataWorkbench/gproto/pkg/model"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *DeleteAllFlowsRequest) Validate() error {
	if !(len(this.SpaceId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("SpaceId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.SpaceId))
	}
	return nil
}
func (this *ExecuteStreamFlowRequest) Validate() error {
	if this.Meta != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Meta); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Meta", err)
		}
	}
	return nil
}
func (this *DeleteStreamFlowRequest) Validate() error {
	if !(len(this.FlowId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlowId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.FlowId))
	}
	return nil
}
func (this *SubmitStreamFlowRequest) Validate() error {
	if this.Meta != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Meta); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Meta", err)
		}
	}
	if !(this.StopRunning > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("StopRunning", fmt.Errorf(`value '%v' must be greater than '-1'`, this.StopRunning))
	}
	if !(this.StopRunning < 2) {
		return github_com_mwitkow_go_proto_validators.FieldError("StopRunning", fmt.Errorf(`value '%v' must be less than '2'`, this.StopRunning))
	}
	return nil
}
func (this *OfflineStreamFlowRequest) Validate() error {
	if !(len(this.FlowId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlowId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.FlowId))
	}
	if !(this.StopRunning > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("StopRunning", fmt.Errorf(`value '%v' must be greater than '-1'`, this.StopRunning))
	}
	if !(this.StopRunning < 2) {
		return github_com_mwitkow_go_proto_validators.FieldError("StopRunning", fmt.Errorf(`value '%v' must be less than '2'`, this.StopRunning))
	}
	return nil
}
func (this *ListStreamCycleInstRequest) Validate() error {
	if !(len(this.SpaceId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("SpaceId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.SpaceId))
	}
	if !(this.Limit > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Limit", fmt.Errorf(`value '%v' must be greater than '0'`, this.Limit))
	}
	if !(this.Limit < 101) {
		return github_com_mwitkow_go_proto_validators.FieldError("Limit", fmt.Errorf(`value '%v' must be less than '101'`, this.Limit))
	}
	if !(this.Offset > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("Offset", fmt.Errorf(`value '%v' must be greater than '-1'`, this.Offset))
	}
	return nil
}
func (this *ListStreamCycleInstReply) Validate() error {
	for _, item := range this.Infos {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Infos", err)
			}
		}
	}
	return nil
}
func (this *SuspendStreamCycleInstRequest) Validate() error {
	if !(len(this.FlowId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlowId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.FlowId))
	}
	if !(len(this.InstId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("InstId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.InstId))
	}
	return nil
}
func (this *ResumeStreamCycleInstRequest) Validate() error {
	if !(len(this.FlowId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlowId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.FlowId))
	}
	if !(len(this.InstId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("InstId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.InstId))
	}
	return nil
}
func (this *TerminateStreamCycleInstRequest) Validate() error {
	if !(len(this.FlowId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlowId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.FlowId))
	}
	if !(len(this.InstId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("InstId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.InstId))
	}
	return nil
}
func (this *ListStreamTestInstRequest) Validate() error {
	if !(len(this.SpaceId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("SpaceId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.SpaceId))
	}
	if !(this.Limit > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Limit", fmt.Errorf(`value '%v' must be greater than '0'`, this.Limit))
	}
	if !(this.Limit < 101) {
		return github_com_mwitkow_go_proto_validators.FieldError("Limit", fmt.Errorf(`value '%v' must be less than '101'`, this.Limit))
	}
	if !(this.Offset > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("Offset", fmt.Errorf(`value '%v' must be greater than '-1'`, this.Offset))
	}
	return nil
}
func (this *ListStreamTestInstReply) Validate() error {
	for _, item := range this.Infos {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Infos", err)
			}
		}
	}
	return nil
}
func (this *SuspendStreamTestInstRequest) Validate() error {
	if !(len(this.FlowId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlowId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.FlowId))
	}
	if !(len(this.InstId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("InstId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.InstId))
	}
	return nil
}
func (this *ResumeStreamTestInstRequest) Validate() error {
	if !(len(this.FlowId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlowId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.FlowId))
	}
	if !(len(this.InstId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("InstId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.InstId))
	}
	return nil
}
func (this *TerminateStreamTestInstRequest) Validate() error {
	if !(len(this.FlowId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlowId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.FlowId))
	}
	if !(len(this.InstId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("InstId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.InstId))
	}
	return nil
}
func (this *ListMonitorRulesRequest) Validate() error {
	if this.SpaceId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("SpaceId", fmt.Errorf(`value '%v' must not be an empty string`, this.SpaceId))
	}
	if !(this.Limit > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Limit", fmt.Errorf(`value '%v' must be greater than '0'`, this.Limit))
	}
	if !(this.Limit < 101) {
		return github_com_mwitkow_go_proto_validators.FieldError("Limit", fmt.Errorf(`value '%v' must be less than '101'`, this.Limit))
	}
	if !(this.Offset > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("Offset", fmt.Errorf(`value '%v' must be greater than '-1'`, this.Offset))
	}
	return nil
}
func (this *ListMonitorRulesReply) Validate() error {
	for _, item := range this.Infos {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Infos", err)
			}
		}
	}
	return nil
}
func (this *CreateMonitorRuleRequest) Validate() error {
	if nil == this.Info {
		return github_com_mwitkow_go_proto_validators.FieldError("Info", fmt.Errorf("message must exist"))
	}
	if this.Info != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Info); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Info", err)
		}
	}
	return nil
}
func (this *DeleteMonitorRuleRequest) Validate() error {
	if !(len(this.RuleId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("RuleId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.RuleId))
	}
	return nil
}
func (this *UpdateMonitorRuleRequest) Validate() error {
	if nil == this.Info {
		return github_com_mwitkow_go_proto_validators.FieldError("Info", fmt.Errorf("message must exist"))
	}
	if this.Info != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Info); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Info", err)
		}
	}
	return nil
}
func (this *DescribeMonitorRuleRequest) Validate() error {
	if !(len(this.RuleId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("RuleId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.RuleId))
	}
	return nil
}
func (this *DescribeMonitorRuleReply) Validate() error {
	if nil == this.Info {
		return github_com_mwitkow_go_proto_validators.FieldError("Info", fmt.Errorf("message must exist"))
	}
	if this.Info != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Info); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Info", err)
		}
	}
	return nil
}
func (this *EnableMonitorRuleRequest) Validate() error {
	if !(len(this.RuleId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("RuleId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.RuleId))
	}
	return nil
}
func (this *DisableMonitorRuleRequest) Validate() error {
	if !(len(this.RuleId) == 20) {
		return github_com_mwitkow_go_proto_validators.FieldError("RuleId", fmt.Errorf(`value '%v' must have a length equal to '20'`, this.RuleId))
	}
	return nil
}
