// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: proto/model.proto

package model

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// EmptyStruct represents no value with a message.
type EmptyStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyStruct) Reset() {
	*x = EmptyStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyStruct) ProtoMessage() {}

func (x *EmptyStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyStruct.ProtoReflect.Descriptor instead.
func (*EmptyStruct) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{0}
}

// The workspace info.
type SpaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID, unique within a region.
	// @inject_tag: gorm:"column:id;primaryKey;"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;primaryKey;"`
	// User id of workspace owner.
	// @inject_tag: gorm:"column:owner;"
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty" gorm:"column:owner;"`
	// Workspace Name, unique within a region.
	// @inject_tag: gorm:"column:name;"
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" gorm:"column:name;"`
	// Workspace Description.
	// @inject_tag: gorm:"column:desc;"
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty" gorm:"column:desc;"`
	// Workspace status, 0 => "enabled", 1 => "disabled".
	// @inject_tag: gorm:"column:status;"
	Status int32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty" gorm:"column:status;"`
	// Timestamp of create time.
	// @inject_tag: gorm:"column:created;autoCreateTime;"
	Created int64 `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time.
	// @inject_tag: gorm:"column:updated;autoUpdateTime;"
	Updated int64 `protobuf:"varint,8,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *SpaceInfo) Reset() {
	*x = SpaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceInfo) ProtoMessage() {}

func (x *SpaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceInfo.ProtoReflect.Descriptor instead.
func (*SpaceInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{1}
}

func (x *SpaceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SpaceInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *SpaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SpaceInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SpaceInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *SpaceInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// The workflow info
type FlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	// @inject_tag: gorm:"column:space_id;"
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;"`
	// Workflow ID, unique within a region.
	// @inject_tag: gorm:"column:id;primarykey;"
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;primarykey;"`
	// The workflow version id, only used for Published workflows.
	// Only used in published workflow.
	// @inject_tag: gorm:"column:version;primarykey;"
	Version int64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty" gorm:"column:version;primarykey;"`
	// Workflow Name, Unique within a workspace.
	// @inject_tag: gorm:"column:name;"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" gorm:"column:name;"`
	// Workflow Description.
	// @inject_tag: gorm:"column:desc;"
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty" gorm:"column:desc;"`
	// Workflow type. 1 => "StreamSQL" 2 => "StreamJAR" 3 => "StreamOperator"
	// @inject_tag: gorm:"column:type;"
	Type int32 `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty" gorm:"column:type;"`
	// Timestamp of create time.
	// @inject_tag: gorm:"column:created;autoCreateTime;"
	Created int64 `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time.
	// @inject_tag: gorm:"column:updated;autoUpdateTime;"
	Updated int64 `protobuf:"varint,8,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *FlowInfo) Reset() {
	*x = FlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowInfo) ProtoMessage() {}

func (x *FlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowInfo.ProtoReflect.Descriptor instead.
func (*FlowInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{2}
}

func (x *FlowInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *FlowInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FlowInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FlowInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlowInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FlowInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FlowInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *FlowInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// FlowEnvInfo represents a workflow environmental parameters info.
type FlowEnvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workflow ID it belongs to.
	// @inject_tag: gorm:"column:flow_id;primarykey;"
	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;primarykey;"`
	// The release version.
	// Only used in published workflow.
	// @inject_tag: gorm:"column:version;primarykey;"
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" gorm:"column:version;primarykey;"`
	// The env content of workflow in json format.
	// @inject_tag: gorm:"column:env;"
	Env string `protobuf:"bytes,3,opt,name=env,proto3" json:"env,omitempty" gorm:"column:env;"`
}

func (x *FlowEnvInfo) Reset() {
	*x = FlowEnvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowEnvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowEnvInfo) ProtoMessage() {}

func (x *FlowEnvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowEnvInfo.ProtoReflect.Descriptor instead.
func (*FlowEnvInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{3}
}

func (x *FlowEnvInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *FlowEnvInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FlowEnvInfo) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

// FlowEnvInfo represents a workflow environmental parameters info.
type FlowNodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workflow ID it belongs to.
	// @inject_tag: gorm:"column:flow_id;primarykey;"
	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;primarykey;"`
	// The release version.
	// Only used in published workflow.
	// @inject_tag: gorm:"column:version;primarykey;"
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" gorm:"column:version;primarykey;"`
	// The env content of workflow in json format.
	// @inject_tag: gorm:"column:nodes;"
	Nodes string `protobuf:"bytes,3,opt,name=nodes,proto3" json:"nodes,omitempty" gorm:"column:nodes;"`
}

func (x *FlowNodeInfo) Reset() {
	*x = FlowNodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowNodeInfo) ProtoMessage() {}

func (x *FlowNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowNodeInfo.ProtoReflect.Descriptor instead.
func (*FlowNodeInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{4}
}

func (x *FlowNodeInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *FlowNodeInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FlowNodeInfo) GetNodes() string {
	if x != nil {
		return x.Nodes
	}
	return ""
}

// SchInfo represents a workflow schedule info.
type FlowSchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workflow ID it belongs to.
	// @inject_tag: gorm:"column:flow_id;primarykey;"
	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;primarykey;"`
	// The release version.
	// Only used in published workflow.
	// @inject_tag: gorm:"column:version;primarykey;"
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" gorm:"column:version;primarykey;"`
	// Timestamp of start time of the validity period, unit in seconds.
	// @inject_tag: gorm:"column:started;"
	Started int64 `protobuf:"varint,3,opt,name=started,proto3" json:"started,omitempty" gorm:"column:started;"`
	// Timestamp of end time of the validity period, unit in seconds.
	// @inject_tag: gorm:"column:ended;"
	Ended int64 `protobuf:"varint,4,opt,name=ended,proto3" json:"ended,omitempty" gorm:"column:ended;"`
	// Schedule priority, 1 => "highest", 2 => "high", 3 => "medium", 4 => "low", 5 => "lowest", default 3.
	// @inject_tag: gorm:"column:priority;"
	Priority int32 `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty" gorm:"column:priority;"`
	// Strategy when node task execute fail.
	// @inject_tag: gorm:"column:failure_strategy;"
	FailureStrategy int32 `protobuf:"varint,6,opt,name=failure_strategy,json=failureStrategy,proto3" json:"failure_strategy,omitempty" gorm:"column:failure_strategy;"`
	// Strategy of dependency.
	// @inject_tag: gorm:"column:depend_strategy;"
	DependStrategy int32 `protobuf:"varint,7,opt,name=depend_strategy,json=dependStrategy,proto3" json:"depend_strategy,omitempty" gorm:"column:depend_strategy;"`
	// Strategy of schedule, 1 => "loop".
	// @inject_tag: gorm:"column:schedule_strategy;"
	ScheduleStrategy int32 `protobuf:"varint,8,opt,name=schedule_strategy,json=scheduleStrategy,proto3" json:"schedule_strategy,omitempty" gorm:"column:schedule_strategy;"`
	// Limit count of schedule, 0 means no limited.
	// @inject_tag: gorm:"column:schedule_limit;"
	ScheduleLimit int64 `protobuf:"varint,9,opt,name=schedule_limit,json=scheduleLimit,proto3" json:"schedule_limit,omitempty" gorm:"column:schedule_limit;"`
	// Express is the standard unix crontab express, used with loop ScheduleStrategy.
	// @inject_tag: gorm:"column:express;"
	Express string `protobuf:"bytes,10,opt,name=express,proto3" json:"express,omitempty" gorm:"column:express;"`
}

func (x *FlowSchInfo) Reset() {
	*x = FlowSchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowSchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowSchInfo) ProtoMessage() {}

func (x *FlowSchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowSchInfo.ProtoReflect.Descriptor instead.
func (*FlowSchInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{5}
}

func (x *FlowSchInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *FlowSchInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FlowSchInfo) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *FlowSchInfo) GetEnded() int64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *FlowSchInfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *FlowSchInfo) GetFailureStrategy() int32 {
	if x != nil {
		return x.FailureStrategy
	}
	return 0
}

func (x *FlowSchInfo) GetDependStrategy() int32 {
	if x != nil {
		return x.DependStrategy
	}
	return 0
}

func (x *FlowSchInfo) GetScheduleStrategy() int32 {
	if x != nil {
		return x.ScheduleStrategy
	}
	return 0
}

func (x *FlowSchInfo) GetScheduleLimit() int64 {
	if x != nil {
		return x.ScheduleLimit
	}
	return 0
}

func (x *FlowSchInfo) GetExpress() string {
	if x != nil {
		return x.Express
	}
	return ""
}

// FlowMeta represents a full workflow metadata where are FlowInfo, FlowNodeInfo, FlowEnvInfo, FlowSchInfo
type FlowMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow     *FlowInfo     `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	Node     *FlowNodeInfo `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Env      *FlowEnvInfo  `protobuf:"bytes,3,opt,name=env,proto3" json:"env,omitempty"`
	Schedule *FlowSchInfo  `protobuf:"bytes,4,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *FlowMeta) Reset() {
	*x = FlowMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowMeta) ProtoMessage() {}

func (x *FlowMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowMeta.ProtoReflect.Descriptor instead.
func (*FlowMeta) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{6}
}

func (x *FlowMeta) GetFlow() *FlowInfo {
	if x != nil {
		return x.Flow
	}
	return nil
}

func (x *FlowMeta) GetNode() *FlowNodeInfo {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *FlowMeta) GetEnv() *FlowEnvInfo {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *FlowMeta) GetSchedule() *FlowSchInfo {
	if x != nil {
		return x.Schedule
	}
	return nil
}

// The latest release workflow info.
type ReleaseLatestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	// @inject_tag: gorm:"column:space_id;"
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;"`
	// Workflow ID, unique within a region.
	// @inject_tag: gorm:"column:id;primarykey;"
	FlowId string `protobuf:"bytes,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:id;primarykey;"`
	// The release version.
	// @inject_tag: gorm:"column:version;
	Version int64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// Workflow Name, Unique within a workspace.
	// @inject_tag: gorm:"column:name;"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" gorm:"column:name;"`
	// Workflow type. 1 => "StreamSQL" 2 => "StreamJAR" 3 => "StreamOperator"
	// @inject_tag: gorm:"column:type;"
	Type int32 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty" gorm:"column:type;"`
	// Release status, 1 => "active", 2 => "suspended"
	// @inject_tag: gorm:"column:status;"
	Status int32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty" gorm:"column:status;"`
	// Workflow release description.
	// @inject_tag: gorm:"column:desc;"
	Desc string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty" gorm:"column:desc;"`
	// Timestamp of create time.
	// @inject_tag: gorm:"column:created;autoCreateTime;"
	Created int64 `protobuf:"varint,8,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time.
	// @inject_tag: gorm:"column:updated;autoUpdateTime;"
	Updated int64 `protobuf:"varint,9,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *ReleaseLatestInfo) Reset() {
	*x = ReleaseLatestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseLatestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLatestInfo) ProtoMessage() {}

func (x *ReleaseLatestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLatestInfo.ProtoReflect.Descriptor instead.
func (*ReleaseLatestInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{7}
}

func (x *ReleaseLatestInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ReleaseLatestInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *ReleaseLatestInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ReleaseLatestInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReleaseLatestInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReleaseLatestInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReleaseLatestInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ReleaseLatestInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ReleaseLatestInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// The workflow instance info.
type FlowInstInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workflow ID it belongs to.
	// @inject_tag: gorm:"column:flow_id;"
	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;"`
	// The release version.
	// @inject_tag: gorm:"column:version;
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// Workflow instance ID, unique.
	// @inject_tag: gorm:"column:id;primarykey;"
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;primarykey;"`
	// @inject_tag: gorm:"column:trigger;"
	Trigger int32 `protobuf:"varint,4,opt,name=trigger,proto3" json:"trigger,omitempty" gorm:"column:trigger;"`
	// Limit count of retries.
	// @inject_tag: gorm:"column:state;"
	State int32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty" gorm:"column:state;"`
	// @inject_tag: gorm:"column:created;autoCreateTime;"
	Created int64 `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time
	// @inject_tag: gorm:"column:updated;autoUpdateTime;"
	Updated int64 `protobuf:"varint,7,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *FlowInstInfo) Reset() {
	*x = FlowInstInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowInstInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowInstInfo) ProtoMessage() {}

func (x *FlowInstInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowInstInfo.ProtoReflect.Descriptor instead.
func (*FlowInstInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{8}
}

func (x *FlowInstInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *FlowInstInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FlowInstInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FlowInstInfo) GetTrigger() int32 {
	if x != nil {
		return x.Trigger
	}
	return 0
}

func (x *FlowInstInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *FlowInstInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *FlowInstInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// The workflow instance info.
type NodeInstInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workflow instance ID it belongs to
	// @inject_tag: gorm:"column:flow_instance_id;"
	FlowInstId string `protobuf:"bytes,1,opt,name=flow_inst_id,json=flowInstId,proto3" json:"flow_inst_id,omitempty" gorm:"column:flow_instance_id;"`
	// Workflow ID it belongs to.
	// @inject_tag: gorm:"column:flow_id;"
	FlowId string `protobuf:"bytes,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;"`
	// Node ID it belongs to.
	// @inject_tag: gorm:"column:node_id;"
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty" gorm:"column:node_id;"`
	// The release version.
	// @inject_tag: gorm:"column:version;"
	Version int64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty" gorm:"column:version;"`
	// Workflow instance ID, unique.
	// @inject_tag: gorm:"column:id;primarykey;"
	Id string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;primarykey;"`
	// @inject_tag: gorm:"column:trigger;"
	Trigger int32 `protobuf:"varint,6,opt,name=trigger,proto3" json:"trigger,omitempty" gorm:"column:trigger;"`
	// The running state.
	// @inject_tag: gorm:"column:state;"
	State int32 `protobuf:"varint,7,opt,name=state,proto3" json:"state,omitempty" gorm:"column:state;"`
	// @inject_tag: gorm:"column:created;autoCreateTime;"
	Created int64 `protobuf:"varint,8,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time
	// @inject_tag: gorm:"column:updated;autoUpdateTime;"
	Updated int64 `protobuf:"varint,9,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *NodeInstInfo) Reset() {
	*x = NodeInstInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInstInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInstInfo) ProtoMessage() {}

func (x *NodeInstInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInstInfo.ProtoReflect.Descriptor instead.
func (*NodeInstInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{9}
}

func (x *NodeInstInfo) GetFlowInstId() string {
	if x != nil {
		return x.FlowInstId
	}
	return ""
}

func (x *NodeInstInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *NodeInstInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInstInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *NodeInstInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeInstInfo) GetTrigger() int32 {
	if x != nil {
		return x.Trigger
	}
	return 0
}

func (x *NodeInstInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *NodeInstInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *NodeInstInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// The workspace operation audit record.
type AuditInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: gorm:"column:space_id;"
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;"`
	// The user id of who execute this operation.
	// @inject_tag: gorm:"column:user_id;"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" gorm:"column:user_id;"`
	// The operation type, 1 => "unknown", 2 => "read", 3 => "write", 4 => "delete"
	// @inject_tag: gorm:"column:op_type;"
	OpType int32 `protobuf:"varint,3,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty" gorm:"column:op_type;"`
	// The operation name (action)
	// @inject_tag: gorm:"column:op_name;"
	OpName string `protobuf:"bytes,4,opt,name=op_name,json=opName,proto3" json:"op_name,omitempty" gorm:"column:op_name;"`
	// Timestamp of time of when accessed.
	// @inject_tag: gorm:"column:timed;autoCreateTime;"
	Timed int64 `protobuf:"varint,5,opt,name=timed,proto3" json:"timed,omitempty" gorm:"column:timed;autoCreateTime;"`
}

func (x *AuditInfo) Reset() {
	*x = AuditInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditInfo) ProtoMessage() {}

func (x *AuditInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditInfo.ProtoReflect.Descriptor instead.
func (*AuditInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{10}
}

func (x *AuditInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *AuditInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuditInfo) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *AuditInfo) GetOpName() string {
	if x != nil {
		return x.OpName
	}
	return ""
}

func (x *AuditInfo) GetTimed() int64 {
	if x != nil {
		return x.Timed
	}
	return 0
}

// The Role info.
type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: gorm:"column:id;"
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;"`
	// @inject_tag: gorm:"column:code;"
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty" gorm:"column:code;"`
	// @inject_tag: gorm:"column:name;"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" gorm:"column:name;"`
	// @inject_tag: gorm:"column:type;" 1 => "SYSTEM" 2 => "CUSTOM"
	Type int32 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty" gorm:"column:type;"`
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{11}
}

func (x *RoleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RoleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// The workspace member info.
type MemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: gorm:"column:space_id;primaryKey;"
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;primaryKey;"`
	// Use account user-id as member id.
	// @inject_tag: gorm:"column:member_id;primaryKey;"
	MemberId string `protobuf:"bytes,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty" gorm:"column:member_id;primaryKey;"`
	// @inject_tag: gorm:"column:role_ids;" The list of role id that separated by commas. eg: 'rs-1001,rs-1002'
	RoleIds string `protobuf:"bytes,4,opt,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty" gorm:"column:role_ids;"`
	// @inject_tag: gorm:"column:created;autoCreateTime;"
	Created int64 `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time
	// @inject_tag: gorm:"column:updated;autoUpdateTime;"
	Updated int64 `protobuf:"varint,6,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *MemberInfo) Reset() {
	*x = MemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfo) ProtoMessage() {}

func (x *MemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfo.ProtoReflect.Descriptor instead.
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{12}
}

func (x *MemberInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *MemberInfo) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *MemberInfo) GetRoleIds() string {
	if x != nil {
		return x.RoleIds
	}
	return ""
}

func (x *MemberInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *MemberInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

var File_proto_model_proto protoreflect.FileDescriptor

var file_proto_model_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67,
	0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0xe4, 0x01, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f,
	0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x41, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x70, 0x01, 0x78, 0x81, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x81, 0x08, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x20, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x10, 0x00, 0x18, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x08, 0x46, 0x6c, 0x6f,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x70, 0x01, 0x78, 0x81, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x81, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x10, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x10, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x67,
	0x0a, 0x0b, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a,
	0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf,
	0x1f, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x22, 0x6c, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x77, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01,
	0x14, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xac, 0x03, 0x0a, 0x0b, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x63,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52,
	0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00,
	0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x10,
	0x00, 0x18, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a,
	0x10, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x10, 0x00, 0x18,
	0x03, 0x52, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x12, 0x31, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xe2, 0xdf, 0x1f,
	0x04, 0x10, 0x00, 0x18, 0x03, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x35, 0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x10, 0x00, 0x18, 0x03, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x36, 0x0a, 0x0e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x2f,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x36, 0x0a,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x63, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xb8, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x70, 0x01, 0x78, 0x81, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x81, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x78, 0x81, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0xed, 0x01, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x06, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0xba, 0x02, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x29, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14,
	0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x04, 0xe2, 0xdf,
	0x1f, 0x00, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x10, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x10, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xae, 0x01,
	0x0a, 0x09, 0x41, 0x75, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x41, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x06, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x22, 0x79,
	0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x40, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x80, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x10, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x0a, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03,
	0x80, 0x01, 0x14, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x41, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x80, 0x02, 0x52, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00,
	0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_model_proto_rawDescOnce sync.Once
	file_proto_model_proto_rawDescData = file_proto_model_proto_rawDesc
)

func file_proto_model_proto_rawDescGZIP() []byte {
	file_proto_model_proto_rawDescOnce.Do(func() {
		file_proto_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_model_proto_rawDescData)
	})
	return file_proto_model_proto_rawDescData
}

var file_proto_model_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_model_proto_goTypes = []interface{}{
	(*EmptyStruct)(nil),       // 0: model.EmptyStruct
	(*SpaceInfo)(nil),         // 1: model.SpaceInfo
	(*FlowInfo)(nil),          // 2: model.FlowInfo
	(*FlowEnvInfo)(nil),       // 3: model.FlowEnvInfo
	(*FlowNodeInfo)(nil),      // 4: model.FlowNodeInfo
	(*FlowSchInfo)(nil),       // 5: model.FlowSchInfo
	(*FlowMeta)(nil),          // 6: model.FlowMeta
	(*ReleaseLatestInfo)(nil), // 7: model.ReleaseLatestInfo
	(*FlowInstInfo)(nil),      // 8: model.FlowInstInfo
	(*NodeInstInfo)(nil),      // 9: model.NodeInstInfo
	(*AuditInfo)(nil),         // 10: model.AuditInfo
	(*RoleInfo)(nil),          // 11: model.RoleInfo
	(*MemberInfo)(nil),        // 12: model.MemberInfo
}
var file_proto_model_proto_depIdxs = []int32{
	2, // 0: model.FlowMeta.flow:type_name -> model.FlowInfo
	4, // 1: model.FlowMeta.node:type_name -> model.FlowNodeInfo
	3, // 2: model.FlowMeta.env:type_name -> model.FlowEnvInfo
	5, // 3: model.FlowMeta.schedule:type_name -> model.FlowSchInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_model_proto_init() }
func file_proto_model_proto_init() {
	if File_proto_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowEnvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowNodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowSchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseLatestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowInstInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInstInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_model_proto_goTypes,
		DependencyIndexes: file_proto_model_proto_depIdxs,
		MessageInfos:      file_proto_model_proto_msgTypes,
	}.Build()
	File_proto_model_proto = out.File
	file_proto_model_proto_rawDesc = nil
	file_proto_model_proto_goTypes = nil
	file_proto_model_proto_depIdxs = nil
}
