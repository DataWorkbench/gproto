// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: proto/model.proto

package model

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OpAudit_Type int32

const (
	OpAudit__       OpAudit_Type = 0
	OpAudit_Unknown OpAudit_Type = 1
	OpAudit_Create  OpAudit_Type = 2
	OpAudit_Delete  OpAudit_Type = 3
	OpAudit_Update  OpAudit_Type = 4
	OpAudit_Read    OpAudit_Type = 5
)

// Enum value maps for OpAudit_Type.
var (
	OpAudit_Type_name = map[int32]string{
		0: "_",
		1: "Unknown",
		2: "Create",
		3: "Delete",
		4: "Update",
		5: "Read",
	}
	OpAudit_Type_value = map[string]int32{
		"_":       0,
		"Unknown": 1,
		"Create":  2,
		"Delete":  3,
		"Update":  4,
		"Read":    5,
	}
)

func (x OpAudit_Type) Enum() *OpAudit_Type {
	p := new(OpAudit_Type)
	*p = x
	return p
}

func (x OpAudit_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpAudit_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_model_proto_enumTypes[0].Descriptor()
}

func (OpAudit_Type) Type() protoreflect.EnumType {
	return &file_proto_model_proto_enumTypes[0]
}

func (x OpAudit_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpAudit_Type.Descriptor instead.
func (OpAudit_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{9, 0}
}

type OpAudit_State int32

const (
	OpAudit___      OpAudit_State = 0
	OpAudit_Success OpAudit_State = 1
	OpAudit_Failed  OpAudit_State = 2
)

// Enum value maps for OpAudit_State.
var (
	OpAudit_State_name = map[int32]string{
		0: "__",
		1: "Success",
		2: "Failed",
	}
	OpAudit_State_value = map[string]int32{
		"__":      0,
		"Success": 1,
		"Failed":  2,
	}
)

func (x OpAudit_State) Enum() *OpAudit_State {
	p := new(OpAudit_State)
	*p = x
	return p
}

func (x OpAudit_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpAudit_State) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_model_proto_enumTypes[1].Descriptor()
}

func (OpAudit_State) Type() protoreflect.EnumType {
	return &file_proto_model_proto_enumTypes[1]
}

func (x OpAudit_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpAudit_State.Descriptor instead.
func (OpAudit_State) EnumDescriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{9, 1}
}

// EmptyStruct represents no value with a message.
type EmptyStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyStruct) Reset() {
	*x = EmptyStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyStruct) ProtoMessage() {}

func (x *EmptyStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyStruct.ProtoReflect.Descriptor instead.
func (*EmptyStruct) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{0}
}

// The workspace info.
type SpaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID, unique within a region.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;primaryKey;"`
	// User id of workspace owner.
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty" gorm:"column:owner;"`
	// Workspace Name, unique within a region.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" gorm:"column:name;"`
	// Workspace Description.
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty" gorm:"column:desc;"`
	// Workspace status, 0 => "enabled", 1 => "disabled".
	Status int32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty" gorm:"column:status;"`
	// Timestamp of create time.
	Created int64 `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time.
	Updated int64 `protobuf:"varint,8,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *SpaceInfo) Reset() {
	*x = SpaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceInfo) ProtoMessage() {}

func (x *SpaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceInfo.ProtoReflect.Descriptor instead.
func (*SpaceInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{1}
}

func (x *SpaceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SpaceInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *SpaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SpaceInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SpaceInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *SpaceInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// The stream workflow info
type StreamFlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;"`
	// Workflow ID, unique within a region.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;primarykey;"`
	// The workflow version id, only used for Published workflows.
	// Only used in published workflow.
	Version int64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty" gorm:"column:version;primarykey;"`
	// Workflow Name, Unique within a workspace.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" gorm:"column:name;"`
	// Workflow Description.
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty" gorm:"column:desc;"`
	// Workflow type. 1 => "StreamSQL" 2 => "StreamJAR" 3 => "StreamOperator"
	Type int32 `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty" gorm:"column:type;"`
	// Timestamp of create time.
	Created int64 `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time.
	Updated int64 `protobuf:"varint,8,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *StreamFlowInfo) Reset() {
	*x = StreamFlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFlowInfo) ProtoMessage() {}

func (x *StreamFlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFlowInfo.ProtoReflect.Descriptor instead.
func (*StreamFlowInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{2}
}

func (x *StreamFlowInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *StreamFlowInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamFlowInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StreamFlowInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreamFlowInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *StreamFlowInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *StreamFlowInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *StreamFlowInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// StreamFlowNode represents a workflow environmental parameters info.
type StreamFlowNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workflow ID it belongs to.
	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;primarykey;"`
	// The release version.
	// Only used in released workflow.
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" gorm:"column:version;primarykey;"`
	// The env content of workflow in json format.
	Nodes string `protobuf:"bytes,3,opt,name=nodes,proto3" json:"nodes,omitempty" gorm:"column:nodes;"`
}

func (x *StreamFlowNode) Reset() {
	*x = StreamFlowNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFlowNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFlowNode) ProtoMessage() {}

func (x *StreamFlowNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFlowNode.ProtoReflect.Descriptor instead.
func (*StreamFlowNode) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{3}
}

func (x *StreamFlowNode) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *StreamFlowNode) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StreamFlowNode) GetNodes() string {
	if x != nil {
		return x.Nodes
	}
	return ""
}

// StreamFlowEnv represents a workflow environmental parameters info.
type StreamFlowEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workflow ID it belongs to.
	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;primarykey;"`
	// The release version.
	// Only used in released workflow.
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" gorm:"column:version;primarykey;"`
	// The env content of workflow in json format.
	Env string `protobuf:"bytes,3,opt,name=env,proto3" json:"env,omitempty" gorm:"column:env;"`
}

func (x *StreamFlowEnv) Reset() {
	*x = StreamFlowEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFlowEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFlowEnv) ProtoMessage() {}

func (x *StreamFlowEnv) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFlowEnv.ProtoReflect.Descriptor instead.
func (*StreamFlowEnv) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{4}
}

func (x *StreamFlowEnv) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *StreamFlowEnv) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StreamFlowEnv) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

// StreamFlowSchedule represents a workflow schedule info.
type StreamFlowSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workflow ID it belongs to.
	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;primarykey;"`
	// The release version.
	// Only used in released workflow.
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" gorm:"column:version;primarykey;"`
	// The schedule content of workflow in json format.
	Schedule string `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty" gorm:"column:schedule;"`
}

func (x *StreamFlowSchedule) Reset() {
	*x = StreamFlowSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFlowSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFlowSchedule) ProtoMessage() {}

func (x *StreamFlowSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFlowSchedule.ProtoReflect.Descriptor instead.
func (*StreamFlowSchedule) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{5}
}

func (x *StreamFlowSchedule) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *StreamFlowSchedule) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StreamFlowSchedule) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

// FlowMeta represents a full workflow metadata where are FlowInfo, FlowNodeInfo, FlowEnvInfo, FlowSchInfo
type StreamFlowMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow     *StreamFlowInfo     `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	Node     *StreamFlowNode     `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Env      *StreamFlowEnv      `protobuf:"bytes,3,opt,name=env,proto3" json:"env,omitempty"`
	Schedule *StreamFlowSchedule `protobuf:"bytes,4,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *StreamFlowMeta) Reset() {
	*x = StreamFlowMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFlowMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFlowMeta) ProtoMessage() {}

func (x *StreamFlowMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFlowMeta.ProtoReflect.Descriptor instead.
func (*StreamFlowMeta) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{6}
}

func (x *StreamFlowMeta) GetFlow() *StreamFlowInfo {
	if x != nil {
		return x.Flow
	}
	return nil
}

func (x *StreamFlowMeta) GetNode() *StreamFlowNode {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *StreamFlowMeta) GetEnv() *StreamFlowEnv {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *StreamFlowMeta) GetSchedule() *StreamFlowSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

// The release stream workflow info.
type StreamFlowReleaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;"`
	// Workflow ID, unique within a region.
	FlowId string `protobuf:"bytes,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;primarykey;"`
	// The release version.
	Version int64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// Workflow Name, Unique within a workspace.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" gorm:"column:name;"`
	// Workflow type. 1 => "StreamSQL" 2 => "StreamJAR" 3 => "StreamOperator"
	Type int32 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty" gorm:"column:type;"`
	// Release status, 1 => "active", 2 => "suspended"
	Status int32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty" gorm:"column:status;"`
	// Workflow release description.
	Desc string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty" gorm:"column:desc;"`
	// Timestamp of create time.
	Created int64 `protobuf:"varint,8,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time.
	Updated int64 `protobuf:"varint,9,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *StreamFlowReleaseInfo) Reset() {
	*x = StreamFlowReleaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFlowReleaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFlowReleaseInfo) ProtoMessage() {}

func (x *StreamFlowReleaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFlowReleaseInfo.ProtoReflect.Descriptor instead.
func (*StreamFlowReleaseInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{7}
}

func (x *StreamFlowReleaseInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *StreamFlowReleaseInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *StreamFlowReleaseInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StreamFlowReleaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreamFlowReleaseInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *StreamFlowReleaseInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StreamFlowReleaseInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *StreamFlowReleaseInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *StreamFlowReleaseInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// The instance info of stream workflow.
type StreamFlowInstInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;"`
	// Workflow ID it belongs to.
	FlowId string `protobuf:"bytes,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty" gorm:"column:flow_id;"`
	// The release version.
	Version int64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// Workflow instance ID, unique.
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;primarykey;"`
	// The instance state.
	State   int32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty" gorm:"column:state;"`
	Created int64 `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time
	Updated int64 `protobuf:"varint,7,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *StreamFlowInstInfo) Reset() {
	*x = StreamFlowInstInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFlowInstInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFlowInstInfo) ProtoMessage() {}

func (x *StreamFlowInstInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFlowInstInfo.ProtoReflect.Descriptor instead.
func (*StreamFlowInstInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{8}
}

func (x *StreamFlowInstInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *StreamFlowInstInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *StreamFlowInstInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StreamFlowInstInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamFlowInstInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *StreamFlowInstInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *StreamFlowInstInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// The workspace operation audit log record.
type OpAudit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user id of who execute this operation.
	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" gorm:"column:user_id;primaryKey;"`
	SpaceId string `protobuf:"bytes,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;primaryKey;"`
	// -- The type of operation, 2 => "Create",  3 => "Delete", 4 => "Update"
	Type OpAudit_Type `protobuf:"varint,3,opt,name=type,proto3,enum=model.OpAudit_Type" json:"type,omitempty" gorm:"column:type;"`
	//	-- The operation of user behavior.
	Action string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty" gorm:"column:action;"`
	// -- The result of operation, 1 => "Success", 2 => "Failed".
	State OpAudit_State `protobuf:"varint,5,opt,name=state,proto3,enum=model.OpAudit_State" json:"state,omitempty" gorm:"column:state;"`
	// Timestamp of time of when accessed.
	Created int64 `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
}

func (x *OpAudit) Reset() {
	*x = OpAudit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpAudit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpAudit) ProtoMessage() {}

func (x *OpAudit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpAudit.ProtoReflect.Descriptor instead.
func (*OpAudit) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{9}
}

func (x *OpAudit) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OpAudit) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *OpAudit) GetType() OpAudit_Type {
	if x != nil {
		return x.Type
	}
	return OpAudit__
}

func (x *OpAudit) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *OpAudit) GetState() OpAudit_State {
	if x != nil {
		return x.State
	}
	return OpAudit___
}

func (x *OpAudit) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

// The Role info.
type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty" gorm:"column:code;"`
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" gorm:"column:name;"`
	Type int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty" gorm:"column:type;"`
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{10}
}

func (x *RoleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RoleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// The workspace member info.
type MemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;primaryKey;"`
	// Use account user-id as member id.
	MemberId string `protobuf:"bytes,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty" gorm:"column:member_id;primaryKey;"`
	RoleIds  string `protobuf:"bytes,4,opt,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty" gorm:"column:role_ids;"`
	Created  int64  `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time
	Updated int64 `protobuf:"varint,6,opt,name=updated,proto3" json:"updated,omitempty" gorm:"column:updated;autoUpdateTime;"`
}

func (x *MemberInfo) Reset() {
	*x = MemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfo) ProtoMessage() {}

func (x *MemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfo.ProtoReflect.Descriptor instead.
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{11}
}

func (x *MemberInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *MemberInfo) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *MemberInfo) GetRoleIds() string {
	if x != nil {
		return x.RoleIds
	}
	return ""
}

func (x *MemberInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *MemberInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// The monitor rule info
type MonitorRuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty" gorm:"column:space_id;"`
	// Rule ID, unique within a region.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" gorm:"column:id;primarykey;"`
	// Rule Name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" gorm:"column:name;"`
	// Rule status, 1 => "enabled", 2 => "disabled".
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty" gorm:"column:status;"`
	// The object unit, 1 => "workspace" 2 => "workflow'
	Uint int32 `protobuf:"varint,5,opt,name=uint,proto3" json:"uint,omitempty" gorm:"column:uint;"`
	// The object text.
	Text string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty" gorm:"column:text;"`
	// The trigger conditions. 3 => "retrying" 6 => "timeout"  7 => "succeed", 8 => "failed",
	Trigger int32 `protobuf:"varint,7,opt,name=trigger,proto3" json:"trigger,omitempty" gorm:"column:trigger;"`
	// The alarm times. 1 ~ 99
	AlarmTimes int32 `protobuf:"varint,8,opt,name=alarm_times,json=alarmTimes,proto3" json:"alarm_times,omitempty" gorm:"column:alarm_times;"`
	// The alarm interval. 1 ~ 30
	AlarmInterval int32 `protobuf:"varint,9,opt,name=alarm_interval,json=alarmInterval,proto3" json:"alarm_interval,omitempty" gorm:"column:alarm_interval;"`
	// The alarm type. "sms, email"
	AlarmType string `protobuf:"bytes,10,opt,name=alarm_type,json=alarmType,proto3" json:"alarm_type,omitempty" gorm:"column:alarm_type;"`
	// The free time. "00:01,03:00".
	FreeTime string `protobuf:"bytes,11,opt,name=free_time,json=freeTime,proto3" json:"free_time,omitempty" gorm:"column:free_time;"`
	// The alarm receiver. "usr-111111,usr-22222".
	Receiver string `protobuf:"bytes,12,opt,name=receiver,proto3" json:"receiver,omitempty" gorm:"column:receiver;"`
}

func (x *MonitorRuleInfo) Reset() {
	*x = MonitorRuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorRuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorRuleInfo) ProtoMessage() {}

func (x *MonitorRuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorRuleInfo.ProtoReflect.Descriptor instead.
func (*MonitorRuleInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{12}
}

func (x *MonitorRuleInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *MonitorRuleInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MonitorRuleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MonitorRuleInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MonitorRuleInfo) GetUint() int32 {
	if x != nil {
		return x.Uint
	}
	return 0
}

func (x *MonitorRuleInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MonitorRuleInfo) GetTrigger() int32 {
	if x != nil {
		return x.Trigger
	}
	return 0
}

func (x *MonitorRuleInfo) GetAlarmTimes() int32 {
	if x != nil {
		return x.AlarmTimes
	}
	return 0
}

func (x *MonitorRuleInfo) GetAlarmInterval() int32 {
	if x != nil {
		return x.AlarmInterval
	}
	return 0
}

func (x *MonitorRuleInfo) GetAlarmType() string {
	if x != nil {
		return x.AlarmType
	}
	return ""
}

func (x *MonitorRuleInfo) GetFreeTime() string {
	if x != nil {
		return x.FreeTime
	}
	return ""
}

func (x *MonitorRuleInfo) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

// The message in inst queue..
type QueueMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The request id of beginning.
	ReqId string `protobuf:"bytes,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	// The meta of stream workflow.
	Meta *StreamFlowMeta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// The operation that you will execute.
	// 1 => "run"  2 => "retry" 3 => "terminate" 4 => "delete"
	Operation int32 `protobuf:"varint,3,opt,name=operation,proto3" json:"operation,omitempty"`
	// The number of times the instance task was executed.
	Times int32 `protobuf:"varint,4,opt,name=times,proto3" json:"times,omitempty"`
	// The start execution time of the task instance.
	Started int64 `protobuf:"varint,5,opt,name=started,proto3" json:"started,omitempty"`
}

func (x *QueueMessage) Reset() {
	*x = QueueMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueMessage) ProtoMessage() {}

func (x *QueueMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueMessage.ProtoReflect.Descriptor instead.
func (*QueueMessage) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{13}
}

func (x *QueueMessage) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *QueueMessage) GetMeta() *StreamFlowMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *QueueMessage) GetOperation() int32 {
	if x != nil {
		return x.Operation
	}
	return 0
}

func (x *QueueMessage) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *QueueMessage) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

type InstanceStatusStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// instance status
	State int32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	// instance count with the status
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *InstanceStatusStat) Reset() {
	*x = InstanceStatusStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceStatusStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceStatusStat) ProtoMessage() {}

func (x *InstanceStatusStat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceStatusStat.ProtoReflect.Descriptor instead.
func (*InstanceStatusStat) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{14}
}

func (x *InstanceStatusStat) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *InstanceStatusStat) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type InstanceRuntimeRankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// instance id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// flow_id
	FlowId string `protobuf:"bytes,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	// running time
	RunningTime int64 `protobuf:"varint,3,opt,name=running_time,json=runningTime,proto3" json:"running_time,omitempty"`
	// version
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *InstanceRuntimeRankInfo) Reset() {
	*x = InstanceRuntimeRankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceRuntimeRankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceRuntimeRankInfo) ProtoMessage() {}

func (x *InstanceRuntimeRankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceRuntimeRankInfo.ProtoReflect.Descriptor instead.
func (*InstanceRuntimeRankInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{15}
}

func (x *InstanceRuntimeRankInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InstanceRuntimeRankInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *InstanceRuntimeRankInfo) GetRunningTime() int64 {
	if x != nil {
		return x.RunningTime
	}
	return 0
}

func (x *InstanceRuntimeRankInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type InstanceErrorRankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// flow_id
	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	// version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// running time
	ErrorCount int64 `protobuf:"varint,3,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
}

func (x *InstanceErrorRankInfo) Reset() {
	*x = InstanceErrorRankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceErrorRankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceErrorRankInfo) ProtoMessage() {}

func (x *InstanceErrorRankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceErrorRankInfo.ProtoReflect.Descriptor instead.
func (*InstanceErrorRankInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{16}
}

func (x *InstanceErrorRankInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *InstanceErrorRankInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstanceErrorRankInfo) GetErrorCount() int64 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

type DispatchTaskCountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// flow_count
	FlowCount int32 `protobuf:"varint,1,opt,name=flow_count,json=flowCount,proto3" json:"flow_count,omitempty"`
	// instance count
	InstanceCount int32 `protobuf:"varint,2,opt,name=instance_count,json=instanceCount,proto3" json:"instance_count,omitempty"`
	// updated time
	Updated int64 `protobuf:"varint,6,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *DispatchTaskCountInfo) Reset() {
	*x = DispatchTaskCountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatchTaskCountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchTaskCountInfo) ProtoMessage() {}

func (x *DispatchTaskCountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchTaskCountInfo.ProtoReflect.Descriptor instead.
func (*DispatchTaskCountInfo) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{17}
}

func (x *DispatchTaskCountInfo) GetFlowCount() int32 {
	if x != nil {
		return x.FlowCount
	}
	return 0
}

func (x *DispatchTaskCountInfo) GetInstanceCount() int32 {
	if x != nil {
		return x.InstanceCount
	}
	return 0
}

func (x *DispatchTaskCountInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type InstanceTaskExecStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hour
	Hour int32 `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	// success count
	InstanceCount int64 `protobuf:"varint,2,opt,name=instance_count,json=instanceCount,proto3" json:"instance_count,omitempty"`
}

func (x *InstanceTaskExecStat) Reset() {
	*x = InstanceTaskExecStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceTaskExecStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceTaskExecStat) ProtoMessage() {}

func (x *InstanceTaskExecStat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceTaskExecStat.ProtoReflect.Descriptor instead.
func (*InstanceTaskExecStat) Descriptor() ([]byte, []int) {
	return file_proto_model_proto_rawDescGZIP(), []int{18}
}

func (x *InstanceTaskExecStat) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *InstanceTaskExecStat) GetInstanceCount() int64 {
	if x != nil {
		return x.InstanceCount
	}
	return 0
}

var File_proto_model_proto protoreflect.FileDescriptor

var file_proto_model_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67,
	0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0xe4, 0x01, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f,
	0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x41, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x70, 0x01, 0x78, 0x81, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x81, 0x08, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x20, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x10, 0x00, 0x18, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x0e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f,
	0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x70, 0x01, 0x78, 0x81,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x81, 0x08, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x6e, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c,
	0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14,
	0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c,
	0x6f, 0x77, 0x45, 0x6e, 0x76, 0x12, 0x20, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52,
	0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x22,
	0x78, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52,
	0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x0e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x04,
	0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12,
	0x31, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77,
	0x4e, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c,
	0x6f, 0x77, 0x45, 0x6e, 0x76, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x03, 0x65,
	0x6e, 0x76, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x22, 0xbc, 0x02, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x70, 0x01, 0x78, 0x81, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x81, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x78, 0x81, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0xf7, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x49,
	0x6e, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80,
	0x01, 0x14, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf,
	0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f,
	0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10,
	0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xe6, 0x02, 0x0a, 0x07, 0x4f,
	0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x41, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f,
	0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x10, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x70,
	0x00, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4f, 0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x48, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x05, 0x0a, 0x01, 0x5f, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x10, 0x05, 0x22, 0x28, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x5f, 0x5f, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x10, 0x02, 0x22, 0x78, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f,
	0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x40, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x80, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbd, 0x01,
	0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x08,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x41, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x80, 0x02,
	0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x10, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xc1, 0x03,
	0x0a, 0x0f, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf,
	0x1f, 0x05, 0x70, 0x01, 0x78, 0x81, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xe2,
	0xdf, 0x1f, 0x04, 0x10, 0x00, 0x18, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xe2,
	0xdf, 0x1f, 0x04, 0x10, 0x00, 0x18, 0x03, 0x52, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x70, 0x01, 0x78, 0x81, 0x08, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x07,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x29,
	0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x10, 0x00, 0x18, 0x64, 0x52, 0x0a, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0e, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x10, 0x00, 0x18, 0x1f, 0x52, 0x0d, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0a, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xe2, 0xdf, 0x1f, 0x04, 0x70, 0x01, 0x78, 0x21, 0x52, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x70, 0x01, 0x78, 0x11,
	0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf,
	0x1f, 0x05, 0x70, 0x01, 0x78, 0x81, 0x02, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77,
	0x4d, 0x65, 0x74, 0x61, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x22, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x22, 0x62, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x10, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0f, 0xe2, 0xdf,
	0x1f, 0x0b, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf,
	0x1f, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x06, 0x66,
	0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0c, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0f, 0xe2, 0xdf, 0x1f,
	0x0b, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x0b, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x10, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e,
	0x0a, 0x0a, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x52, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x10, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x75, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x25, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x11,
	0xe2, 0xdf, 0x1f, 0x0d, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x18,
	0x19, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x36, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61,
	0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_model_proto_rawDescOnce sync.Once
	file_proto_model_proto_rawDescData = file_proto_model_proto_rawDesc
)

func file_proto_model_proto_rawDescGZIP() []byte {
	file_proto_model_proto_rawDescOnce.Do(func() {
		file_proto_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_model_proto_rawDescData)
	})
	return file_proto_model_proto_rawDescData
}

var file_proto_model_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_model_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_model_proto_goTypes = []interface{}{
	(OpAudit_Type)(0),               // 0: model.OpAudit.Type
	(OpAudit_State)(0),              // 1: model.OpAudit.State
	(*EmptyStruct)(nil),             // 2: model.EmptyStruct
	(*SpaceInfo)(nil),               // 3: model.SpaceInfo
	(*StreamFlowInfo)(nil),          // 4: model.StreamFlowInfo
	(*StreamFlowNode)(nil),          // 5: model.StreamFlowNode
	(*StreamFlowEnv)(nil),           // 6: model.StreamFlowEnv
	(*StreamFlowSchedule)(nil),      // 7: model.StreamFlowSchedule
	(*StreamFlowMeta)(nil),          // 8: model.StreamFlowMeta
	(*StreamFlowReleaseInfo)(nil),   // 9: model.StreamFlowReleaseInfo
	(*StreamFlowInstInfo)(nil),      // 10: model.StreamFlowInstInfo
	(*OpAudit)(nil),                 // 11: model.OpAudit
	(*RoleInfo)(nil),                // 12: model.RoleInfo
	(*MemberInfo)(nil),              // 13: model.MemberInfo
	(*MonitorRuleInfo)(nil),         // 14: model.MonitorRuleInfo
	(*QueueMessage)(nil),            // 15: model.QueueMessage
	(*InstanceStatusStat)(nil),      // 16: model.InstanceStatusStat
	(*InstanceRuntimeRankInfo)(nil), // 17: model.InstanceRuntimeRankInfo
	(*InstanceErrorRankInfo)(nil),   // 18: model.InstanceErrorRankInfo
	(*DispatchTaskCountInfo)(nil),   // 19: model.DispatchTaskCountInfo
	(*InstanceTaskExecStat)(nil),    // 20: model.InstanceTaskExecStat
}
var file_proto_model_proto_depIdxs = []int32{
	4, // 0: model.StreamFlowMeta.flow:type_name -> model.StreamFlowInfo
	5, // 1: model.StreamFlowMeta.node:type_name -> model.StreamFlowNode
	6, // 2: model.StreamFlowMeta.env:type_name -> model.StreamFlowEnv
	7, // 3: model.StreamFlowMeta.schedule:type_name -> model.StreamFlowSchedule
	0, // 4: model.OpAudit.type:type_name -> model.OpAudit.Type
	1, // 5: model.OpAudit.state:type_name -> model.OpAudit.State
	8, // 6: model.QueueMessage.meta:type_name -> model.StreamFlowMeta
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_model_proto_init() }
func file_proto_model_proto_init() {
	if File_proto_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFlowNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFlowEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFlowSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFlowMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFlowReleaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFlowInstInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpAudit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorRuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceStatusStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceRuntimeRankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceErrorRankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatchTaskCountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceTaskExecStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_model_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_model_proto_goTypes,
		DependencyIndexes: file_proto_model_proto_depIdxs,
		EnumInfos:         file_proto_model_proto_enumTypes,
		MessageInfos:      file_proto_model_proto_msgTypes,
	}.Build()
	File_proto_model_proto = out.File
	file_proto_model_proto_rawDesc = nil
	file_proto_model_proto_goTypes = nil
	file_proto_model_proto_depIdxs = nil
}
