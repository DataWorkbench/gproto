// Code generated by protoc-gen-godefaults. DO NOT EDIT.
// versions:
// 		protoc-gen-godefaults v0.1
// source: proto/quota.proto

package quotapb

import (
	_ "github.com/yu31/proto-go-plugin/pkg/pb/gosqlpb"
)

// Set default value for message quota.Workspace
func (this *Workspace) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message quota.StreamJob
func (this *StreamJob) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message quota.DataSource
func (this *DataSource) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message quota.UDF
func (this *UDF) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message quota.Resource
func (this *Resource) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message quota.FlinkCluster
func (this *FlinkCluster) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message quota.Network
func (this *Network) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message quota.UserQuota
func (this *UserQuota) SetDefaults() {
	if this == nil {
		return
	}
	if this.Workspace != nil {
		if dt, ok := interface{}(this.Workspace).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.StreamJob != nil {
		if dt, ok := interface{}(this.StreamJob).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.DataSource != nil {
		if dt, ok := interface{}(this.DataSource).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Udf != nil {
		if dt, ok := interface{}(this.Udf).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Resource != nil {
		if dt, ok := interface{}(this.Resource).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.FlinkCluster != nil {
		if dt, ok := interface{}(this.FlinkCluster).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Network != nil {
		if dt, ok := interface{}(this.Network).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}
