// Code generated by protoc-gen-govalidator. DO NOT EDIT.
// versions:
// 		protoc-gen-govalidator v0.1
// source: proto/quota.proto

package quotapb

import (
	_ "github.com/yu31/proto-go-plugin/pkg/pb/gosqlpb"
)

// Set default value for message quota.Workspace
func (this *Workspace) Validate() error {
	if this == nil {
		return nil
	}
	return nil
}

// Set default value for message quota.StreamJob
func (this *StreamJob) Validate() error {
	if this == nil {
		return nil
	}
	return nil
}

// Set default value for message quota.DataSource
func (this *DataSource) Validate() error {
	if this == nil {
		return nil
	}
	return nil
}

// Set default value for message quota.UDF
func (this *UDF) Validate() error {
	if this == nil {
		return nil
	}
	return nil
}

// Set default value for message quota.Resource
func (this *Resource) Validate() error {
	if this == nil {
		return nil
	}
	return nil
}

// Set default value for message quota.FlinkCluster
func (this *FlinkCluster) Validate() error {
	if this == nil {
		return nil
	}
	return nil
}

// Set default value for message quota.Network
func (this *Network) Validate() error {
	if this == nil {
		return nil
	}
	return nil
}

func (this *UserQuota) _xxx_xxx_Validator_Validate_workspace() error {
	if dt, ok := interface{}(this.Workspace).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (this *UserQuota) _xxx_xxx_Validator_Validate_stream_job() error {
	if dt, ok := interface{}(this.StreamJob).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (this *UserQuota) _xxx_xxx_Validator_Validate_data_source() error {
	if dt, ok := interface{}(this.DataSource).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (this *UserQuota) _xxx_xxx_Validator_Validate_udf() error {
	if dt, ok := interface{}(this.Udf).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (this *UserQuota) _xxx_xxx_Validator_Validate_resource() error {
	if dt, ok := interface{}(this.Resource).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (this *UserQuota) _xxx_xxx_Validator_Validate_flink_cluster() error {
	if dt, ok := interface{}(this.FlinkCluster).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (this *UserQuota) _xxx_xxx_Validator_Validate_network() error {
	if dt, ok := interface{}(this.Network).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

// Set default value for message quota.UserQuota
func (this *UserQuota) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_workspace(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_stream_job(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_data_source(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_udf(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_resource(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_flink_cluster(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_network(); err != nil {
		return err
	}
	return nil
}
