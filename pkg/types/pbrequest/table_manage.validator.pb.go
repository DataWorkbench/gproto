// Code generated by protoc-gen-govalidator. DO NOT EDIT.
// versions:
// 		protoc-gen-govalidator v0.1
// source: proto/types/request/table_manage.proto

package pbrequest

import (
	pbmodel "github.com/DataWorkbench/gproto/pkg/types/pbmodel"
	_ "github.com/DataWorkbench/gproto/pkg/types/pbmodel/pbflink"
	_ "github.com/yu31/proto-go-plugin/pkg/pb/defaultspb"
	_ "github.com/yu31/proto-go-plugin/pkg/pb/validatorpb"
	protovalidator "github.com/yu31/proto-go-plugin/pkg/protovalidator"
	strconv "strconv"
	strings "strings"
)

func (this *CreateFlinkTable) _xxx_xxx_Validator_Validate_table_id() error {
	if !(len(this.TableId) < 21) {
		return protovalidator.FieldError1("CreateFlinkTable", "the byte length of field 'table_id' must be less than '21'", protovalidator.StringByteLenToString(this.TableId))
	}
	return nil
}

func (this *CreateFlinkTable) _xxx_xxx_Validator_Validate_source_id() error {
	if !(len(this.SourceId) == 20) {
		return protovalidator.FieldError1("CreateFlinkTable", "the byte length of field 'source_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SourceId))
	}
	return nil
}

func (this *CreateFlinkTable) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("CreateFlinkTable", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("CreateFlinkTable", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

func (this *CreateFlinkTable) _xxx_xxx_Validator_Validate_name() error {
	if !(len(this.Name) >= 1) {
		return protovalidator.FieldError1("CreateFlinkTable", "the byte length of field 'name' must be greater than or equal to '1'", protovalidator.StringByteLenToString(this.Name))
	}
	if !(len(this.Name) <= 64) {
		return protovalidator.FieldError1("CreateFlinkTable", "the byte length of field 'name' must be less than or equal to '64'", protovalidator.StringByteLenToString(this.Name))
	}
	return nil
}

func (this *CreateFlinkTable) _xxx_xxx_Validator_Validate_comment() error {
	if !(len(this.Comment) <= 256) {
		return protovalidator.FieldError1("CreateFlinkTable", "the byte length of field 'comment' must be less than or equal to '256'", protovalidator.StringByteLenToString(this.Comment))
	}
	return nil
}

func (this *CreateFlinkTable) _xxx_xxx_Validator_Validate_table_schema() error {
	if dt, ok := interface{}(this.TableSchema).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

var _xxx_xxx_Validator_CreateFlinkTable_InEnums_TableKind = map[pbmodel.FlinkTable_Kind]bool{0: true, 1: true, 2: true, 3: true}

func (this *CreateFlinkTable) _xxx_xxx_Validator_Validate_table_kind() error {
	if !(this.TableKind > 0) {
		return protovalidator.FieldError1("CreateFlinkTable", "the value of field 'table_kind' must be greater than '0'", protovalidator.Int32ToString(int32(this.TableKind)))
	}
	if !(_xxx_xxx_Validator_CreateFlinkTable_InEnums_TableKind[this.TableKind]) {
		return protovalidator.FieldError1("CreateFlinkTable", "the value of field 'table_kind' must in enums of '[0 1 2 3]'", protovalidator.Int32ToString(int32(this.TableKind)))
	}
	return nil
}

// Set default value for message request.CreateFlinkTable
func (this *CreateFlinkTable) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_table_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_source_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_name(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_comment(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_table_schema(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_table_kind(); err != nil {
		return err
	}
	return nil
}

func (this *UpdateFlinkTable) _xxx_xxx_Validator_Validate_table_id() error {
	if !(len(this.TableId) < 21) {
		return protovalidator.FieldError1("UpdateFlinkTable", "the byte length of field 'table_id' must be less than '21'", protovalidator.StringByteLenToString(this.TableId))
	}
	return nil
}

func (this *UpdateFlinkTable) _xxx_xxx_Validator_Validate_name() error {
	if !(len(this.Name) >= 1) {
		return protovalidator.FieldError1("UpdateFlinkTable", "the byte length of field 'name' must be greater than or equal to '1'", protovalidator.StringByteLenToString(this.Name))
	}
	if !(len(this.Name) <= 64) {
		return protovalidator.FieldError1("UpdateFlinkTable", "the byte length of field 'name' must be less than or equal to '64'", protovalidator.StringByteLenToString(this.Name))
	}
	return nil
}

func (this *UpdateFlinkTable) _xxx_xxx_Validator_Validate_Comment() error {
	if !(len(this.Comment) > 1) {
		return protovalidator.FieldError1("UpdateFlinkTable", "the byte length of field 'Comment' must be greater than '1'", protovalidator.StringByteLenToString(this.Comment))
	}
	if !(len(this.Comment) <= 256) {
		return protovalidator.FieldError1("UpdateFlinkTable", "the byte length of field 'Comment' must be less than or equal to '256'", protovalidator.StringByteLenToString(this.Comment))
	}
	return nil
}

func (this *UpdateFlinkTable) _xxx_xxx_Validator_Validate_table_schema() error {
	if dt, ok := interface{}(this.TableSchema).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

var _xxx_xxx_Validator_UpdateFlinkTable_InEnums_TableKind = map[pbmodel.FlinkTable_Kind]bool{0: true, 1: true, 2: true, 3: true}

func (this *UpdateFlinkTable) _xxx_xxx_Validator_Validate_table_kind() error {
	if !(this.TableKind > 0) {
		return protovalidator.FieldError1("UpdateFlinkTable", "the value of field 'table_kind' must be greater than '0'", protovalidator.Int32ToString(int32(this.TableKind)))
	}
	if !(_xxx_xxx_Validator_UpdateFlinkTable_InEnums_TableKind[this.TableKind]) {
		return protovalidator.FieldError1("UpdateFlinkTable", "the value of field 'table_kind' must in enums of '[0 1 2 3]'", protovalidator.Int32ToString(int32(this.TableKind)))
	}
	return nil
}

// Set default value for message request.UpdateFlinkTable
func (this *UpdateFlinkTable) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_table_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_name(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_Comment(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_table_schema(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_table_kind(); err != nil {
		return err
	}
	return nil
}

func (this *DeleteFlinkTables) _xxx_xxx_Validator_Validate_table_ids() error {
	if !(len(this.TableIds) >= 1) {
		return protovalidator.FieldError1("DeleteFlinkTables", "the length of field 'table_ids' must be greater than or equal to '1'", strconv.Itoa(len(this.TableIds)))
	}
	if !(len(this.TableIds) <= 1100) {
		return protovalidator.FieldError1("DeleteFlinkTables", "the length of field 'table_ids' must be less than or equal to '1100'", strconv.Itoa(len(this.TableIds)))
	}
	return nil
}

// Set default value for message request.DeleteFlinkTables
func (this *DeleteFlinkTables) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_table_ids(); err != nil {
		return err
	}
	return nil
}

func (this *DescribeFlinkTable) _xxx_xxx_Validator_Validate_table_id() error {
	if !(len(this.TableId) == 20) {
		return protovalidator.FieldError1("DescribeFlinkTable", "the byte length of field 'table_id' must be equal to '20'", protovalidator.StringByteLenToString(this.TableId))
	}
	return nil
}

// Set default value for message request.DescribeFlinkTable
func (this *DescribeFlinkTable) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_table_id(); err != nil {
		return err
	}
	return nil
}

func (this *ListFlinkTables) _xxx_xxx_Validator_Validate_limit() error {
	if !(this.Limit > 0) {
		return protovalidator.FieldError1("ListFlinkTables", "the value of field 'limit' must be greater than '0'", protovalidator.Int32ToString(this.Limit))
	}
	if !(this.Limit <= 100) {
		return protovalidator.FieldError1("ListFlinkTables", "the value of field 'limit' must be less than or equal to '100'", protovalidator.Int32ToString(this.Limit))
	}
	return nil
}

func (this *ListFlinkTables) _xxx_xxx_Validator_Validate_offset() error {
	if !(this.Offset >= 0) {
		return protovalidator.FieldError1("ListFlinkTables", "the value of field 'offset' must be greater than or equal to '0'", protovalidator.Int32ToString(this.Offset))
	}
	return nil
}

var _xxx_xxx_Validator_ListFlinkTables_In_SortBy = map[string]bool{"": true, "table_id": true, "name": true, "created": true, "updated": true}

func (this *ListFlinkTables) _xxx_xxx_Validator_Validate_sort_by() error {
	if !(_xxx_xxx_Validator_ListFlinkTables_In_SortBy[this.SortBy]) {
		return protovalidator.FieldError1("ListFlinkTables", "the value of field 'sort_by' must be one of '[ table_id name created updated]'", this.SortBy)
	}
	return nil
}

func (this *ListFlinkTables) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("ListFlinkTables", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("ListFlinkTables", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

var _xxx_xxx_Validator_ListFlinkTables_InEnums_TableKind = map[pbmodel.FlinkTable_Kind]bool{0: true, 1: true, 2: true, 3: true}

func (this *ListFlinkTables) _xxx_xxx_Validator_Validate_table_kind() error {
	if !(_xxx_xxx_Validator_ListFlinkTables_InEnums_TableKind[this.TableKind]) {
		return protovalidator.FieldError1("ListFlinkTables", "the value of field 'table_kind' must in enums of '[0 1 2 3]'", protovalidator.Int32ToString(int32(this.TableKind)))
	}
	return nil
}

// Set default value for message request.ListFlinkTables
func (this *ListFlinkTables) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_limit(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_offset(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_sort_by(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_table_kind(); err != nil {
		return err
	}
	return nil
}
