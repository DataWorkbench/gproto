// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: proto/response.proto

package response

import (
	model "github.com/DataWorkbench/gproto/pkg/model"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ListWorkspaces used as reply parameters in RPC or response body in HTTP.
type ListWorkspaces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.Workspace `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool               `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64              `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListWorkspaces) Reset() {
	*x = ListWorkspaces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkspaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkspaces) ProtoMessage() {}

func (x *ListWorkspaces) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkspaces.ProtoReflect.Descriptor instead.
func (*ListWorkspaces) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{0}
}

func (x *ListWorkspaces) GetInfos() []*model.Workspace {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListWorkspaces) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListWorkspaces) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ListAudits used as reply parameters in RPC or response body in HTTP.
type ListAudits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.OpAudit `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool             `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
}

func (x *ListAudits) Reset() {
	*x = ListAudits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAudits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAudits) ProtoMessage() {}

func (x *ListAudits) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAudits.ProtoReflect.Descriptor instead.
func (*ListAudits) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{1}
}

func (x *ListAudits) GetInfos() []*model.OpAudit {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListAudits) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// CreateWorkspace used as reply parameters in RPC or response body in HTTP.
type CreateWorkspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The workspace id that generated by system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateWorkspace) Reset() {
	*x = CreateWorkspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkspace) ProtoMessage() {}

func (x *CreateWorkspace) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkspace.ProtoReflect.Descriptor instead.
func (*CreateWorkspace) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWorkspace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DescribeWorkspace used as reply parameters in RPC, And model.Workspace used as response body in HTTP.
type DescribeWorkspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.Workspace `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *DescribeWorkspace) Reset() {
	*x = DescribeWorkspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeWorkspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeWorkspace) ProtoMessage() {}

func (x *DescribeWorkspace) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeWorkspace.ProtoReflect.Descriptor instead.
func (*DescribeWorkspace) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeWorkspace) GetInfo() *model.Workspace {
	if x != nil {
		return x.Info
	}
	return nil
}

// ListSystemRoles used as reply parameters in RPC or response body in HTTP.
type ListMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.Member `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool            `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64           `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListMembers) Reset() {
	*x = ListMembers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMembers) ProtoMessage() {}

func (x *ListMembers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMembers.ProtoReflect.Descriptor instead.
func (*ListMembers) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{4}
}

func (x *ListMembers) GetInfos() []*model.Member {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListMembers) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListMembers) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ListSystemRoles used as reply parameters in RPC or response body in HTTP.
type ListSystemRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.Role `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool          `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64         `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListSystemRoles) Reset() {
	*x = ListSystemRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemRoles) ProtoMessage() {}

func (x *ListSystemRoles) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemRoles.ProtoReflect.Descriptor instead.
func (*ListSystemRoles) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{5}
}

func (x *ListSystemRoles) GetInfos() []*model.Role {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListSystemRoles) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListSystemRoles) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ListStreamFlows used as reply parameters in RPC or response body in HTTP.
type ListStreamFlows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.StreamFlow `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool                `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64               `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListStreamFlows) Reset() {
	*x = ListStreamFlows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamFlows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamFlows) ProtoMessage() {}

func (x *ListStreamFlows) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamFlows.ProtoReflect.Descriptor instead.
func (*ListStreamFlows) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{6}
}

func (x *ListStreamFlows) GetInfos() []*model.StreamFlow {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListStreamFlows) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListStreamFlows) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CreateStreamFlow used as reply parameters in RPC.
type CreateStreamFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The workflow id that generated by system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateStreamFlow) Reset() {
	*x = CreateStreamFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamFlow) ProtoMessage() {}

func (x *CreateStreamFlow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamFlow.ProtoReflect.Descriptor instead.
func (*CreateStreamFlow) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{7}
}

func (x *CreateStreamFlow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DescribeStreamFlow used as reply parameters in RPC.
type DescribeStreamFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.StreamFlow `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *DescribeStreamFlow) Reset() {
	*x = DescribeStreamFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeStreamFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeStreamFlow) ProtoMessage() {}

func (x *DescribeStreamFlow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeStreamFlow.ProtoReflect.Descriptor instead.
func (*DescribeStreamFlow) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeStreamFlow) GetInfo() *model.StreamFlow {
	if x != nil {
		return x.Info
	}
	return nil
}

// GetStreamFlowNode used as reply parameters in RPC.
type GetStreamFlowNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes string `protobuf:"bytes,1,opt,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *GetStreamFlowNode) Reset() {
	*x = GetStreamFlowNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamFlowNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamFlowNode) ProtoMessage() {}

func (x *GetStreamFlowNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamFlowNode.ProtoReflect.Descriptor instead.
func (*GetStreamFlowNode) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{9}
}

func (x *GetStreamFlowNode) GetNodes() string {
	if x != nil {
		return x.Nodes
	}
	return ""
}

// GetStreamFlowEnv used as reply parameters in RPC.
type GetStreamFlowEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.StreamFlowEnv `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetStreamFlowEnv) Reset() {
	*x = GetStreamFlowEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamFlowEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamFlowEnv) ProtoMessage() {}

func (x *GetStreamFlowEnv) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamFlowEnv.ProtoReflect.Descriptor instead.
func (*GetStreamFlowEnv) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{10}
}

func (x *GetStreamFlowEnv) GetInfo() *model.StreamFlowEnv {
	if x != nil {
		return x.Info
	}
	return nil
}

// GetStreamFlowSchedule used as reply parameters in RPC.
type GetStreamFlowSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.StreamFlowSchedule `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetStreamFlowSchedule) Reset() {
	*x = GetStreamFlowSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamFlowSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamFlowSchedule) ProtoMessage() {}

func (x *GetStreamFlowSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamFlowSchedule.ProtoReflect.Descriptor instead.
func (*GetStreamFlowSchedule) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{11}
}

func (x *GetStreamFlowSchedule) GetInfo() *model.StreamFlowSchedule {
	if x != nil {
		return x.Info
	}
	return nil
}

// ListReleaseStreamFlows used as reply parameters in RPC or response body in HTTP.
type ListReleaseStreamFlows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.StreamFlowRelease `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool                       `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64                      `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListReleaseStreamFlows) Reset() {
	*x = ListReleaseStreamFlows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleaseStreamFlows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleaseStreamFlows) ProtoMessage() {}

func (x *ListReleaseStreamFlows) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleaseStreamFlows.ProtoReflect.Descriptor instead.
func (*ListReleaseStreamFlows) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{12}
}

func (x *ListReleaseStreamFlows) GetInfos() []*model.StreamFlowRelease {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListReleaseStreamFlows) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListReleaseStreamFlows) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ListStreamFlowVersions used as reply parameters in RPC or response body in HTTP.
type ListStreamFlowVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.StreamFlow `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool                `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
}

func (x *ListStreamFlowVersions) Reset() {
	*x = ListStreamFlowVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamFlowVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamFlowVersions) ProtoMessage() {}

func (x *ListStreamFlowVersions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamFlowVersions.ProtoReflect.Descriptor instead.
func (*ListStreamFlowVersions) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{13}
}

func (x *ListStreamFlowVersions) GetInfos() []*model.StreamFlow {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListStreamFlowVersions) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// ListMonitorRules used as reply parameters in RPC or response body in HTTP.
type ListMonitorRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.MonitorRule `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool                 `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64                `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListMonitorRules) Reset() {
	*x = ListMonitorRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitorRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorRules) ProtoMessage() {}

func (x *ListMonitorRules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorRules.ProtoReflect.Descriptor instead.
func (*ListMonitorRules) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{14}
}

func (x *ListMonitorRules) GetInfos() []*model.MonitorRule {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListMonitorRules) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListMonitorRules) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// DescribeMonitorRule used as reply parameters in RPC.
type DescribeMonitorRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.MonitorRule `protobuf:"bytes,1,opt,name=info,proto3" json:"info"`
}

func (x *DescribeMonitorRule) Reset() {
	*x = DescribeMonitorRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeMonitorRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMonitorRule) ProtoMessage() {}

func (x *DescribeMonitorRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMonitorRule.ProtoReflect.Descriptor instead.
func (*DescribeMonitorRule) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeMonitorRule) GetInfo() *model.MonitorRule {
	if x != nil {
		return x.Info
	}
	return nil
}

// ListWorkspaces used as a request parameters for RPC and HTTP(based on URL-Query).
// This struct can used for ListStreamTestInst and ListStreamCycleInst
type ListStreamInsts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.StreamFlowInst `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool                    `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
}

func (x *ListStreamInsts) Reset() {
	*x = ListStreamInsts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamInsts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamInsts) ProtoMessage() {}

func (x *ListStreamInsts) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamInsts.ProtoReflect.Descriptor instead.
func (*ListStreamInsts) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{16}
}

func (x *ListStreamInsts) GetInfos() []*model.StreamFlowInst {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListStreamInsts) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// DescribeSource used as reply parameters in RPC or response body in HTTP.
type DescribeSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this source info
	Info *model.SourceInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info"`
	// Connected statue, one of successful/failed.
	Connected string `protobuf:"bytes,2,opt,name=Connected,proto3" json:"connected" binding:"gte=1,lte=16" required:"true" minLength:"1" maxLength:"16"`
}

func (x *DescribeSource) Reset() {
	*x = DescribeSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSource) ProtoMessage() {}

func (x *DescribeSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSource.ProtoReflect.Descriptor instead.
func (*DescribeSource) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{17}
}

func (x *DescribeSource) GetInfo() *model.SourceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *DescribeSource) GetConnected() string {
	if x != nil {
		return x.Connected
	}
	return ""
}

// ListSource used as reply parameters in RPC or response body in HTTP.
type ListSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DescribeSource `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	Total int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *ListSource) Reset() {
	*x = ListSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSource) ProtoMessage() {}

func (x *ListSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSource.ProtoReflect.Descriptor instead.
func (*ListSource) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{18}
}

func (x *ListSource) GetInfos() []*DescribeSource {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListSource) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// SourceKind used as reply parameters in RPC or response body in HTTP.
type SourceKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kinds []*SourceKind_Kind `protobuf:"bytes,1,rep,name=Kinds,proto3" json:"kinds" required:"true" minLength:"0" maxLength:"10485760"`
}

func (x *SourceKind) Reset() {
	*x = SourceKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceKind) ProtoMessage() {}

func (x *SourceKind) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceKind.ProtoReflect.Descriptor instead.
func (*SourceKind) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{19}
}

func (x *SourceKind) GetKinds() []*SourceKind_Kind {
	if x != nil {
		return x.Kinds
	}
	return nil
}

// JsonStringList used as reply parameters in RPC or response body in HTTP.
type JsonList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonList []string `protobuf:"bytes,1,rep,name=JsonList,proto3" json:"jsonlist" required:"true" minLength:"0" maxLength:"10485760"`
}

func (x *JsonList) Reset() {
	*x = JsonList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonList) ProtoMessage() {}

func (x *JsonList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonList.ProtoReflect.Descriptor instead.
func (*JsonList) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{20}
}

func (x *JsonList) GetJsonList() []string {
	if x != nil {
		return x.JsonList
	}
	return nil
}

// TableColumns used as reply parameters in RPC or response body in HTTP.
type TableColumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// columns
	Columns []*TableColumns_Column `protobuf:"bytes,1,rep,name=Columns,proto3" json:"columns" minLength:"0" maxLength:"100000"`
}

func (x *TableColumns) Reset() {
	*x = TableColumns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableColumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableColumns) ProtoMessage() {}

func (x *TableColumns) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableColumns.ProtoReflect.Descriptor instead.
func (*TableColumns) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{21}
}

func (x *TableColumns) GetColumns() []*TableColumns_Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

// DescribeTable used as reply parameters in RPC or response body in HTTP.
type DescribeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this source info
	Info *model.TableInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info"`
}

func (x *DescribeTable) Reset() {
	*x = DescribeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTable) ProtoMessage() {}

func (x *DescribeTable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTable.ProtoReflect.Descriptor instead.
func (*DescribeTable) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{22}
}

func (x *DescribeTable) GetInfo() *model.TableInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this source info
	Infos []*model.TableInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"info"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *ListTable) Reset() {
	*x = ListTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTable) ProtoMessage() {}

func (x *ListTable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTable.ProtoReflect.Descriptor instead.
func (*ListTable) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{23}
}

func (x *ListTable) GetInfos() []*model.TableInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListTable) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SourceKind_Kind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this kind name
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"`
	// this source image
	Image string `protobuf:"bytes,2,opt,name=Image,proto3" json:"image" binding:"gte=1,lte=10485760" required:"true" minLength:"1" maxLength:"10485760"`
	// comment
	Desc string `protobuf:"bytes,3,opt,name=Desc,proto3" json:"desc" binding:"gte=1,lte=512" required:"true" minLength:"1" maxLength:"512"`
}

func (x *SourceKind_Kind) Reset() {
	*x = SourceKind_Kind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceKind_Kind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceKind_Kind) ProtoMessage() {}

func (x *SourceKind_Kind) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceKind_Kind.ProtoReflect.Descriptor instead.
func (*SourceKind_Kind) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{19, 0}
}

func (x *SourceKind_Kind) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SourceKind_Kind) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SourceKind_Kind) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type TableColumns_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// column name
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" gorm:"column:name;" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"`
	// column type
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"type" gorm:"column:type;" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"`
	// type length
	Length string `protobuf:"bytes,3,opt,name=Length,proto3" json:"length" gorm:"column:length;" required:"true" binding:"gte=0,lte=64" minLength:"0" maxLength:"64"`
	// primary key, one of true/false
	IsPrkey string `protobuf:"bytes,4,opt,name=IsPrkey,proto3" json:"isprkey" gorm:"column:isprkey;" binding:"gte=0,lte=8" required:"true" minLength:"0" maxLength:"8"`
}

func (x *TableColumns_Column) Reset() {
	*x = TableColumns_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableColumns_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableColumns_Column) ProtoMessage() {}

func (x *TableColumns_Column) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableColumns_Column.ProtoReflect.Descriptor instead.
func (*TableColumns_Column) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{21, 0}
}

func (x *TableColumns_Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableColumns_Column) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TableColumns_Column) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

func (x *TableColumns_Column) GetIsPrkey() string {
	if x != nil {
		return x.IsPrkey
	}
	return ""
}

var File_proto_response_proto protoreflect.FileDescriptor

var file_proto_response_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69,
	0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x59, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x73,
	0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x42,
	0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04,
	0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x2a, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf,
	0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x75, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04,
	0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x77, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x7f, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20,
	0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f,
	0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2b, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3b, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x6e, 0x76, 0x12, 0x28,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x45,
	0x6e, 0x76, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c,
	0x6f, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x8d, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x00, 0x52, 0x05, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x6a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c,
	0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x20, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2,
	0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x7f, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x45, 0x0a,
	0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x42, 0x04, 0xe2,
	0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61,
	0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf,
	0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x65, 0x0a, 0x0e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04,
	0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xe2,
	0xdf, 0x1f, 0x04, 0x70, 0x00, 0x78, 0x11, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x22, 0x5e, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x34, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52,
	0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xbb, 0x01, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x45, 0x0a, 0x05, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x42, 0x14, 0xe2, 0xdf, 0x1f,
	0x10, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x78, 0x81, 0x80, 0x80,
	0x05, 0x52, 0x05, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x1a, 0x66, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x1c, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xe2, 0xdf, 0x1f, 0x04, 0x70, 0x01, 0x78, 0x41, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2,
	0xdf, 0x1f, 0x07, 0x70, 0x01, 0x78, 0x81, 0x80, 0x80, 0x05, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x70, 0x01, 0x78, 0x81, 0x04, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63,
	0x22, 0x3c, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x08,
	0x4a, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x14,
	0xe2, 0xdf, 0x1f, 0x10, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x78,
	0x81, 0x80, 0x80, 0x05, 0x52, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe5,
	0x01, 0x0a, 0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12,
	0x41, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42,
	0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x78, 0xa1, 0x8d, 0x06, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1c, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xe2, 0xdf, 0x1f,
	0x04, 0x70, 0x01, 0x78, 0x41, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x70,
	0x01, 0x78, 0x41, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xe2, 0xdf, 0x1f, 0x0d, 0x70,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x78, 0x41, 0x52, 0x06, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x07, 0x49, 0x73, 0x50, 0x72, 0x6b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x08, 0x52, 0x07, 0x49,
	0x73, 0x50, 0x72, 0x6b, 0x65, 0x79, 0x22, 0x3b, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1a,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2,
	0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72,
	0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_response_proto_rawDescOnce sync.Once
	file_proto_response_proto_rawDescData = file_proto_response_proto_rawDesc
)

func file_proto_response_proto_rawDescGZIP() []byte {
	file_proto_response_proto_rawDescOnce.Do(func() {
		file_proto_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_response_proto_rawDescData)
	})
	return file_proto_response_proto_rawDescData
}

var file_proto_response_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_proto_response_proto_goTypes = []interface{}{
	(*ListWorkspaces)(nil),           // 0: response.ListWorkspaces
	(*ListAudits)(nil),               // 1: response.ListAudits
	(*CreateWorkspace)(nil),          // 2: response.CreateWorkspace
	(*DescribeWorkspace)(nil),        // 3: response.DescribeWorkspace
	(*ListMembers)(nil),              // 4: response.ListMembers
	(*ListSystemRoles)(nil),          // 5: response.ListSystemRoles
	(*ListStreamFlows)(nil),          // 6: response.ListStreamFlows
	(*CreateStreamFlow)(nil),         // 7: response.CreateStreamFlow
	(*DescribeStreamFlow)(nil),       // 8: response.DescribeStreamFlow
	(*GetStreamFlowNode)(nil),        // 9: response.GetStreamFlowNode
	(*GetStreamFlowEnv)(nil),         // 10: response.GetStreamFlowEnv
	(*GetStreamFlowSchedule)(nil),    // 11: response.GetStreamFlowSchedule
	(*ListReleaseStreamFlows)(nil),   // 12: response.ListReleaseStreamFlows
	(*ListStreamFlowVersions)(nil),   // 13: response.ListStreamFlowVersions
	(*ListMonitorRules)(nil),         // 14: response.ListMonitorRules
	(*DescribeMonitorRule)(nil),      // 15: response.DescribeMonitorRule
	(*ListStreamInsts)(nil),          // 16: response.ListStreamInsts
	(*DescribeSource)(nil),           // 17: response.DescribeSource
	(*ListSource)(nil),               // 18: response.ListSource
	(*SourceKind)(nil),               // 19: response.SourceKind
	(*JsonList)(nil),                 // 20: response.JsonList
	(*TableColumns)(nil),             // 21: response.TableColumns
	(*DescribeTable)(nil),            // 22: response.DescribeTable
	(*ListTable)(nil),                // 23: response.ListTable
	(*SourceKind_Kind)(nil),          // 24: response.SourceKind.Kind
	(*TableColumns_Column)(nil),      // 25: response.TableColumns.Column
	(*model.Workspace)(nil),          // 26: model.Workspace
	(*model.OpAudit)(nil),            // 27: model.OpAudit
	(*model.Member)(nil),             // 28: model.Member
	(*model.Role)(nil),               // 29: model.Role
	(*model.StreamFlow)(nil),         // 30: model.StreamFlow
	(*model.StreamFlowEnv)(nil),      // 31: model.StreamFlowEnv
	(*model.StreamFlowSchedule)(nil), // 32: model.StreamFlowSchedule
	(*model.StreamFlowRelease)(nil),  // 33: model.StreamFlowRelease
	(*model.MonitorRule)(nil),        // 34: model.MonitorRule
	(*model.StreamFlowInst)(nil),     // 35: model.StreamFlowInst
	(*model.SourceInfo)(nil),         // 36: model.SourceInfo
	(*model.TableInfo)(nil),          // 37: model.TableInfo
}
var file_proto_response_proto_depIdxs = []int32{
	26, // 0: response.ListWorkspaces.infos:type_name -> model.Workspace
	27, // 1: response.ListAudits.infos:type_name -> model.OpAudit
	26, // 2: response.DescribeWorkspace.info:type_name -> model.Workspace
	28, // 3: response.ListMembers.infos:type_name -> model.Member
	29, // 4: response.ListSystemRoles.infos:type_name -> model.Role
	30, // 5: response.ListStreamFlows.infos:type_name -> model.StreamFlow
	30, // 6: response.DescribeStreamFlow.info:type_name -> model.StreamFlow
	31, // 7: response.GetStreamFlowEnv.info:type_name -> model.StreamFlowEnv
	32, // 8: response.GetStreamFlowSchedule.info:type_name -> model.StreamFlowSchedule
	33, // 9: response.ListReleaseStreamFlows.infos:type_name -> model.StreamFlowRelease
	30, // 10: response.ListStreamFlowVersions.infos:type_name -> model.StreamFlow
	34, // 11: response.ListMonitorRules.infos:type_name -> model.MonitorRule
	34, // 12: response.DescribeMonitorRule.info:type_name -> model.MonitorRule
	35, // 13: response.ListStreamInsts.infos:type_name -> model.StreamFlowInst
	36, // 14: response.DescribeSource.info:type_name -> model.SourceInfo
	17, // 15: response.ListSource.infos:type_name -> response.DescribeSource
	24, // 16: response.SourceKind.Kinds:type_name -> response.SourceKind.Kind
	25, // 17: response.TableColumns.Columns:type_name -> response.TableColumns.Column
	37, // 18: response.DescribeTable.info:type_name -> model.TableInfo
	37, // 19: response.ListTable.infos:type_name -> model.TableInfo
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_response_proto_init() }
func file_proto_response_proto_init() {
	if File_proto_response_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_response_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkspaces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAudits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeWorkspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMembers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamFlows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeStreamFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamFlowNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamFlowEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamFlowSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleaseStreamFlows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamFlowVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitorRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeMonitorRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamInsts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableColumns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceKind_Kind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableColumns_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_response_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_response_proto_goTypes,
		DependencyIndexes: file_proto_response_proto_depIdxs,
		MessageInfos:      file_proto_response_proto_msgTypes,
	}.Build()
	File_proto_response_proto = out.File
	file_proto_response_proto_rawDesc = nil
	file_proto_response_proto_goTypes = nil
	file_proto_response_proto_depIdxs = nil
}
