// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: proto/response.proto

package response

import (
	model "github.com/DataWorkbench/gproto/pkg/model"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ListWorkspaces used as reply parameters in RPC or response body in HTTP.
type ListWorkspaces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.Workspace `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool               `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64              `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListWorkspaces) Reset() {
	*x = ListWorkspaces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkspaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkspaces) ProtoMessage() {}

func (x *ListWorkspaces) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkspaces.ProtoReflect.Descriptor instead.
func (*ListWorkspaces) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{0}
}

func (x *ListWorkspaces) GetInfos() []*model.Workspace {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListWorkspaces) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListWorkspaces) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ListAudits used as reply parameters in RPC or response body in HTTP.
type ListAudits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.Operation `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool               `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
}

func (x *ListAudits) Reset() {
	*x = ListAudits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAudits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAudits) ProtoMessage() {}

func (x *ListAudits) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAudits.ProtoReflect.Descriptor instead.
func (*ListAudits) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{1}
}

func (x *ListAudits) GetInfos() []*model.Operation {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListAudits) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// CreateWorkspace used as reply parameters in RPC or response body in HTTP.
type CreateWorkspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The workspace id that generated by system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateWorkspace) Reset() {
	*x = CreateWorkspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkspace) ProtoMessage() {}

func (x *CreateWorkspace) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkspace.ProtoReflect.Descriptor instead.
func (*CreateWorkspace) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWorkspace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DescribeWorkspace used as reply parameters in RPC, And model.Workspace used as response body in HTTP.
type DescribeWorkspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.Workspace `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *DescribeWorkspace) Reset() {
	*x = DescribeWorkspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeWorkspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeWorkspace) ProtoMessage() {}

func (x *DescribeWorkspace) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeWorkspace.ProtoReflect.Descriptor instead.
func (*DescribeWorkspace) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeWorkspace) GetInfo() *model.Workspace {
	if x != nil {
		return x.Info
	}
	return nil
}

// ListSystemRoles used as reply parameters in RPC or response body in HTTP.
type ListMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.Member `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool            `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64           `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListMembers) Reset() {
	*x = ListMembers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMembers) ProtoMessage() {}

func (x *ListMembers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMembers.ProtoReflect.Descriptor instead.
func (*ListMembers) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{4}
}

func (x *ListMembers) GetInfos() []*model.Member {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListMembers) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListMembers) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ListSystemRoles used as reply parameters in RPC or response body in HTTP.
type ListSystemRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.Role `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool          `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64         `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListSystemRoles) Reset() {
	*x = ListSystemRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemRoles) ProtoMessage() {}

func (x *ListSystemRoles) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemRoles.ProtoReflect.Descriptor instead.
func (*ListSystemRoles) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{5}
}

func (x *ListSystemRoles) GetInfos() []*model.Role {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListSystemRoles) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListSystemRoles) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ListStreamJobs used as reply parameters in RPC or response body in HTTP.
type ListStreamJobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.StreamJob `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool               `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64              `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListStreamJobs) Reset() {
	*x = ListStreamJobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamJobs) ProtoMessage() {}

func (x *ListStreamJobs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamJobs.ProtoReflect.Descriptor instead.
func (*ListStreamJobs) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{6}
}

func (x *ListStreamJobs) GetInfos() []*model.StreamJob {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListStreamJobs) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListStreamJobs) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CreateStreamJob used as reply parameters in RPC.
type CreateStreamJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The stream job id that generated by system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateStreamJob) Reset() {
	*x = CreateStreamJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamJob) ProtoMessage() {}

func (x *CreateStreamJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamJob.ProtoReflect.Descriptor instead.
func (*CreateStreamJob) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{7}
}

func (x *CreateStreamJob) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DescribeStreamJob used as reply parameters in RPC.
type DescribeStreamJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.StreamJob `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *DescribeStreamJob) Reset() {
	*x = DescribeStreamJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeStreamJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeStreamJob) ProtoMessage() {}

func (x *DescribeStreamJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeStreamJob.ProtoReflect.Descriptor instead.
func (*DescribeStreamJob) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeStreamJob) GetInfo() *model.StreamJob {
	if x != nil {
		return x.Info
	}
	return nil
}

// GetStreamJobCode used as reply parameters in RPC.
type GetStreamJobCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code *model.StreamJobCode `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetStreamJobCode) Reset() {
	*x = GetStreamJobCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamJobCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamJobCode) ProtoMessage() {}

func (x *GetStreamJobCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamJobCode.ProtoReflect.Descriptor instead.
func (*GetStreamJobCode) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{9}
}

func (x *GetStreamJobCode) GetCode() *model.StreamJobCode {
	if x != nil {
		return x.Code
	}
	return nil
}

// GetStreamJobArgs used as reply parameters in RPC.
type GetStreamJobArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.StreamJobArgs `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetStreamJobArgs) Reset() {
	*x = GetStreamJobArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamJobArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamJobArgs) ProtoMessage() {}

func (x *GetStreamJobArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamJobArgs.ProtoReflect.Descriptor instead.
func (*GetStreamJobArgs) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{10}
}

func (x *GetStreamJobArgs) GetInfo() *model.StreamJobArgs {
	if x != nil {
		return x.Info
	}
	return nil
}

// GetStreamJobSchedule used as reply parameters in RPC.
type GetStreamJobSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.StreamJobSchedule `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetStreamJobSchedule) Reset() {
	*x = GetStreamJobSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamJobSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamJobSchedule) ProtoMessage() {}

func (x *GetStreamJobSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamJobSchedule.ProtoReflect.Descriptor instead.
func (*GetStreamJobSchedule) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{11}
}

func (x *GetStreamJobSchedule) GetInfo() *model.StreamJobSchedule {
	if x != nil {
		return x.Info
	}
	return nil
}

// ListReleaseStreamJobs used as reply parameters in RPC or response body in HTTP.
type ListReleaseStreamJobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.StreamJobRelease `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool                      `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64                     `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListReleaseStreamJobs) Reset() {
	*x = ListReleaseStreamJobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReleaseStreamJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleaseStreamJobs) ProtoMessage() {}

func (x *ListReleaseStreamJobs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleaseStreamJobs.ProtoReflect.Descriptor instead.
func (*ListReleaseStreamJobs) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{12}
}

func (x *ListReleaseStreamJobs) GetInfos() []*model.StreamJobRelease {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListReleaseStreamJobs) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListReleaseStreamJobs) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ListStreamJobVersions used as reply parameters in RPC or response body in HTTP.
type ListStreamJobVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.StreamJob `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool               `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
}

func (x *ListStreamJobVersions) Reset() {
	*x = ListStreamJobVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamJobVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamJobVersions) ProtoMessage() {}

func (x *ListStreamJobVersions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamJobVersions.ProtoReflect.Descriptor instead.
func (*ListStreamJobVersions) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{13}
}

func (x *ListStreamJobVersions) GetInfos() []*model.StreamJob {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListStreamJobVersions) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// ListMonitorRules used as reply parameters in RPC or response body in HTTP.
type ListMonitorRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.MonitorRule `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool                 `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64                `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListMonitorRules) Reset() {
	*x = ListMonitorRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitorRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorRules) ProtoMessage() {}

func (x *ListMonitorRules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorRules.ProtoReflect.Descriptor instead.
func (*ListMonitorRules) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{14}
}

func (x *ListMonitorRules) GetInfos() []*model.MonitorRule {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListMonitorRules) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListMonitorRules) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// DescribeMonitorRule used as reply parameters in RPC.
type DescribeMonitorRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.MonitorRule `protobuf:"bytes,1,opt,name=info,proto3" json:"info"`
}

func (x *DescribeMonitorRule) Reset() {
	*x = DescribeMonitorRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeMonitorRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMonitorRule) ProtoMessage() {}

func (x *DescribeMonitorRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMonitorRule.ProtoReflect.Descriptor instead.
func (*DescribeMonitorRule) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeMonitorRule) GetInfo() *model.MonitorRule {
	if x != nil {
		return x.Info
	}
	return nil
}

// ListWorkspaces used as a request parameters for RPC and HTTP(based on URL-Query).
// This struct can used for ListStreamTestInst and ListStreamCycleInst
type ListStreamInsts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.StreamJobInst `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool                   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
}

func (x *ListStreamInsts) Reset() {
	*x = ListStreamInsts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamInsts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamInsts) ProtoMessage() {}

func (x *ListStreamInsts) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamInsts.ProtoReflect.Descriptor instead.
func (*ListStreamInsts) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{16}
}

func (x *ListStreamInsts) GetInfos() []*model.StreamJobInst {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListStreamInsts) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// DescribeSource used as reply parameters in RPC or response body in HTTP.
type DescribeSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this source info
	Info *model.DataSource `protobuf:"bytes,1,opt,name=info,proto3" json:"info"`
}

func (x *DescribeSource) Reset() {
	*x = DescribeSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSource) ProtoMessage() {}

func (x *DescribeSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSource.ProtoReflect.Descriptor instead.
func (*DescribeSource) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{17}
}

func (x *DescribeSource) GetInfo() *model.DataSource {
	if x != nil {
		return x.Info
	}
	return nil
}

// ListSource used as reply parameters in RPC or response body in HTTP.
type ListSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*model.DataSource `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	Total int64               `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *ListSource) Reset() {
	*x = ListSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSource) ProtoMessage() {}

func (x *ListSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSource.ProtoReflect.Descriptor instead.
func (*ListSource) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{18}
}

func (x *ListSource) GetInfos() []*model.DataSource {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListSource) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// SourceKind used as reply parameters in RPC or response body in HTTP.
type SourceKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kinds []*SourceKind_Kind `protobuf:"bytes,1,rep,name=Kinds,proto3" json:"kinds" required:"true" minLength:"0" maxLength:"10485760"`
}

func (x *SourceKind) Reset() {
	*x = SourceKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceKind) ProtoMessage() {}

func (x *SourceKind) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceKind.ProtoReflect.Descriptor instead.
func (*SourceKind) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{19}
}

func (x *SourceKind) GetKinds() []*SourceKind_Kind {
	if x != nil {
		return x.Kinds
	}
	return nil
}

// JsonStringList used as reply parameters in RPC or response body in HTTP.
type JsonList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonList []string `protobuf:"bytes,1,rep,name=json_list,json=jsonList,proto3" json:"json_list" required:"true" minLength:"0" maxLength:"10485760"`
}

func (x *JsonList) Reset() {
	*x = JsonList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonList) ProtoMessage() {}

func (x *JsonList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonList.ProtoReflect.Descriptor instead.
func (*JsonList) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{20}
}

func (x *JsonList) GetJsonList() []string {
	if x != nil {
		return x.JsonList
	}
	return nil
}

// TableColumns used as reply parameters in RPC or response body in HTTP.
// FIXME: Move it to datasource.proto ?
type TableColumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// columns
	Columns []*TableColumns_Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns" minLength:"0" maxLength:"100000"`
}

func (x *TableColumns) Reset() {
	*x = TableColumns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableColumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableColumns) ProtoMessage() {}

func (x *TableColumns) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableColumns.ProtoReflect.Descriptor instead.
func (*TableColumns) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{21}
}

func (x *TableColumns) GetColumns() []*TableColumns_Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

// DescribeTable used as reply parameters in RPC or response body in HTTP.
type DescribeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this source info
	Info *model.TableInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info"`
}

func (x *DescribeTable) Reset() {
	*x = DescribeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTable) ProtoMessage() {}

func (x *DescribeTable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTable.ProtoReflect.Descriptor instead.
func (*DescribeTable) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{22}
}

func (x *DescribeTable) GetInfo() *model.TableInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this source info
	Infos []*model.TableInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"info"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *ListTable) Reset() {
	*x = ListTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTable) ProtoMessage() {}

func (x *ListTable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTable.ProtoReflect.Descriptor instead.
func (*ListTable) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{23}
}

func (x *ListTable) GetInfos() []*model.TableInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListTable) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ListResources used as a request parameters for RPC and HTTP(based on URL-Query)
type ListResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.Resource `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool              `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64             `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListResources) Reset() {
	*x = ListResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResources) ProtoMessage() {}

func (x *ListResources) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResources.ProtoReflect.Descriptor instead.
func (*ListResources) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{24}
}

func (x *ListResources) GetInfos() []*model.Resource {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListResources) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListResources) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CreateDir used as reply parameters in RPC.
type CreateDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The workspace id that generated by system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateDir) Reset() {
	*x = CreateDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDir) ProtoMessage() {}

func (x *CreateDir) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDir.ProtoReflect.Descriptor instead.
func (*CreateDir) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{25}
}

func (x *CreateDir) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// UploadFile used as reply parameters in RPC.
type UploadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The workspace id that generated by system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *UploadFile) Reset() {
	*x = UploadFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFile) ProtoMessage() {}

func (x *UploadFile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFile.ProtoReflect.Descriptor instead.
func (*UploadFile) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{26}
}

func (x *UploadFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DownloadFile used as a request parameters for RPC and HTTP(based on URL-Query)
type DownloadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The File data.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"-"`
	Size int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
}

func (x *DownloadFile) Reset() {
	*x = DownloadFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFile) ProtoMessage() {}

func (x *DownloadFile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFile.ProtoReflect.Descriptor instead.
func (*DownloadFile) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{27}
}

func (x *DownloadFile) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DownloadFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DownloadFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ListUDF used as reply parameters in RPC or response body in HTTP.
type ListUDF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*model.UDFInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	Total int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *ListUDF) Reset() {
	*x = ListUDF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUDF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUDF) ProtoMessage() {}

func (x *ListUDF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUDF.ProtoReflect.Descriptor instead.
func (*ListUDF) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{28}
}

func (x *ListUDF) GetInfos() []*model.UDFInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListUDF) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// DescribeUDF used as reply parameters in RPC or response body in HTTP.
type DescribeUDF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UDF info
	Info *model.UDFInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"infos"`
}

func (x *DescribeUDF) Reset() {
	*x = DescribeUDF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUDF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUDF) ProtoMessage() {}

func (x *DescribeUDF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUDF.ProtoReflect.Descriptor instead.
func (*DescribeUDF) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{29}
}

func (x *DescribeUDF) GetInfo() *model.UDFInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// JobState
type JobState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// job state, model.StreamJobInst_State
	State model.StreamJobInst_State `protobuf:"varint,1,opt,name=State,proto3,enum=model.StreamJobInst_State" json:"state"`
	// job Message
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`
}

func (x *JobState) Reset() {
	*x = JobState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobState) ProtoMessage() {}

func (x *JobState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobState.ProtoReflect.Descriptor instead.
func (*JobState) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{30}
}

func (x *JobState) GetState() model.StreamJobInst_State {
	if x != nil {
		return x.State
	}
	return model.StreamJobInst__
}

func (x *JobState) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// NodeRelations
type NodeRelations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// node relations
	Relations string `protobuf:"bytes,1,opt,name=Relations,proto3" json:"relations" binding:"gte=1,lte=20001" required:"true" minLength:"1" maxLength:"20001"`
}

func (x *NodeRelations) Reset() {
	*x = NodeRelations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeRelations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRelations) ProtoMessage() {}

func (x *NodeRelations) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRelations.ProtoReflect.Descriptor instead.
func (*NodeRelations) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{31}
}

func (x *NodeRelations) GetRelations() string {
	if x != nil {
		return x.Relations
	}
	return ""
}

// JobParser
type JobParser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ZeppelinConf
	ZeppelinConf string `protobuf:"bytes,1,opt,name=ZeppelinConf,proto3" json:"conf" binding:"gte=0,lte=40001" required:"true" minLength:"0" maxLength:"40001"`
	// ZeppelinDepends
	ZeppelinDepends string `protobuf:"bytes,2,opt,name=ZeppelinDepends,proto3" json:"depends" binding:"gte=0,lte=40001" required:"true" minLength:"0" maxLength:"40001"`
	// ZeppelinScalaUDF
	ZeppelinScalaUDF string `protobuf:"bytes,3,opt,name=ZeppelinScalaUDF,proto3" json:"scalaudf" binding:"gte=0,lte=40001" required:"true" minLength:"0" maxLength:"40001"`
	// ZeppelinPythonUDF
	ZeppelinPythonUDF string `protobuf:"bytes,4,opt,name=ZeppelinPythonUDF,proto3" json:"pythonudf" binding:"gte=0,lte=40001" required:"true" minLength:"0" maxLength:"40001"`
	// ZeppelinMainRun
	ZeppelinMainRun string `protobuf:"bytes,5,opt,name=ZeppelinMainRun,proto3" json:"mainrun" binding:"gte=0,lte=40001" required:"true" minLength:"0" maxLength:"40001"`
	// JobResources
	Resources *model.JobResources `protobuf:"bytes,6,opt,name=Resources,proto3" json:"resources" binding:"-"`
}

func (x *JobParser) Reset() {
	*x = JobParser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobParser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobParser) ProtoMessage() {}

func (x *JobParser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobParser.ProtoReflect.Descriptor instead.
func (*JobParser) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{32}
}

func (x *JobParser) GetZeppelinConf() string {
	if x != nil {
		return x.ZeppelinConf
	}
	return ""
}

func (x *JobParser) GetZeppelinDepends() string {
	if x != nil {
		return x.ZeppelinDepends
	}
	return ""
}

func (x *JobParser) GetZeppelinScalaUDF() string {
	if x != nil {
		return x.ZeppelinScalaUDF
	}
	return ""
}

func (x *JobParser) GetZeppelinPythonUDF() string {
	if x != nil {
		return x.ZeppelinPythonUDF
	}
	return ""
}

func (x *JobParser) GetZeppelinMainRun() string {
	if x != nil {
		return x.ZeppelinMainRun
	}
	return ""
}

func (x *JobParser) GetResources() *model.JobResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

// JobFree
type JobFree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// delete jar.
	ZeppelinDeleteJar string `protobuf:"bytes,1,opt,name=ZeppelinDeleteJar,proto3" json:"zeppelindeletejar" binding:"gte=1,lte=20001" required:"true" minLength:"1" maxLength:"20001"`
}

func (x *JobFree) Reset() {
	*x = JobFree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobFree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobFree) ProtoMessage() {}

func (x *JobFree) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobFree.ProtoReflect.Descriptor instead.
func (*JobFree) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{33}
}

func (x *JobFree) GetZeppelinDeleteJar() string {
	if x != nil {
		return x.ZeppelinDeleteJar
	}
	return ""
}

type PTasksStatusStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*model.InstanceStatusStat `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
}

func (x *PTasksStatusStat) Reset() {
	*x = PTasksStatusStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTasksStatusStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTasksStatusStat) ProtoMessage() {}

func (x *PTasksStatusStat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTasksStatusStat.ProtoReflect.Descriptor instead.
func (*PTasksStatusStat) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{34}
}

func (x *PTasksStatusStat) GetInfos() []*model.InstanceStatusStat {
	if x != nil {
		return x.Infos
	}
	return nil
}

type PTasksExecStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Today     []*model.InstanceTaskExecStat `protobuf:"bytes,1,rep,name=today,proto3" json:"today"`
	Yesterday []*model.InstanceTaskExecStat `protobuf:"bytes,2,rep,name=yesterday,proto3" json:"yesterday"`
	History   []*model.InstanceTaskExecStat `protobuf:"bytes,3,rep,name=history,proto3" json:"history"`
}

func (x *PTasksExecStat) Reset() {
	*x = PTasksExecStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTasksExecStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTasksExecStat) ProtoMessage() {}

func (x *PTasksExecStat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTasksExecStat.ProtoReflect.Descriptor instead.
func (*PTasksExecStat) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{35}
}

func (x *PTasksExecStat) GetToday() []*model.InstanceTaskExecStat {
	if x != nil {
		return x.Today
	}
	return nil
}

func (x *PTasksExecStat) GetYesterday() []*model.InstanceTaskExecStat {
	if x != nil {
		return x.Yesterday
	}
	return nil
}

func (x *PTasksExecStat) GetHistory() []*model.InstanceTaskExecStat {
	if x != nil {
		return x.History
	}
	return nil
}

type PTaskRuntimeRanking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*model.InstanceRuntimeRankInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	Total int64                            `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *PTaskRuntimeRanking) Reset() {
	*x = PTaskRuntimeRanking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTaskRuntimeRanking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTaskRuntimeRanking) ProtoMessage() {}

func (x *PTaskRuntimeRanking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTaskRuntimeRanking.ProtoReflect.Descriptor instead.
func (*PTaskRuntimeRanking) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{36}
}

func (x *PTaskRuntimeRanking) GetInfos() []*model.InstanceRuntimeRankInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *PTaskRuntimeRanking) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PTaskErrorRanking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*model.InstanceErrorRankInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	Total int64                          `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *PTaskErrorRanking) Reset() {
	*x = PTaskErrorRanking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTaskErrorRanking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTaskErrorRanking) ProtoMessage() {}

func (x *PTaskErrorRanking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTaskErrorRanking.ProtoReflect.Descriptor instead.
func (*PTaskErrorRanking) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{37}
}

func (x *PTaskErrorRanking) GetInfos() []*model.InstanceErrorRankInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *PTaskErrorRanking) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PTaskDispatchCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*model.DispatchTaskCountInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
}

func (x *PTaskDispatchCount) Reset() {
	*x = PTaskDispatchCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTaskDispatchCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTaskDispatchCount) ProtoMessage() {}

func (x *PTaskDispatchCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTaskDispatchCount.ProtoReflect.Descriptor instead.
func (*PTaskDispatchCount) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{38}
}

func (x *PTaskDispatchCount) GetInfos() []*model.DispatchTaskCountInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

// ZeppelinAddress
type ZeppelinAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// serveraddress
	ServerAddress string `protobuf:"bytes,1,opt,name=ServerAddress,proto3" json:"serveraddress" binding:"gte=1,lte=1024" required:"true" minLength:"1" maxLength:"1024"`
}

func (x *ZeppelinAddress) Reset() {
	*x = ZeppelinAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZeppelinAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZeppelinAddress) ProtoMessage() {}

func (x *ZeppelinAddress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZeppelinAddress.ProtoReflect.Descriptor instead.
func (*ZeppelinAddress) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{39}
}

func (x *ZeppelinAddress) GetServerAddress() string {
	if x != nil {
		return x.ServerAddress
	}
	return ""
}

type DescribeFlickClusterAPI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *DescribeFlickClusterAPI) Reset() {
	*x = DescribeFlickClusterAPI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFlickClusterAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFlickClusterAPI) ProtoMessage() {}

func (x *DescribeFlickClusterAPI) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFlickClusterAPI.ProtoReflect.Descriptor instead.
func (*DescribeFlickClusterAPI) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{40}
}

func (x *DescribeFlickClusterAPI) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type ListAvailableFlinkVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Items store the available flink version lists.
	Items []string `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`
}

func (x *ListAvailableFlinkVersions) Reset() {
	*x = ListAvailableFlinkVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAvailableFlinkVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableFlinkVersions) ProtoMessage() {}

func (x *ListAvailableFlinkVersions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableFlinkVersions.ProtoReflect.Descriptor instead.
func (*ListAvailableFlinkVersions) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{41}
}

func (x *ListAvailableFlinkVersions) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListFlinkClusters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.FlinkCluster `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool                  `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64                 `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListFlinkClusters) Reset() {
	*x = ListFlinkClusters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFlinkClusters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlinkClusters) ProtoMessage() {}

func (x *ListFlinkClusters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlinkClusters.ProtoReflect.Descriptor instead.
func (*ListFlinkClusters) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{42}
}

func (x *ListFlinkClusters) GetInfos() []*model.FlinkCluster {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListFlinkClusters) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListFlinkClusters) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateFlinkCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The flink cluster id that generated by system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateFlinkCluster) Reset() {
	*x = CreateFlinkCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlinkCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlinkCluster) ProtoMessage() {}

func (x *CreateFlinkCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlinkCluster.ProtoReflect.Descriptor instead.
func (*CreateFlinkCluster) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{43}
}

func (x *CreateFlinkCluster) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DescribeFlinkCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.FlinkCluster `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *DescribeFlinkCluster) Reset() {
	*x = DescribeFlinkCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFlinkCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFlinkCluster) ProtoMessage() {}

func (x *DescribeFlinkCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFlinkCluster.ProtoReflect.Descriptor instead.
func (*DescribeFlinkCluster) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{44}
}

func (x *DescribeFlinkCluster) GetInfo() *model.FlinkCluster {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListNetworks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*model.Network `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos"`
	HasMore bool             `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	Total   int64            `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *ListNetworks) Reset() {
	*x = ListNetworks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNetworks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworks) ProtoMessage() {}

func (x *ListNetworks) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworks.ProtoReflect.Descriptor instead.
func (*ListNetworks) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{45}
}

func (x *ListNetworks) GetInfos() []*model.Network {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ListNetworks) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListNetworks) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The flink cluster id that generated by system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateNetwork) Reset() {
	*x = CreateNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetwork) ProtoMessage() {}

func (x *CreateNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetwork.ProtoReflect.Descriptor instead.
func (*CreateNetwork) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{46}
}

func (x *CreateNetwork) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DescribeNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *model.Network `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *DescribeNetwork) Reset() {
	*x = DescribeNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeNetwork) ProtoMessage() {}

func (x *DescribeNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeNetwork.ProtoReflect.Descriptor instead.
func (*DescribeNetwork) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{47}
}

func (x *DescribeNetwork) GetInfo() *model.Network {
	if x != nil {
		return x.Info
	}
	return nil
}

type SourceKind_Kind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this kind name
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"`
}

func (x *SourceKind_Kind) Reset() {
	*x = SourceKind_Kind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceKind_Kind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceKind_Kind) ProtoMessage() {}

func (x *SourceKind_Kind) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceKind_Kind.ProtoReflect.Descriptor instead.
func (*SourceKind_Kind) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{19, 0}
}

func (x *SourceKind_Kind) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TableColumns_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// column name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" gorm:"column:name;" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"`
	// column type
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" gorm:"column:type;" binding:"gte=1,lte=64" required:"true" minLength:"1" maxLength:"64"`
	// type length
	Length string `protobuf:"bytes,3,opt,name=length,proto3" json:"length" gorm:"column:length;" required:"true" binding:"gte=0,lte=64" minLength:"0" maxLength:"64"`
	// primary key, one of true/false
	IsPrimaryKey string `protobuf:"bytes,4,opt,name=is_primary_key,json=isPrimaryKey,proto3" json:"is_primary_key" gorm:"column:isprkey;" binding:"gte=0,lte=8" required:"true" minLength:"0" maxLength:"8"`
}

func (x *TableColumns_Column) Reset() {
	*x = TableColumns_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_response_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableColumns_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableColumns_Column) ProtoMessage() {}

func (x *TableColumns_Column) ProtoReflect() protoreflect.Message {
	mi := &file_proto_response_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableColumns_Column.ProtoReflect.Descriptor instead.
func (*TableColumns_Column) Descriptor() ([]byte, []int) {
	return file_proto_response_proto_rawDescGZIP(), []int{21, 0}
}

func (x *TableColumns_Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableColumns_Column) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TableColumns_Column) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

func (x *TableColumns_Column) GetIsPrimaryKey() string {
	if x != nil {
		return x.IsPrimaryKey
	}
	return ""
}

var File_proto_response_proto protoreflect.FileDescriptor

var file_proto_response_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69,
	0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x5b, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22,
	0x2a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x75, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x77, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x04, 0xe2, 0xdf,
	0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f,
	0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x7d, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20,
	0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f,
	0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x39, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x3c, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x41, 0x72, 0x67, 0x73, 0x12, 0x28,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x41, 0x72,
	0x67, 0x73, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x8b,
	0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x68, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x00, 0x52, 0x05,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x7f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x04, 0xe2,
	0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61,
	0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf,
	0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x45, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x64,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x73, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a,
	0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x72, 0x65, 0x22, 0x3d, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x79, 0x0a, 0x0a,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x4b, 0x69,
	0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x2e,
	0x4b, 0x69, 0x6e, 0x64, 0x42, 0x14, 0xe2, 0xdf, 0x1f, 0x10, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x78, 0x81, 0x80, 0x80, 0x05, 0x52, 0x05, 0x4b, 0x69, 0x6e, 0x64,
	0x73, 0x1a, 0x24, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x70, 0x00, 0x78,
	0x41, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x14, 0xe2, 0xdf, 0x1f, 0x10, 0x70, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x78, 0x81, 0x80, 0x80, 0x05, 0x52, 0x08, 0x6a, 0x73,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf1, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x78, 0xa1, 0x8d,
	0x06, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x1a, 0x9d, 0x01, 0x0a, 0x06, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x70, 0x00, 0x78, 0x41, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x70, 0x00, 0x78, 0x41, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0xe2, 0xdf, 0x1f, 0x0d, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x78, 0x41, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x08, 0x52, 0x0c, 0x69, 0x73,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x3b, 0x0a, 0x0d, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xe2, 0xdf, 0x1f,
	0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x73,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x24, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf,
	0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x0a, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x80, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x4a, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x07,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x44, 0x46, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55,
	0x44, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x37, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x44, 0x46, 0x12, 0x28,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x44, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xe2, 0xdf,
	0x1f, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42,
	0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2,
	0xdf, 0x1f, 0x00, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x0d,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a,
	0x09, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xe2, 0xdf, 0x1f, 0x06, 0x70, 0x00, 0x78, 0xa0, 0x9c, 0x01, 0x52, 0x09, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xff, 0x02, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0c, 0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f,
	0x0f, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x78, 0xc0, 0xb8, 0x02,
	0x52, 0x0c, 0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x3d,
	0x0a, 0x0f, 0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x70, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x78, 0xc0, 0xb8, 0x02, 0x52, 0x0f, 0x5a, 0x65,
	0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x3f, 0x0a,
	0x10, 0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x55, 0x44,
	0x46, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x70, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x78, 0xc0, 0xb8, 0x02, 0x52, 0x10, 0x5a, 0x65,
	0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x55, 0x44, 0x46, 0x12, 0x41,
	0x0a, 0x11, 0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e,
	0x55, 0x44, 0x46, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x70,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x78, 0xc0, 0xb8, 0x02, 0x52, 0x11,
	0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x55, 0x44,
	0x46, 0x12, 0x3d, 0x0a, 0x0f, 0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x4d, 0x61, 0x69,
	0x6e, 0x52, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x70, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x78, 0xc0, 0xb8, 0x02, 0x52,
	0x0f, 0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6e,
	0x12, 0x37, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x09,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x07, 0x4a, 0x6f, 0x62,
	0x46, 0x72, 0x65, 0x65, 0x12, 0x38, 0x0a, 0x11, 0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xe2, 0xdf, 0x1f, 0x06, 0x70, 0x00, 0x78, 0xa0, 0x9c, 0x01, 0x52, 0x11, 0x5a, 0x65, 0x70,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x61, 0x72, 0x22, 0x49,
	0x0a, 0x10, 0x50, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x42, 0x04, 0xe2, 0xdf,
	0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x0e, 0x50, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74, 0x12, 0x37, 0x0a, 0x05,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x09, 0x79, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x22, 0x78, 0x0a, 0x13, 0x50, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52,
	0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x10, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x74, 0x0a,
	0x11, 0x50, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x25, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0f, 0xe2, 0xdf, 0x1f,
	0x0b, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x4e, 0x0a, 0x12, 0x50, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x42, 0x0a, 0x0f, 0x5a, 0x65, 0x70, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2,
	0xdf, 0x1f, 0x05, 0x70, 0x00, 0x78, 0x81, 0x08, 0x52, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2b, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x46, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x50, 0x49, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x52, 0x4c, 0x22, 0x32, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x69, 0x6e, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2f,
	0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x24, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3f, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x6c,
	0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x46, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x77, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x1f, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x1f, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a,
	0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x22, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_response_proto_rawDescOnce sync.Once
	file_proto_response_proto_rawDescData = file_proto_response_proto_rawDesc
)

func file_proto_response_proto_rawDescGZIP() []byte {
	file_proto_response_proto_rawDescOnce.Do(func() {
		file_proto_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_response_proto_rawDescData)
	})
	return file_proto_response_proto_rawDescData
}

var file_proto_response_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_proto_response_proto_goTypes = []interface{}{
	(*ListWorkspaces)(nil),                // 0: response.ListWorkspaces
	(*ListAudits)(nil),                    // 1: response.ListAudits
	(*CreateWorkspace)(nil),               // 2: response.CreateWorkspace
	(*DescribeWorkspace)(nil),             // 3: response.DescribeWorkspace
	(*ListMembers)(nil),                   // 4: response.ListMembers
	(*ListSystemRoles)(nil),               // 5: response.ListSystemRoles
	(*ListStreamJobs)(nil),                // 6: response.ListStreamJobs
	(*CreateStreamJob)(nil),               // 7: response.CreateStreamJob
	(*DescribeStreamJob)(nil),             // 8: response.DescribeStreamJob
	(*GetStreamJobCode)(nil),              // 9: response.GetStreamJobCode
	(*GetStreamJobArgs)(nil),              // 10: response.GetStreamJobArgs
	(*GetStreamJobSchedule)(nil),          // 11: response.GetStreamJobSchedule
	(*ListReleaseStreamJobs)(nil),         // 12: response.ListReleaseStreamJobs
	(*ListStreamJobVersions)(nil),         // 13: response.ListStreamJobVersions
	(*ListMonitorRules)(nil),              // 14: response.ListMonitorRules
	(*DescribeMonitorRule)(nil),           // 15: response.DescribeMonitorRule
	(*ListStreamInsts)(nil),               // 16: response.ListStreamInsts
	(*DescribeSource)(nil),                // 17: response.DescribeSource
	(*ListSource)(nil),                    // 18: response.ListSource
	(*SourceKind)(nil),                    // 19: response.SourceKind
	(*JsonList)(nil),                      // 20: response.JsonList
	(*TableColumns)(nil),                  // 21: response.TableColumns
	(*DescribeTable)(nil),                 // 22: response.DescribeTable
	(*ListTable)(nil),                     // 23: response.ListTable
	(*ListResources)(nil),                 // 24: response.ListResources
	(*CreateDir)(nil),                     // 25: response.CreateDir
	(*UploadFile)(nil),                    // 26: response.UploadFile
	(*DownloadFile)(nil),                  // 27: response.DownloadFile
	(*ListUDF)(nil),                       // 28: response.ListUDF
	(*DescribeUDF)(nil),                   // 29: response.DescribeUDF
	(*JobState)(nil),                      // 30: response.JobState
	(*NodeRelations)(nil),                 // 31: response.NodeRelations
	(*JobParser)(nil),                     // 32: response.JobParser
	(*JobFree)(nil),                       // 33: response.JobFree
	(*PTasksStatusStat)(nil),              // 34: response.PTasksStatusStat
	(*PTasksExecStat)(nil),                // 35: response.PTasksExecStat
	(*PTaskRuntimeRanking)(nil),           // 36: response.PTaskRuntimeRanking
	(*PTaskErrorRanking)(nil),             // 37: response.PTaskErrorRanking
	(*PTaskDispatchCount)(nil),            // 38: response.PTaskDispatchCount
	(*ZeppelinAddress)(nil),               // 39: response.ZeppelinAddress
	(*DescribeFlickClusterAPI)(nil),       // 40: response.DescribeFlickClusterAPI
	(*ListAvailableFlinkVersions)(nil),    // 41: response.ListAvailableFlinkVersions
	(*ListFlinkClusters)(nil),             // 42: response.ListFlinkClusters
	(*CreateFlinkCluster)(nil),            // 43: response.CreateFlinkCluster
	(*DescribeFlinkCluster)(nil),          // 44: response.DescribeFlinkCluster
	(*ListNetworks)(nil),                  // 45: response.ListNetworks
	(*CreateNetwork)(nil),                 // 46: response.CreateNetwork
	(*DescribeNetwork)(nil),               // 47: response.DescribeNetwork
	(*SourceKind_Kind)(nil),               // 48: response.SourceKind.Kind
	(*TableColumns_Column)(nil),           // 49: response.TableColumns.Column
	(*model.Workspace)(nil),               // 50: model.Workspace
	(*model.Operation)(nil),               // 51: model.Operation
	(*model.Member)(nil),                  // 52: model.Member
	(*model.Role)(nil),                    // 53: model.Role
	(*model.StreamJob)(nil),               // 54: model.StreamJob
	(*model.StreamJobCode)(nil),           // 55: model.StreamJobCode
	(*model.StreamJobArgs)(nil),           // 56: model.StreamJobArgs
	(*model.StreamJobSchedule)(nil),       // 57: model.StreamJobSchedule
	(*model.StreamJobRelease)(nil),        // 58: model.StreamJobRelease
	(*model.MonitorRule)(nil),             // 59: model.MonitorRule
	(*model.StreamJobInst)(nil),           // 60: model.StreamJobInst
	(*model.DataSource)(nil),              // 61: model.DataSource
	(*model.TableInfo)(nil),               // 62: model.TableInfo
	(*model.Resource)(nil),                // 63: model.Resource
	(*model.UDFInfo)(nil),                 // 64: model.UDFInfo
	(model.StreamJobInst_State)(0),        // 65: model.StreamJobInst.State
	(*model.JobResources)(nil),            // 66: model.JobResources
	(*model.InstanceStatusStat)(nil),      // 67: model.InstanceStatusStat
	(*model.InstanceTaskExecStat)(nil),    // 68: model.InstanceTaskExecStat
	(*model.InstanceRuntimeRankInfo)(nil), // 69: model.InstanceRuntimeRankInfo
	(*model.InstanceErrorRankInfo)(nil),   // 70: model.InstanceErrorRankInfo
	(*model.DispatchTaskCountInfo)(nil),   // 71: model.DispatchTaskCountInfo
	(*model.FlinkCluster)(nil),            // 72: model.FlinkCluster
	(*model.Network)(nil),                 // 73: model.Network
}
var file_proto_response_proto_depIdxs = []int32{
	50, // 0: response.ListWorkspaces.infos:type_name -> model.Workspace
	51, // 1: response.ListAudits.infos:type_name -> model.Operation
	50, // 2: response.DescribeWorkspace.info:type_name -> model.Workspace
	52, // 3: response.ListMembers.infos:type_name -> model.Member
	53, // 4: response.ListSystemRoles.infos:type_name -> model.Role
	54, // 5: response.ListStreamJobs.infos:type_name -> model.StreamJob
	54, // 6: response.DescribeStreamJob.info:type_name -> model.StreamJob
	55, // 7: response.GetStreamJobCode.code:type_name -> model.StreamJobCode
	56, // 8: response.GetStreamJobArgs.info:type_name -> model.StreamJobArgs
	57, // 9: response.GetStreamJobSchedule.info:type_name -> model.StreamJobSchedule
	58, // 10: response.ListReleaseStreamJobs.infos:type_name -> model.StreamJobRelease
	54, // 11: response.ListStreamJobVersions.infos:type_name -> model.StreamJob
	59, // 12: response.ListMonitorRules.infos:type_name -> model.MonitorRule
	59, // 13: response.DescribeMonitorRule.info:type_name -> model.MonitorRule
	60, // 14: response.ListStreamInsts.infos:type_name -> model.StreamJobInst
	61, // 15: response.DescribeSource.info:type_name -> model.DataSource
	61, // 16: response.ListSource.infos:type_name -> model.DataSource
	48, // 17: response.SourceKind.Kinds:type_name -> response.SourceKind.Kind
	49, // 18: response.TableColumns.columns:type_name -> response.TableColumns.Column
	62, // 19: response.DescribeTable.info:type_name -> model.TableInfo
	62, // 20: response.ListTable.infos:type_name -> model.TableInfo
	63, // 21: response.ListResources.infos:type_name -> model.Resource
	64, // 22: response.ListUDF.infos:type_name -> model.UDFInfo
	64, // 23: response.DescribeUDF.info:type_name -> model.UDFInfo
	65, // 24: response.JobState.State:type_name -> model.StreamJobInst.State
	66, // 25: response.JobParser.Resources:type_name -> model.JobResources
	67, // 26: response.PTasksStatusStat.infos:type_name -> model.InstanceStatusStat
	68, // 27: response.PTasksExecStat.today:type_name -> model.InstanceTaskExecStat
	68, // 28: response.PTasksExecStat.yesterday:type_name -> model.InstanceTaskExecStat
	68, // 29: response.PTasksExecStat.history:type_name -> model.InstanceTaskExecStat
	69, // 30: response.PTaskRuntimeRanking.infos:type_name -> model.InstanceRuntimeRankInfo
	70, // 31: response.PTaskErrorRanking.infos:type_name -> model.InstanceErrorRankInfo
	71, // 32: response.PTaskDispatchCount.infos:type_name -> model.DispatchTaskCountInfo
	72, // 33: response.ListFlinkClusters.infos:type_name -> model.FlinkCluster
	72, // 34: response.DescribeFlinkCluster.info:type_name -> model.FlinkCluster
	73, // 35: response.ListNetworks.infos:type_name -> model.Network
	73, // 36: response.DescribeNetwork.info:type_name -> model.Network
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_proto_response_proto_init() }
func file_proto_response_proto_init() {
	if File_proto_response_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_response_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkspaces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAudits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeWorkspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMembers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamJobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeStreamJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamJobCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamJobArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamJobSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReleaseStreamJobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamJobVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitorRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeMonitorRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamInsts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableColumns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUDF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUDF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeRelations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobParser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobFree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTasksStatusStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTasksExecStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTaskRuntimeRanking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTaskErrorRanking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTaskDispatchCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZeppelinAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFlickClusterAPI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAvailableFlinkVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFlinkClusters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlinkCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFlinkCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNetworks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceKind_Kind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_response_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableColumns_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_response_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_response_proto_goTypes,
		DependencyIndexes: file_proto_response_proto_depIdxs,
		MessageInfos:      file_proto_response_proto_msgTypes,
	}.Build()
	File_proto_response_proto = out.File
	file_proto_response_proto_rawDesc = nil
	file_proto_response_proto_goTypes = nil
	file_proto_response_proto_depIdxs = nil
}
