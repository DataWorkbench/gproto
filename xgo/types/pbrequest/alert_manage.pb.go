// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/request/alert_manage.proto

package pbrequest

import (
	pbmodel "github.com/DataWorkbench/gproto/xgo/types/pbmodel"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbdefaults"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListAlertPolicies used as a request parameters for RPC and HTTP(based on URL-Query)
type ListAlertPolicies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Limit the maximum number of entries returned this time.
	// Not required, Max 100, default 100.
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit" form:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset" form:"offset"`
	// The workspace id in HTTP Request-URI
	SpaceId string `protobuf:"bytes,3,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// The field list used to sorted query results.
	// Optional values: {"id", "name", "created", "updated"}.
	// Multiple fields are separated by commas(","), eg: sort_by="created".
	// Not required, default: id.
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
	// Reverse order results. Not required, default: false.
	Reverse bool `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse" default:"false" form:"reverse"`
	//  Search with alert policy name; Not required.
	Search string `protobuf:"bytes,6,opt,name=search,proto3" json:"search" form:"search"`
	// Filter by data alert policy name; valid if `search` is empty; Not required.
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name" form:"name"`
	// Verbose indicates the verbosity level.
	// If the value greater than 1, The details of the associated information will be returned.
	Verbose int32 `protobuf:"varint,8,opt,name=verbose,proto3" json:"verbose" form:"verbose"`
	// Filter by monitor object, 1 => "StreamJob" 2 => "SyncJob'; Not required.
	MonitorObject pbmodel.AlertPolicy_MonitorObject `protobuf:"varint,9,opt,name=monitor_object,json=monitorObject,proto3,enum=model.AlertPolicy_MonitorObject" json:"monitor_object" form:"monitor_object"`
}

func (x *ListAlertPolicies) Reset() {
	*x = ListAlertPolicies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertPolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertPolicies) ProtoMessage() {}

func (x *ListAlertPolicies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertPolicies.ProtoReflect.Descriptor instead.
func (*ListAlertPolicies) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{0}
}

func (x *ListAlertPolicies) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAlertPolicies) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListAlertPolicies) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListAlertPolicies) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListAlertPolicies) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListAlertPolicies) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListAlertPolicies) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListAlertPolicies) GetVerbose() int32 {
	if x != nil {
		return x.Verbose
	}
	return 0
}

func (x *ListAlertPolicies) GetMonitorObject() pbmodel.AlertPolicy_MonitorObject {
	if x != nil {
		return x.MonitorObject
	}
	return pbmodel.AlertPolicy_MonitorObject(0)
}

// DeleteAlertPolicies used as a request parameters for RPC and HTTP(based on Body).
type DeleteAlertPolicies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The workspace id in HTTP Request-URI
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// The list of alert policy id. Is required, Min 1, Max 100.
	AlertIds []string `protobuf:"bytes,2,rep,name=alert_ids,json=alertIds,proto3" json:"alert_ids"`
}

func (x *DeleteAlertPolicies) Reset() {
	*x = DeleteAlertPolicies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertPolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertPolicies) ProtoMessage() {}

func (x *DeleteAlertPolicies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertPolicies.ProtoReflect.Descriptor instead.
func (*DeleteAlertPolicies) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteAlertPolicies) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *DeleteAlertPolicies) GetAlertIds() []string {
	if x != nil {
		return x.AlertIds
	}
	return nil
}

// EnableAlertPolicies used as a request parameters for RPC and HTTP(based on Body).
type EnableAlertPolicies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// The list of alert policy id. Is required, Min 1, Max 100.
	AlertIds []string `protobuf:"bytes,2,rep,name=alert_ids,json=alertIds,proto3" json:"alert_ids"`
}

func (x *EnableAlertPolicies) Reset() {
	*x = EnableAlertPolicies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableAlertPolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableAlertPolicies) ProtoMessage() {}

func (x *EnableAlertPolicies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableAlertPolicies.ProtoReflect.Descriptor instead.
func (*EnableAlertPolicies) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{2}
}

func (x *EnableAlertPolicies) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *EnableAlertPolicies) GetAlertIds() []string {
	if x != nil {
		return x.AlertIds
	}
	return nil
}

// DisableAlertPolicies used as a request parameters for RPC and HTTP(based on Body).
type DisableAlertPolicies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// The list of alert policy id. Is required, Min 1, Max 100.
	AlertIds []string `protobuf:"bytes,2,rep,name=alert_ids,json=alertIds,proto3" json:"alert_ids"`
}

func (x *DisableAlertPolicies) Reset() {
	*x = DisableAlertPolicies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableAlertPolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableAlertPolicies) ProtoMessage() {}

func (x *DisableAlertPolicies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableAlertPolicies.ProtoReflect.Descriptor instead.
func (*DisableAlertPolicies) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{3}
}

func (x *DisableAlertPolicies) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *DisableAlertPolicies) GetAlertIds() []string {
	if x != nil {
		return x.AlertIds
	}
	return nil
}

// CreateAlertPolicy used as a request parameters for RPC and HTTP(based on Body).
type CreateAlertPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id"`
	// The user-id of created this job. Fixed to the request user id.
	CreatedBy string `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by" swaggerignore:"true"`
	// The owner of workspace, only used to check quota. Set by APIServer.
	SpaceOwner string `protobuf:"bytes,3,opt,name=space_owner,json=spaceOwner,proto3" json:"space_owner" swaggerignore:"true"`
	// Name. Min Length: 2, Max Length: 128.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	// Alert Policy Description. Max char Length: 1024
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc"`
	// The monitor object , 1 => "StreamJob" 2 => "SyncJob'
	MonitorObject pbmodel.AlertPolicy_MonitorObject `protobuf:"varint,6,opt,name=monitor_object,json=monitorObject,proto3,enum=model.AlertPolicy_MonitorObject" json:"monitor_object"`
	// The alert item.
	MonitorItem *pbmodel.AlertPolicy_MonitorItem `protobuf:"bytes,7,opt,name=monitor_item,json=monitorItem,proto3" json:"monitor_item"`
	// The trigger rule, 1 => "TriggerRuleAnyItem",
	TriggerRule pbmodel.AlertPolicy_TriggerRule `protobuf:"varint,8,opt,name=trigger_rule,json=triggerRule,proto3,enum=model.AlertPolicy_TriggerRule" json:"trigger_rule"`
	// The trigger action, 1 => "TriggerActionSendNotification",
	TriggerAction pbmodel.AlertPolicy_TriggerAction `protobuf:"varint,9,opt,name=trigger_action,json=triggerAction,proto3,enum=model.AlertPolicy_TriggerAction" json:"trigger_action"`
	// The notification list id of in IaaS.
	NotificationIds []string `protobuf:"bytes,10,rep,name=notification_ids,json=notificationIds,proto3" json:"notification_ids"`
	// The list id of stream job or sync job to monitor.
	JobIds []string `protobuf:"bytes,11,rep,name=job_ids,json=jobIds,proto3" json:"job_ids"`
}

func (x *CreateAlertPolicy) Reset() {
	*x = CreateAlertPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlertPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertPolicy) ProtoMessage() {}

func (x *CreateAlertPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertPolicy.ProtoReflect.Descriptor instead.
func (*CreateAlertPolicy) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAlertPolicy) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *CreateAlertPolicy) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CreateAlertPolicy) GetSpaceOwner() string {
	if x != nil {
		return x.SpaceOwner
	}
	return ""
}

func (x *CreateAlertPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAlertPolicy) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateAlertPolicy) GetMonitorObject() pbmodel.AlertPolicy_MonitorObject {
	if x != nil {
		return x.MonitorObject
	}
	return pbmodel.AlertPolicy_MonitorObject(0)
}

func (x *CreateAlertPolicy) GetMonitorItem() *pbmodel.AlertPolicy_MonitorItem {
	if x != nil {
		return x.MonitorItem
	}
	return nil
}

func (x *CreateAlertPolicy) GetTriggerRule() pbmodel.AlertPolicy_TriggerRule {
	if x != nil {
		return x.TriggerRule
	}
	return pbmodel.AlertPolicy_TriggerRule(0)
}

func (x *CreateAlertPolicy) GetTriggerAction() pbmodel.AlertPolicy_TriggerAction {
	if x != nil {
		return x.TriggerAction
	}
	return pbmodel.AlertPolicy_TriggerAction(0)
}

func (x *CreateAlertPolicy) GetNotificationIds() []string {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

func (x *CreateAlertPolicy) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

// UpdateAlertPolicy used as a request parameters for RPC.
type UpdateAlertPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id"`
	// The id of alert policy.
	AlertId string `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id" swaggerignore:"true"`
	// Name. Min Length: 2, Max Length: 128.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// Alert Policy Description. Max char Length: 1024
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc"`
	// The monitor object , 1 => "StreamJob" 2 => "SyncJob'
	MonitorObject pbmodel.AlertPolicy_MonitorObject `protobuf:"varint,5,opt,name=monitor_object,json=monitorObject,proto3,enum=model.AlertPolicy_MonitorObject" json:"monitor_object"`
	// The alert item.
	MonitorItem *pbmodel.AlertPolicy_MonitorItem `protobuf:"bytes,6,opt,name=monitor_item,json=monitorItem,proto3" json:"monitor_item"`
	// The trigger rule, 1 => "TriggerRuleAnyItem",
	TriggerRule pbmodel.AlertPolicy_TriggerRule `protobuf:"varint,7,opt,name=trigger_rule,json=triggerRule,proto3,enum=model.AlertPolicy_TriggerRule" json:"trigger_rule"`
	// The trigger action, 1 => "TriggerActionSendNotification",
	TriggerAction pbmodel.AlertPolicy_TriggerAction `protobuf:"varint,8,opt,name=trigger_action,json=triggerAction,proto3,enum=model.AlertPolicy_TriggerAction" json:"trigger_action"`
	// The notification list id of in IaaS. Multiple ids are separated by commas. e.g: "nl-mj9wzsa9,nl-pix7u2uo"
	NotificationIds []string `protobuf:"bytes,9,rep,name=notification_ids,json=notificationIds,proto3" json:"notification_ids"`
	// The list id of stream job or sync job to monitor.
	JobIds []string `protobuf:"bytes,10,rep,name=job_ids,json=jobIds,proto3" json:"job_ids"`
}

func (x *UpdateAlertPolicy) Reset() {
	*x = UpdateAlertPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertPolicy) ProtoMessage() {}

func (x *UpdateAlertPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertPolicy.ProtoReflect.Descriptor instead.
func (*UpdateAlertPolicy) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAlertPolicy) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *UpdateAlertPolicy) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *UpdateAlertPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAlertPolicy) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateAlertPolicy) GetMonitorObject() pbmodel.AlertPolicy_MonitorObject {
	if x != nil {
		return x.MonitorObject
	}
	return pbmodel.AlertPolicy_MonitorObject(0)
}

func (x *UpdateAlertPolicy) GetMonitorItem() *pbmodel.AlertPolicy_MonitorItem {
	if x != nil {
		return x.MonitorItem
	}
	return nil
}

func (x *UpdateAlertPolicy) GetTriggerRule() pbmodel.AlertPolicy_TriggerRule {
	if x != nil {
		return x.TriggerRule
	}
	return pbmodel.AlertPolicy_TriggerRule(0)
}

func (x *UpdateAlertPolicy) GetTriggerAction() pbmodel.AlertPolicy_TriggerAction {
	if x != nil {
		return x.TriggerAction
	}
	return pbmodel.AlertPolicy_TriggerAction(0)
}

func (x *UpdateAlertPolicy) GetNotificationIds() []string {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

func (x *UpdateAlertPolicy) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

// DescribeAlertPolicy used as a request parameters for RPC.
type DescribeAlertPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// The alert policy id in HTTP Request-URI. Is Required.
	AlertId string `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id" uri:"alert_id" swaggerignore:"true"`
}

func (x *DescribeAlertPolicy) Reset() {
	*x = DescribeAlertPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeAlertPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeAlertPolicy) ProtoMessage() {}

func (x *DescribeAlertPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeAlertPolicy.ProtoReflect.Descriptor instead.
func (*DescribeAlertPolicy) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeAlertPolicy) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *DescribeAlertPolicy) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

type JobBoundAlertPolicies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// The id of monitor object. StreamJob(stj-xxxxxxxxxxxx) or SyncJob(syj-xxxxxxxxxxxx).
	JobId string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id" uri:"job_id" swaggerignore:"true"`
	// The list of alert policy id. Is required, Min 1, Max 100.
	AlertIds []string `protobuf:"bytes,3,rep,name=alert_ids,json=alertIds,proto3" json:"alert_ids"`
}

func (x *JobBoundAlertPolicies) Reset() {
	*x = JobBoundAlertPolicies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobBoundAlertPolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobBoundAlertPolicies) ProtoMessage() {}

func (x *JobBoundAlertPolicies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobBoundAlertPolicies.ProtoReflect.Descriptor instead.
func (*JobBoundAlertPolicies) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{7}
}

func (x *JobBoundAlertPolicies) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *JobBoundAlertPolicies) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobBoundAlertPolicies) GetAlertIds() []string {
	if x != nil {
		return x.AlertIds
	}
	return nil
}

type JobUnboundAlertPolicies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// The id of monitor object. StreamJob(stj-xxxxxxxxxxxx) or SyncJob(syj-xxxxxxxxxxxx).
	JobId string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id" uri:"job_id" swaggerignore:"true"`
	// The list of alert policy id. Is required, Min 1, Max 100.
	AlertIds []string `protobuf:"bytes,3,rep,name=alert_ids,json=alertIds,proto3" json:"alert_ids"`
}

func (x *JobUnboundAlertPolicies) Reset() {
	*x = JobUnboundAlertPolicies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobUnboundAlertPolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobUnboundAlertPolicies) ProtoMessage() {}

func (x *JobUnboundAlertPolicies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobUnboundAlertPolicies.ProtoReflect.Descriptor instead.
func (*JobUnboundAlertPolicies) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{8}
}

func (x *JobUnboundAlertPolicies) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *JobUnboundAlertPolicies) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobUnboundAlertPolicies) GetAlertIds() []string {
	if x != nil {
		return x.AlertIds
	}
	return nil
}

type ListAlertPoliciesByJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// The id of monitor object. StreamJob(stj-xxxxxxxxxxxx) or SyncJob(syj-xxxxxxxxxxxx).
	JobId string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id" uri:"job_id" swaggerignore:"true"`
	// Limit the maximum number of entries returned this time.
	// Not required, Max 100, default 100.
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit" form:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset" form:"offset"`
}

func (x *ListAlertPoliciesByJob) Reset() {
	*x = ListAlertPoliciesByJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertPoliciesByJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertPoliciesByJob) ProtoMessage() {}

func (x *ListAlertPoliciesByJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertPoliciesByJob.ProtoReflect.Descriptor instead.
func (*ListAlertPoliciesByJob) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{9}
}

func (x *ListAlertPoliciesByJob) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListAlertPoliciesByJob) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ListAlertPoliciesByJob) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAlertPoliciesByJob) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type AlertPolicyBoundJobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string   `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	AlertId string   `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id" uri:"alert_id" swaggerignore:"true"`
	JobIds  []string `protobuf:"bytes,3,rep,name=job_ids,json=jobIds,proto3" json:"job_ids"`
}

func (x *AlertPolicyBoundJobs) Reset() {
	*x = AlertPolicyBoundJobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertPolicyBoundJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertPolicyBoundJobs) ProtoMessage() {}

func (x *AlertPolicyBoundJobs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertPolicyBoundJobs.ProtoReflect.Descriptor instead.
func (*AlertPolicyBoundJobs) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{10}
}

func (x *AlertPolicyBoundJobs) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *AlertPolicyBoundJobs) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *AlertPolicyBoundJobs) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

type AlertPolicyUnboundJobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string   `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	AlertId string   `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id" uri:"alert_id" swaggerignore:"true"`
	JobIds  []string `protobuf:"bytes,3,rep,name=job_ids,json=jobIds,proto3" json:"job_ids"`
}

func (x *AlertPolicyUnboundJobs) Reset() {
	*x = AlertPolicyUnboundJobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertPolicyUnboundJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertPolicyUnboundJobs) ProtoMessage() {}

func (x *AlertPolicyUnboundJobs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertPolicyUnboundJobs.ProtoReflect.Descriptor instead.
func (*AlertPolicyUnboundJobs) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{11}
}

func (x *AlertPolicyUnboundJobs) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *AlertPolicyUnboundJobs) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *AlertPolicyUnboundJobs) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

type ListJobsByAlertPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	AlertId string `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id" uri:"alert_id" swaggerignore:"true"`
	// Limit the maximum number of entries returned this time.
	// Not required, Max 100, default 100.
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit" form:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset" form:"offset"`
}

func (x *ListJobsByAlertPolicy) Reset() {
	*x = ListJobsByAlertPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsByAlertPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsByAlertPolicy) ProtoMessage() {}

func (x *ListJobsByAlertPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsByAlertPolicy.ProtoReflect.Descriptor instead.
func (*ListJobsByAlertPolicy) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{12}
}

func (x *ListJobsByAlertPolicy) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListJobsByAlertPolicy) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *ListJobsByAlertPolicy) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListJobsByAlertPolicy) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListAlertLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// Limit the maximum number of entries returned this time.
	// Not required, Max 100, default 100.
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit" form:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset" form:"offset"`
	// The field list used to sorted query results.
	// Optional values: {"created", "updated"}.
	// Multiple fields are separated by commas(","), eg: sort_by="created".
	// Not required, default: id.
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
	// Reverse order results. Not required, default: false.
	Reverse bool `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse" default:"false" form:"reverse"`
	// Alert ID, unique within a region.
	AlertId string `protobuf:"bytes,6,opt,name=alert_id,json=alertId,proto3" json:"alert_id" form:"alert_id"`
	// The id of job. StreamJob(stj-xxxxxxxxxxxxxxxx) or SyncJob(syj-xxxxxxxxxxxxxxxx).
	JobId string `protobuf:"bytes,7,opt,name=job_id,json=jobId,proto3" json:"job_id" form:"job_id"`
	// The id of instance. StreamInstance(sti-xxxxxxxxxxxxxxxx) or SyncInstance(syi-xxxxxxxxxxxxxxxx).
	InstanceId string `protobuf:"bytes,8,opt,name=instance_id,json=instanceId,proto3" json:"instance_id" form:"instance_id"`
	// The monitor object, 1 => "StreamJob" 2 => "SyncJob'
	MonitorObject pbmodel.AlertPolicy_MonitorObject `protobuf:"varint,9,opt,name=monitor_object,json=monitorObject,proto3,enum=model.AlertPolicy_MonitorObject" json:"monitor_object" form:"monitor_object"`
	// The alert event type, 1 => "StreamInstanceFailed" 2 => "StreamInstanceTimeout" 3 => "SyncInstanceFailed" 4 => "SyncInstanceTimeout"
	EventType pbmodel.AlertLog_EventType `protobuf:"varint,10,opt,name=event_type,json=eventType,proto3,enum=model.AlertLog_EventType" json:"event_type" form:"event_type"`
}

func (x *ListAlertLogs) Reset() {
	*x = ListAlertLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertLogs) ProtoMessage() {}

func (x *ListAlertLogs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertLogs.ProtoReflect.Descriptor instead.
func (*ListAlertLogs) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{13}
}

func (x *ListAlertLogs) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListAlertLogs) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAlertLogs) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListAlertLogs) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListAlertLogs) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListAlertLogs) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *ListAlertLogs) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ListAlertLogs) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ListAlertLogs) GetMonitorObject() pbmodel.AlertPolicy_MonitorObject {
	if x != nil {
		return x.MonitorObject
	}
	return pbmodel.AlertPolicy_MonitorObject(0)
}

func (x *ListAlertLogs) GetEventType() pbmodel.AlertLog_EventType {
	if x != nil {
		return x.EventType
	}
	return pbmodel.AlertLog_EventType(0)
}

type SendAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id"`
	// Alert ID, unique within a region.
	AlertId string `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id"`
	// The id of monitor object. StreamJob(stj-xxxxxxxxxxxxxxxx) or SyncJob(syj-xxxxxxxxxxxxxxxx).
	JobId string `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id"`
	// The version if of job.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version"`
	// The id of monitor object. StreamInstance(sti-xxxxxxxxxxxxxxxx) or SyncInstance(syi-xxxxxxxxxxxxxxxx).
	InstanceId string `protobuf:"bytes,5,opt,name=instance_id,json=instanceId,proto3" json:"instance_id"`
	// The monitor object , 1 => "StreamJob" 2 => "SyncJob'
	MonitorObject pbmodel.AlertPolicy_MonitorObject `protobuf:"varint,6,opt,name=monitor_object,json=monitorObject,proto3,enum=model.AlertPolicy_MonitorObject" json:"monitor_object"`
	// The alert event type , 1 => "StreamInstanceFailed" 2 => "StreamInstanceTimeout" 3 => "SyncInstanceFailed" 4 => "SyncInstanceTimeout"
	EventType       pbmodel.AlertLog_EventType `protobuf:"varint,7,opt,name=event_type,json=eventType,proto3,enum=model.AlertLog_EventType" json:"event_type"`
	Message         string                     `protobuf:"bytes,8,opt,name=message,proto3" json:"message"`
	NotificationIds []string                   `protobuf:"bytes,9,rep,name=notification_ids,json=notificationIds,proto3" json:"notification_ids"`
}

func (x *SendAlert) Reset() {
	*x = SendAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_alert_manage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAlert) ProtoMessage() {}

func (x *SendAlert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_alert_manage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAlert.ProtoReflect.Descriptor instead.
func (*SendAlert) Descriptor() ([]byte, []int) {
	return file_proto_types_request_alert_manage_proto_rawDescGZIP(), []int{14}
}

func (x *SendAlert) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *SendAlert) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *SendAlert) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *SendAlert) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SendAlert) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *SendAlert) GetMonitorObject() pbmodel.AlertPolicy_MonitorObject {
	if x != nil {
		return x.MonitorObject
	}
	return pbmodel.AlertPolicy_MonitorObject(0)
}

func (x *SendAlert) GetEventType() pbmodel.AlertLog_EventType {
	if x != nil {
		return x.EventType
	}
	return pbmodel.AlertLog_EventType(0)
}

func (x *SendAlert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendAlert) GetNotificationIds() []string {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

var File_proto_types_request_alert_manage_proto protoreflect.FileDescriptor

var file_proto_types_request_alert_manage_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75,
	0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x03, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12,
	0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17,
	0xa2, 0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07,
	0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b,
	0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a,
	0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xe2, 0xdf, 0x1f, 0x23, 0x12, 0x21, 0xc2, 0x01, 0x1e, 0x4a,
	0x00, 0x4a, 0x02, 0x69, 0x64, 0x4a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x4a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x06, 0x73,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x62, 0x6f, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x71,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2,
	0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07,
	0xea, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64,
	0x73, 0x22, 0x71, 0x0a, 0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xea, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x08, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x72, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13,
	0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77,
	0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x09,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xea, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x08,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x73, 0x22, 0x9d, 0x05, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2e,
	0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00,
	0x88, 0x02, 0x41, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2c,
	0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00,
	0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c,
	0x12, 0x0a, 0xc2, 0x01, 0x07, 0x90, 0x02, 0x02, 0x98, 0x02, 0x80, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0xc8, 0x01, 0x80, 0x08, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x56, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42,
	0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4e, 0x0a,
	0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xe2, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x58, 0x0a,
	0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x42, 0x15, 0xa2, 0xa1, 0x1f, 0x04, 0xaa, 0x06, 0x01, 0x31, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x5e, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x15, 0xa2, 0xa1, 0x1f, 0x04, 0xaa, 0x06, 0x01, 0x31, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xea, 0x01, 0x02, 0x38, 0x64, 0x52, 0x0f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22, 0xfc, 0x04, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2e,
	0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x61, 0x6c, 0x74, 0x2d, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf,
	0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x90, 0x02, 0x02, 0x98, 0x02, 0x80, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0xc8, 0x01, 0x80,
	0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x56, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01,
	0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x4e, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xe2, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x58, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x15, 0xa2, 0xa1, 0x1f, 0x04, 0xaa, 0x06, 0x01, 0x31, 0xe2,
	0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0b, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x5e, 0x0a, 0x0e, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x15, 0xa2, 0xa1, 0x1f, 0x04, 0xaa, 0x06, 0x01, 0x31, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x10, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xea, 0x01, 0x02, 0x38, 0x64,
	0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x12, 0x24, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xea, 0x01, 0x02, 0x50, 0x01, 0x52,
	0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22, 0x75, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2e,
	0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x61, 0x6c, 0x74, 0x2d, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x22, 0x9a,
	0x01, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06,
	0xc2, 0x01, 0x03, 0xf0, 0x01, 0x14, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xea, 0x01, 0x06, 0x30, 0x00, 0x38, 0x64, 0x50,
	0x01, 0x52, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x17,
	0x4a, 0x6f, 0x62, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12,
	0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2,
	0x01, 0x03, 0xf0, 0x01, 0x14, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xea, 0x01, 0x06, 0x30, 0x00, 0x38, 0x64, 0x50, 0x01,
	0x52, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x42, 0x79, 0x4a, 0x6f, 0x62, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2,
	0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03,
	0xf0, 0x01, 0x14, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa,
	0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xb2, 0x01, 0x04, 0x30, 0x00,
	0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12,
	0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x9c,
	0x01, 0x0a, 0x14, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12,
	0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12,
	0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x61, 0x6c, 0x74, 0x2d, 0x52, 0x07,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05,
	0xea, 0x01, 0x02, 0x50, 0x01, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22, 0x9e, 0x01,
	0x0a, 0x16, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x61, 0x6c, 0x74, 0x2d, 0x52,
	0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12,
	0x05, 0xea, 0x01, 0x02, 0x50, 0x01, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22, 0xcb,
	0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x79, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x61, 0x6c, 0x74, 0x2d, 0x52,
	0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03,
	0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2,
	0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xf6, 0x03, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x2e,
	0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0xa2,
	0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xb2,
	0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xe2,
	0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1d, 0xe2, 0xdf, 0x1f, 0x19, 0x12, 0x17, 0xc2, 0x01, 0x14, 0x4a, 0x00,
	0x4a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x12, 0x03, 0xc2, 0x01,
	0x00, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05,
	0x12, 0x03, 0xc2, 0x01, 0x00, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x12, 0x03, 0xc2, 0x01, 0x00, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xda, 0x01, 0x02, 0x58, 0x01, 0x52,
	0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x45,
	0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x4c, 0x6f, 0x67, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0xe2,
	0xdf, 0x1f, 0x07, 0x12, 0x05, 0xda, 0x01, 0x02, 0x58, 0x01, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe5, 0x03, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a,
	0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a,
	0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x61, 0x6c, 0x74, 0x2d, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0xf0, 0x01,
	0x14, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12,
	0x06, 0xc2, 0x01, 0x03, 0xf0, 0x01, 0x10, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03,
	0xf0, 0x01, 0x14, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x56, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x47, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01,
	0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x12, 0x03, 0xc2, 0x01, 0x00, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xea, 0x01, 0x02, 0x38, 0x64, 0x52, 0x0f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x73, 0x0a,
	0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x14, 0x50, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x00, 0x5a, 0x33, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f,
	0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78,
	0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_request_alert_manage_proto_rawDescOnce sync.Once
	file_proto_types_request_alert_manage_proto_rawDescData = file_proto_types_request_alert_manage_proto_rawDesc
)

func file_proto_types_request_alert_manage_proto_rawDescGZIP() []byte {
	file_proto_types_request_alert_manage_proto_rawDescOnce.Do(func() {
		file_proto_types_request_alert_manage_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_request_alert_manage_proto_rawDescData)
	})
	return file_proto_types_request_alert_manage_proto_rawDescData
}

var file_proto_types_request_alert_manage_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_types_request_alert_manage_proto_goTypes = []interface{}{
	(*ListAlertPolicies)(nil),               // 0: request.ListAlertPolicies
	(*DeleteAlertPolicies)(nil),             // 1: request.DeleteAlertPolicies
	(*EnableAlertPolicies)(nil),             // 2: request.EnableAlertPolicies
	(*DisableAlertPolicies)(nil),            // 3: request.DisableAlertPolicies
	(*CreateAlertPolicy)(nil),               // 4: request.CreateAlertPolicy
	(*UpdateAlertPolicy)(nil),               // 5: request.UpdateAlertPolicy
	(*DescribeAlertPolicy)(nil),             // 6: request.DescribeAlertPolicy
	(*JobBoundAlertPolicies)(nil),           // 7: request.JobBoundAlertPolicies
	(*JobUnboundAlertPolicies)(nil),         // 8: request.JobUnboundAlertPolicies
	(*ListAlertPoliciesByJob)(nil),          // 9: request.ListAlertPoliciesByJob
	(*AlertPolicyBoundJobs)(nil),            // 10: request.AlertPolicyBoundJobs
	(*AlertPolicyUnboundJobs)(nil),          // 11: request.AlertPolicyUnboundJobs
	(*ListJobsByAlertPolicy)(nil),           // 12: request.ListJobsByAlertPolicy
	(*ListAlertLogs)(nil),                   // 13: request.ListAlertLogs
	(*SendAlert)(nil),                       // 14: request.SendAlert
	(pbmodel.AlertPolicy_MonitorObject)(0),  // 15: model.AlertPolicy.MonitorObject
	(*pbmodel.AlertPolicy_MonitorItem)(nil), // 16: model.AlertPolicy.MonitorItem
	(pbmodel.AlertPolicy_TriggerRule)(0),    // 17: model.AlertPolicy.TriggerRule
	(pbmodel.AlertPolicy_TriggerAction)(0),  // 18: model.AlertPolicy.TriggerAction
	(pbmodel.AlertLog_EventType)(0),         // 19: model.AlertLog.EventType
}
var file_proto_types_request_alert_manage_proto_depIdxs = []int32{
	15, // 0: request.ListAlertPolicies.monitor_object:type_name -> model.AlertPolicy.MonitorObject
	15, // 1: request.CreateAlertPolicy.monitor_object:type_name -> model.AlertPolicy.MonitorObject
	16, // 2: request.CreateAlertPolicy.monitor_item:type_name -> model.AlertPolicy.MonitorItem
	17, // 3: request.CreateAlertPolicy.trigger_rule:type_name -> model.AlertPolicy.TriggerRule
	18, // 4: request.CreateAlertPolicy.trigger_action:type_name -> model.AlertPolicy.TriggerAction
	15, // 5: request.UpdateAlertPolicy.monitor_object:type_name -> model.AlertPolicy.MonitorObject
	16, // 6: request.UpdateAlertPolicy.monitor_item:type_name -> model.AlertPolicy.MonitorItem
	17, // 7: request.UpdateAlertPolicy.trigger_rule:type_name -> model.AlertPolicy.TriggerRule
	18, // 8: request.UpdateAlertPolicy.trigger_action:type_name -> model.AlertPolicy.TriggerAction
	15, // 9: request.ListAlertLogs.monitor_object:type_name -> model.AlertPolicy.MonitorObject
	19, // 10: request.ListAlertLogs.event_type:type_name -> model.AlertLog.EventType
	15, // 11: request.SendAlert.monitor_object:type_name -> model.AlertPolicy.MonitorObject
	19, // 12: request.SendAlert.event_type:type_name -> model.AlertLog.EventType
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_types_request_alert_manage_proto_init() }
func file_proto_types_request_alert_manage_proto_init() {
	if File_proto_types_request_alert_manage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_request_alert_manage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertPolicies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertPolicies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableAlertPolicies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableAlertPolicies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlertPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeAlertPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobBoundAlertPolicies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobUnboundAlertPolicies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertPoliciesByJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertPolicyBoundJobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertPolicyUnboundJobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobsByAlertPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_alert_manage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_request_alert_manage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_request_alert_manage_proto_goTypes,
		DependencyIndexes: file_proto_types_request_alert_manage_proto_depIdxs,
		MessageInfos:      file_proto_types_request_alert_manage_proto_msgTypes,
	}.Build()
	File_proto_types_request_alert_manage_proto = out.File
	file_proto_types_request_alert_manage_proto_rawDesc = nil
	file_proto_types_request_alert_manage_proto_goTypes = nil
	file_proto_types_request_alert_manage_proto_depIdxs = nil
}
