// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/request/apidashboard.proto

package pbrequest

import (
	pbmodel "github.com/DataWorkbench/gproto/xgo/types/pbmodel"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbdefaults"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteInfo *RouteInfo `protobuf:"bytes,1,opt,name=route_info,json=routeInfo,proto3" json:"route_info"`
}

func (x *CreateRoute) Reset() {
	*x = CreateRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoute) ProtoMessage() {}

func (x *CreateRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoute.ProtoReflect.Descriptor instead.
func (*CreateRoute) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRoute) GetRouteInfo() *RouteInfo {
	if x != nil {
		return x.RouteInfo
	}
	return nil
}

type UpdateRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteInfo *RouteInfo `protobuf:"bytes,1,opt,name=route_info,json=routeInfo,proto3" json:"route_info"`
}

func (x *UpdateRoute) Reset() {
	*x = UpdateRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoute) ProtoMessage() {}

func (x *UpdateRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoute.ProtoReflect.Descriptor instead.
func (*UpdateRoute) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateRoute) GetRouteInfo() *RouteInfo {
	if x != nil {
		return x.RouteInfo
	}
	return nil
}

type RepublishRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteInfo *RouteInfo `protobuf:"bytes,1,opt,name=route_info,json=routeInfo,proto3" json:"route_info"`
}

func (x *RepublishRoute) Reset() {
	*x = RepublishRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepublishRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepublishRoute) ProtoMessage() {}

func (x *RepublishRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepublishRoute.ProtoReflect.Descriptor instead.
func (*RepublishRoute) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{2}
}

func (x *RepublishRoute) GetRouteInfo() *RouteInfo {
	if x != nil {
		return x.RouteInfo
	}
	return nil
}

type RouteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri          string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri"`
	Id           string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	Desc         string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc"`
	UpstreamId   string `protobuf:"bytes,4,opt,name=upstream_id,json=upstreamId,proto3" json:"hosts"`
	Name         string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	ApiServiceId string `protobuf:"bytes,6,opt,name=api_service_id,json=apiServiceId,proto3" json:"api_service_id"`
	ApiVersionId string `protobuf:"bytes,7,opt,name=api_version_id,json=apiVersionId,proto3" json:"api_version_id"`
	ProxyUri     string `protobuf:"bytes,8,opt,name=proxy_uri,json=proxyUri,proto3" json:"proxy_uri"`
	SpaceId      string `protobuf:"bytes,9,opt,name=space_id,json=spaceId,proto3" json:"space_id"`
}

func (x *RouteInfo) Reset() {
	*x = RouteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteInfo) ProtoMessage() {}

func (x *RouteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteInfo.ProtoReflect.Descriptor instead.
func (*RouteInfo) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{3}
}

func (x *RouteInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *RouteInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RouteInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RouteInfo) GetUpstreamId() string {
	if x != nil {
		return x.UpstreamId
	}
	return ""
}

func (x *RouteInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RouteInfo) GetApiServiceId() string {
	if x != nil {
		return x.ApiServiceId
	}
	return ""
}

func (x *RouteInfo) GetApiVersionId() string {
	if x != nil {
		return x.ApiVersionId
	}
	return ""
}

func (x *RouteInfo) GetProxyUri() string {
	if x != nil {
		return x.ProxyUri
	}
	return ""
}

func (x *RouteInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type DeleteRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids"`
}

func (x *DeleteRoute) Reset() {
	*x = DeleteRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoute) ProtoMessage() {}

func (x *DeleteRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoute.ProtoReflect.Descriptor instead.
func (*DeleteRoute) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRoute) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListRoutes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	Uri        string             `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri" form:"uri"`
	CurrStatus pbmodel.StatusType `protobuf:"varint,3,opt,name=curr_status,json=currStatus,proto3,enum=model.StatusType" json:"curr_status" form:"curr_status"`
	// Limit the maximum number of entries returned this time.
	// Not required, Max 100, default 100.
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit" form:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,5,opt,name=offset,proto3" json:"offset" form:"offset"`
	// The field list used to sorted query results.
	// Optional values: {id, name, create_time, create_time}.
	// Not required, default: id.
	SortBy string `protobuf:"bytes,6,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
	// Reverse order results. Not required, default: false.
	Reverse bool `protobuf:"varint,7,opt,name=reverse,proto3" json:"reverse" form:"reverse"`
	// The id lists of resource query.
	Ids          []string `protobuf:"bytes,8,rep,name=ids,proto3" json:"ids" form:"ids"`
	ApiVersionId string   `protobuf:"bytes,9,opt,name=api_version_id,json=apiVersionId,proto3" json:"api_version_id" form:"api_version_id"`
	ApiServiceId string   `protobuf:"bytes,10,opt,name=api_service_id,json=apiServiceId,proto3" json:"api_service_id" form:"api_service_id"`
	SpaceId      string   `protobuf:"bytes,11,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
}

func (x *ListRoutes) Reset() {
	*x = ListRoutes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutes) ProtoMessage() {}

func (x *ListRoutes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutes.ProtoReflect.Descriptor instead.
func (*ListRoutes) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{5}
}

func (x *ListRoutes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListRoutes) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ListRoutes) GetCurrStatus() pbmodel.StatusType {
	if x != nil {
		return x.CurrStatus
	}
	return pbmodel.StatusType(0)
}

func (x *ListRoutes) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRoutes) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRoutes) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListRoutes) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListRoutes) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListRoutes) GetApiVersionId() string {
	if x != nil {
		return x.ApiVersionId
	}
	return ""
}

func (x *ListRoutes) GetApiServiceId() string {
	if x != nil {
		return x.ApiServiceId
	}
	return ""
}

func (x *ListRoutes) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type CreateUpstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamInfo *UpstreamInfo `protobuf:"bytes,1,opt,name=upstream_info,json=upstreamInfo,proto3" json:"upstream_info,omitempty"`
}

func (x *CreateUpstream) Reset() {
	*x = CreateUpstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpstream) ProtoMessage() {}

func (x *CreateUpstream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpstream.ProtoReflect.Descriptor instead.
func (*CreateUpstream) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUpstream) GetUpstreamInfo() *UpstreamInfo {
	if x != nil {
		return x.UpstreamInfo
	}
	return nil
}

type UpdateUpstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamInfo *UpstreamInfo `protobuf:"bytes,1,opt,name=upstream_info,json=upstreamInfo,proto3" json:"upstream_info,omitempty"`
}

func (x *UpdateUpstream) Reset() {
	*x = UpdateUpstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUpstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUpstream) ProtoMessage() {}

func (x *UpdateUpstream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUpstream.ProtoReflect.Descriptor instead.
func (*UpdateUpstream) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUpstream) GetUpstreamInfo() *UpstreamInfo {
	if x != nil {
		return x.UpstreamInfo
	}
	return nil
}

type UpstreamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId string                  `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id"`
	Nodes   []*pbmodel.UpstreamNode `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes"`
	Name    string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Desc    string                  `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc"`
	Schema  pbmodel.SchemaType      `protobuf:"varint,5,opt,name=schema,proto3,enum=model.SchemaType" json:"schema"`
	Tls     *pbmodel.UpstreamTLS    `protobuf:"bytes,6,opt,name=tls,proto3" json:"tls,omitempty"`
	Timeout *pbmodel.Timeout        `protobuf:"bytes,7,opt,name=timeout,proto3" json:"timeout"`
	Id      string                  `protobuf:"bytes,8,opt,name=id,proto3" json:"id"`
}

func (x *UpstreamInfo) Reset() {
	*x = UpstreamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpstreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamInfo) ProtoMessage() {}

func (x *UpstreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamInfo.ProtoReflect.Descriptor instead.
func (*UpstreamInfo) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{8}
}

func (x *UpstreamInfo) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *UpstreamInfo) GetNodes() []*pbmodel.UpstreamNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *UpstreamInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpstreamInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpstreamInfo) GetSchema() pbmodel.SchemaType {
	if x != nil {
		return x.Schema
	}
	return pbmodel.SchemaType(0)
}

func (x *UpstreamInfo) GetTls() *pbmodel.UpstreamTLS {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *UpstreamInfo) GetTimeout() *pbmodel.Timeout {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *UpstreamInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteUpstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteUpstream) Reset() {
	*x = DeleteUpstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUpstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUpstream) ProtoMessage() {}

func (x *DeleteUpstream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUpstream.ProtoReflect.Descriptor instead.
func (*DeleteUpstream) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteUpstream) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListUpstreams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// Limit the maximum number of entries returned this time.
	// Not required, Max 100, default 100.
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset"`
	// The field list used to sorted query results.
	// Optional values: {id, name, create_time, create_time}.
	// Not required, default: id.
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by"`
	// Reverse order results. Not required, default: false.
	Reverse bool `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse"`
	// The id lists of resource query.
	Ids        []string           `protobuf:"bytes,6,rep,name=ids,proto3" json:"ids" form:"ids"`
	SpaceId    string             `protobuf:"bytes,7,opt,name=space_id,json=spaceId,proto3" json:"space_id"`
	CurrStatus pbmodel.StatusType `protobuf:"varint,8,opt,name=curr_status,json=currStatus,proto3,enum=model.StatusType" json:"curr_status"`
}

func (x *ListUpstreams) Reset() {
	*x = ListUpstreams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUpstreams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUpstreams) ProtoMessage() {}

func (x *ListUpstreams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUpstreams.ProtoReflect.Descriptor instead.
func (*ListUpstreams) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{10}
}

func (x *ListUpstreams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListUpstreams) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUpstreams) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListUpstreams) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListUpstreams) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListUpstreams) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListUpstreams) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListUpstreams) GetCurrStatus() pbmodel.StatusType {
	if x != nil {
		return x.CurrStatus
	}
	return pbmodel.StatusType(0)
}

type CreateSSL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert    string   `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert"`
	Key     string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key"`
	Snis    []string `protobuf:"bytes,3,rep,name=snis,proto3" json:"snis"`
	Id      string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id"`
	SpaceId string   `protobuf:"bytes,5,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
}

func (x *CreateSSL) Reset() {
	*x = CreateSSL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSSL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSSL) ProtoMessage() {}

func (x *CreateSSL) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSSL.ProtoReflect.Descriptor instead.
func (*CreateSSL) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSSL) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *CreateSSL) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateSSL) GetSnis() []string {
	if x != nil {
		return x.Snis
	}
	return nil
}

func (x *CreateSSL) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateSSL) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type DeleteSSL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteSSL) Reset() {
	*x = DeleteSSL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSSL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSSL) ProtoMessage() {}

func (x *DeleteSSL) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSSL.ProtoReflect.Descriptor instead.
func (*DeleteSSL) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteSSL) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListSSLs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id lists of resource query.
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids" form:"ids"`
	Sni string   `protobuf:"bytes,2,opt,name=sni,proto3" json:"sni"`
	// Limit the maximum number of entries returned this time.
	// Not required, Max 100, default 100.
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset"`
	// The field list used to sorted query results.
	// Optional values: {id, create_time, create_time}.
	// Not required, default: id.
	SortBy string `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by"`
	// Reverse order results. Not required, default: false.
	Reverse    bool               `protobuf:"varint,6,opt,name=reverse,proto3" json:"reverse"`
	SpaceId    string             `protobuf:"bytes,7,opt,name=space_id,json=spaceId,proto3" json:"space_id"`
	CreatedBy  string             `protobuf:"bytes,8,opt,name=created_by,json=createdBy,proto3" json:"created_by"`
	CurrStatus pbmodel.StatusType `protobuf:"varint,9,opt,name=curr_status,json=currStatus,proto3,enum=model.StatusType" json:"curr_status"`
}

func (x *ListSSLs) Reset() {
	*x = ListSSLs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSSLs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSSLs) ProtoMessage() {}

func (x *ListSSLs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSSLs.ProtoReflect.Descriptor instead.
func (*ListSSLs) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{13}
}

func (x *ListSSLs) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListSSLs) GetSni() string {
	if x != nil {
		return x.Sni
	}
	return ""
}

func (x *ListSSLs) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSSLs) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSSLs) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListSSLs) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListSSLs) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListSSLs) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ListSSLs) GetCurrStatus() pbmodel.StatusType {
	if x != nil {
		return x.CurrStatus
	}
	return pbmodel.StatusType(0)
}

type CreateApiService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Desc      string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc"`
	AuthKeyId string `protobuf:"bytes,3,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id"`
	SpaceId   string `protobuf:"bytes,4,opt,name=space_id,json=spaceId,proto3" json:"space_id"`
	CreatedBy string `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by" swaggerignore:"true"`
	Id        string `protobuf:"bytes,6,opt,name=id,proto3" json:"id"`
	PrePath   string `protobuf:"bytes,7,opt,name=pre_path,json=prePath,proto3" json:"pre_path"`
}

func (x *CreateApiService) Reset() {
	*x = CreateApiService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiService) ProtoMessage() {}

func (x *CreateApiService) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiService.ProtoReflect.Descriptor instead.
func (*CreateApiService) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{14}
}

func (x *CreateApiService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateApiService) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateApiService) GetAuthKeyId() string {
	if x != nil {
		return x.AuthKeyId
	}
	return ""
}

func (x *CreateApiService) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *CreateApiService) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CreateApiService) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateApiService) GetPrePath() string {
	if x != nil {
		return x.PrePath
	}
	return ""
}

type DeleteApiService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteApiService) Reset() {
	*x = DeleteApiService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApiService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiService) ProtoMessage() {}

func (x *DeleteApiService) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiService.ProtoReflect.Descriptor instead.
func (*DeleteApiService) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteApiService) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateApiService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *UpdateApiService) Reset() {
	*x = UpdateApiService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiService) ProtoMessage() {}

func (x *UpdateApiService) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiService.ProtoReflect.Descriptor instead.
func (*UpdateApiService) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateApiService) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateApiService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateApiService) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type ListApiServices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id lists of resource query.
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids" form:"ids"`
	// Limit the maximum number of entries returned this time.
	// Not required, Max 100, default 100.
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit" form:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset" form:"offset"`
	// The field list used to sorted query results.
	// Optional values: {id, create_time, create_time}.
	// Not required, default: id.
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
	// Reverse order results. Not required, default: false.
	Reverse bool `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse" form:"reverse"`
	// Reverse order results. Not required, default: "".
	AuthKeyId  string             `protobuf:"bytes,6,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id" form:"auth_key_id"`
	SpaceId    string             `protobuf:"bytes,7,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	CreatedBy  string             `protobuf:"bytes,8,opt,name=created_by,json=createdBy,proto3" json:"created_by" swaggerignore:"true"`
	CurrStatus pbmodel.StatusType `protobuf:"varint,9,opt,name=curr_status,json=currStatus,proto3,enum=model.StatusType" json:"curr_status" form:"curr_status"`
	Name       string             `protobuf:"bytes,10,opt,name=name,proto3" json:"name" form:"name"`
}

func (x *ListApiServices) Reset() {
	*x = ListApiServices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiServices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiServices) ProtoMessage() {}

func (x *ListApiServices) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiServices.ProtoReflect.Descriptor instead.
func (*ListApiServices) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{17}
}

func (x *ListApiServices) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListApiServices) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListApiServices) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListApiServices) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListApiServices) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListApiServices) GetAuthKeyId() string {
	if x != nil {
		return x.AuthKeyId
	}
	return ""
}

func (x *ListApiServices) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListApiServices) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ListApiServices) GetCurrStatus() pbmodel.StatusType {
	if x != nil {
		return x.CurrStatus
	}
	return pbmodel.StatusType(0)
}

func (x *ListApiServices) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddSvcReqCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *AddSvcReqCount) Reset() {
	*x = AddSvcReqCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSvcReqCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSvcReqCount) ProtoMessage() {}

func (x *AddSvcReqCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSvcReqCount.ProtoReflect.Descriptor instead.
func (*AddSvcReqCount) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{18}
}

func (x *AddSvcReqCount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddSvcReqCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetSvcReqCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// apiService ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *GetSvcReqCount) Reset() {
	*x = GetSvcReqCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSvcReqCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSvcReqCount) ProtoMessage() {}

func (x *GetSvcReqCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSvcReqCount.ProtoReflect.Descriptor instead.
func (*GetSvcReqCount) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{19}
}

func (x *GetSvcReqCount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteClusterRoutes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ApiServiceAndRoutes `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DeleteClusterRoutes) Reset() {
	*x = DeleteClusterRoutes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClusterRoutes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterRoutes) ProtoMessage() {}

func (x *DeleteClusterRoutes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterRoutes.ProtoReflect.Descriptor instead.
func (*DeleteClusterRoutes) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteClusterRoutes) GetItems() []*ApiServiceAndRoutes {
	if x != nil {
		return x.Items
	}
	return nil
}

type ApiServiceAndRoutes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiServiceId string   `protobuf:"bytes,1,opt,name=api_service_id,json=apiServiceId,proto3" json:"api_service_id,omitempty"`
	RouteIDs     []string `protobuf:"bytes,2,rep,name=routeIDs,proto3" json:"routeIDs,omitempty"`
}

func (x *ApiServiceAndRoutes) Reset() {
	*x = ApiServiceAndRoutes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiServiceAndRoutes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiServiceAndRoutes) ProtoMessage() {}

func (x *ApiServiceAndRoutes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiServiceAndRoutes.ProtoReflect.Descriptor instead.
func (*ApiServiceAndRoutes) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{21}
}

func (x *ApiServiceAndRoutes) GetApiServiceId() string {
	if x != nil {
		return x.ApiServiceId
	}
	return ""
}

func (x *ApiServiceAndRoutes) GetRouteIDs() []string {
	if x != nil {
		return x.RouteIDs
	}
	return nil
}

type CreateAuthKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	SpaceId   string `protobuf:"bytes,2,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	CreatedBy string `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by" swaggerignore:"true"`
}

func (x *CreateAuthKey) Reset() {
	*x = CreateAuthKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthKey) ProtoMessage() {}

func (x *CreateAuthKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthKey.ProtoReflect.Descriptor instead.
func (*CreateAuthKey) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{22}
}

func (x *CreateAuthKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAuthKey) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *CreateAuthKey) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type DeleteAuthKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
}

func (x *DeleteAuthKey) Reset() {
	*x = DeleteAuthKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthKey) ProtoMessage() {}

func (x *DeleteAuthKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthKey.ProtoReflect.Descriptor instead.
func (*DeleteAuthKey) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteAuthKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateAuthKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
}

func (x *UpdateAuthKey) Reset() {
	*x = UpdateAuthKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthKey) ProtoMessage() {}

func (x *UpdateAuthKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthKey.ProtoReflect.Descriptor instead.
func (*UpdateAuthKey) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateAuthKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAuthKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListAuthKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id lists of resource query.
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids" form:"ids"`
	// Limit the maximum number of entries returned this time.
	// Not required, Max 100, default 100.
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit" form:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset" form:"offset"`
	// The field list used to sorted query results.
	// Optional values: {id, create_time, create_time}.
	// Not required, default: id.
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
	// Reverse order results. Not required, default: false.
	Reverse    bool               `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse" form:"reverse"`
	SpaceId    string             `protobuf:"bytes,6,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	CreatedBy  string             `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by" form:"created_by"`
	CurrStatus pbmodel.StatusType `protobuf:"varint,8,opt,name=curr_status,json=currStatus,proto3,enum=model.StatusType" json:"curr_status" form:"curr_status"`
	Name       string             `protobuf:"bytes,9,opt,name=name,proto3" json:"name" form:"name"`
}

func (x *ListAuthKeys) Reset() {
	*x = ListAuthKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthKeys) ProtoMessage() {}

func (x *ListAuthKeys) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthKeys.ProtoReflect.Descriptor instead.
func (*ListAuthKeys) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{25}
}

func (x *ListAuthKeys) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListAuthKeys) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAuthKeys) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListAuthKeys) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListAuthKeys) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListAuthKeys) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListAuthKeys) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ListAuthKeys) GetCurrStatus() pbmodel.StatusType {
	if x != nil {
		return x.CurrStatus
	}
	return pbmodel.StatusType(0)
}

func (x *ListAuthKeys) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BindAuthKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AuthKey ID
	AuthKeyId string `protobuf:"bytes,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id" form:"auth_key_id"`
	// ApiService ID
	ApiServiceIds []string `protobuf:"bytes,2,rep,name=api_service_ids,json=apiServiceIds,proto3" json:"api_service_ids" form:"api_service_ids"`
}

func (x *BindAuthKey) Reset() {
	*x = BindAuthKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindAuthKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindAuthKey) ProtoMessage() {}

func (x *BindAuthKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindAuthKey.ProtoReflect.Descriptor instead.
func (*BindAuthKey) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{26}
}

func (x *BindAuthKey) GetAuthKeyId() string {
	if x != nil {
		return x.AuthKeyId
	}
	return ""
}

func (x *BindAuthKey) GetApiServiceIds() []string {
	if x != nil {
		return x.ApiServiceIds
	}
	return nil
}

type UnbindAuthKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ApiService ID
	ApiServiceIds []string `protobuf:"bytes,1,rep,name=api_service_ids,json=apiServiceIds,proto3" json:"api_service_ids" form:"api_service_ids"`
}

func (x *UnbindAuthKey) Reset() {
	*x = UnbindAuthKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_apidashboard_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindAuthKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindAuthKey) ProtoMessage() {}

func (x *UnbindAuthKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_apidashboard_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindAuthKey.ProtoReflect.Descriptor instead.
func (*UnbindAuthKey) Descriptor() ([]byte, []int) {
	return file_proto_types_request_apidashboard_proto_rawDescGZIP(), []int{27}
}

func (x *UnbindAuthKey) GetApiServiceIds() []string {
	if x != nil {
		return x.ApiServiceIds
	}
	return nil
}

var File_proto_types_request_apidashboard_proto protoreflect.FileDescriptor

var file_proto_types_request_apidashboard_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75,
	0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70,
	0x69, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x40, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x31, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x40, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa9, 0x03, 0x0a, 0x09, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80,
	0x02, 0x00, 0x98, 0x02, 0x80, 0x02, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x2d, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xe2, 0xdf, 0x1f, 0x0d, 0x0a, 0x0b, 0x0a,
	0x02, 0x69, 0x64, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06,
	0xc2, 0x01, 0x03, 0xf0, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a,
	0xc2, 0x01, 0x07, 0x88, 0x02, 0x80, 0x04, 0x90, 0x02, 0x00, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x30, 0x0a, 0x0b, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06,
	0x80, 0x02, 0x00, 0x98, 0x02, 0x14, 0x52, 0x0a, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80, 0x02, 0x00, 0x98, 0x02,
	0x80, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02,
	0x14, 0x52, 0x0c, 0x61, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2,
	0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x14, 0x52, 0x0c, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12,
	0x0a, 0xc2, 0x01, 0x07, 0x80, 0x02, 0x00, 0x98, 0x02, 0x80, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x55, 0x72, 0x69, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2,
	0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xea, 0x01, 0x04, 0x38, 0x64, 0x40, 0x00,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xb3, 0x03, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xda, 0x01, 0x02, 0x58, 0x01, 0x52,
	0x0a, 0x63, 0x75, 0x72, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0xa2, 0xa1, 0x1f, 0x06,
	0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xb2, 0x01, 0x04, 0x30,
	0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07,
	0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x48, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2f, 0xe2, 0xdf, 0x1f, 0x2b, 0x12, 0x29, 0xc2, 0x01, 0x26, 0x4a, 0x00, 0x4a, 0x02, 0x69,
	0x64, 0x4a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x4a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xea, 0x01, 0x04, 0x38, 0x64, 0x40, 0x00, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70,
	0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x3a, 0x0a,
	0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x75, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x3a, 0x0a, 0x0d, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x75, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xff, 0x02, 0x0a, 0x0c, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0xe2, 0xdf,
	0x1f, 0x07, 0x12, 0x05, 0xea, 0x01, 0x02, 0x40, 0x00, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80, 0x02, 0x00, 0x88, 0x02, 0x80, 0x02,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x88,
	0x02, 0x80, 0x04, 0x90, 0x02, 0x00, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x36, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xda, 0x01, 0x02, 0x58, 0x01, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x2a, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x54, 0x4c, 0x53, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x03, 0x74, 0x6c, 0x73,
	0x12, 0x28, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2d, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xe2, 0xdf, 0x1f, 0x0d, 0x0a, 0x0b, 0x0a, 0x02,
	0x69, 0x64, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2,
	0x01, 0x03, 0xf0, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xe2, 0xdf, 0x1f, 0x0d, 0x0a, 0x0b, 0x0a,
	0x02, 0x69, 0x64, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06,
	0xc2, 0x01, 0x03, 0xf0, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd8, 0x02, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xe2, 0xdf, 0x1f, 0x2b, 0x12, 0x29, 0xc2, 0x01, 0x26,
	0x4a, 0x00, 0x4a, 0x02, 0x69, 0x64, 0x4a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x4a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xea, 0x01, 0x04,
	0x38, 0x64, 0x40, 0x00, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0xe2, 0xdf,
	0x1f, 0x07, 0x12, 0x05, 0xda, 0x01, 0x02, 0x58, 0x01, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x53, 0x4c, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0x80, 0x02, 0x00, 0x52,
	0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0x80, 0x02, 0x00,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x6e, 0x69, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xea, 0x01, 0x02, 0x30, 0x00,
	0x52, 0x04, 0x73, 0x6e, 0x69, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x29, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x53, 0x4c, 0x12, 0x1c,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08,
	0x12, 0x06, 0xc2, 0x01, 0x03, 0x80, 0x02, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xea, 0x02, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x53, 0x4c, 0x73, 0x12, 0x1f, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xea, 0x01,
	0x04, 0x38, 0x64, 0x40, 0x00, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6e,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6e, 0x69, 0x12, 0x2d, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0xa2, 0xa1, 0x1f,
	0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xb2, 0x01, 0x04,
	0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xe2, 0xdf, 0x1f,
	0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x42, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x29, 0xe2, 0xdf, 0x1f, 0x25, 0x12, 0x23, 0xc2, 0x01, 0x20, 0x4a, 0x00, 0x4a, 0x02,
	0x69, 0x64, 0x4a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x4a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xda, 0x01, 0x02, 0x58, 0x01, 0x52, 0x0a, 0x63,
	0x75, 0x72, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xab, 0x02, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x90, 0x02, 0x00, 0x98, 0x02,
	0x80, 0x02, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x30, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2,
	0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x90, 0x02, 0x00, 0x98, 0x02, 0x80, 0x02, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf,
	0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73,
	0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80, 0x02, 0x00, 0x98, 0x02, 0x80, 0x02,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2,
	0x01, 0x07, 0x90, 0x02, 0x00, 0x98, 0x02, 0x80, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a,
	0x08, 0x70, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x80, 0x01, 0x52, 0x07,
	0x70, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x34, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2,
	0x01, 0x07, 0x80, 0x02, 0x00, 0x88, 0x02, 0x80, 0x02, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2,
	0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80, 0x02, 0x00, 0x88, 0x02, 0x80, 0x02, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x93, 0x03, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf,
	0x1f, 0x09, 0x12, 0x07, 0xea, 0x01, 0x04, 0x38, 0x64, 0x40, 0x00, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xe2, 0xdf, 0x1f, 0x25, 0x12, 0x23, 0xc2, 0x01, 0x20,
	0x4a, 0x00, 0x4a, 0x02, 0x69, 0x64, 0x4a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x4a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3f, 0x0a, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xda, 0x01, 0x02, 0x58,
	0x01, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x51, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53, 0x76, 0x63, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0x80, 0x02, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x76, 0x63, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0x80, 0x02, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x6e, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07,
	0xea, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x66,
	0x0a, 0x13, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xe2,
	0xdf, 0x1f, 0x09, 0x12, 0x07, 0xea, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x08, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x49, 0x44, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13,
	0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77,
	0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80, 0x02, 0x00, 0x98, 0x02,
	0x80, 0x02, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x2d, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08,
	0x12, 0x06, 0xc2, 0x01, 0x03, 0x80, 0x02, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12,
	0x06, 0xc2, 0x01, 0x03, 0x80, 0x02, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xf0, 0x02, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x73,
	0x12, 0x1f, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xe2,
	0xdf, 0x1f, 0x09, 0x12, 0x07, 0xea, 0x01, 0x04, 0x38, 0x64, 0x40, 0x00, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09,
	0x12, 0x07, 0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xe2, 0xdf, 0x1f, 0x25, 0x12, 0x23, 0xc2, 0x01,
	0x20, 0x4a, 0x00, 0x4a, 0x02, 0x69, 0x64, 0x4a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x4a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3f, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xda, 0x01, 0x02,
	0x58, 0x01, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x72, 0x0a, 0x0b, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01,
	0x03, 0x80, 0x02, 0x00, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07,
	0xea, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x46, 0x0a, 0x0d, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xea, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52,
	0x0d, 0x61, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x42, 0x74,
	0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e,
	0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x15, 0x50, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x41, 0x70, 0x69, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x00, 0x5a,
	0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61,
	0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_request_apidashboard_proto_rawDescOnce sync.Once
	file_proto_types_request_apidashboard_proto_rawDescData = file_proto_types_request_apidashboard_proto_rawDesc
)

func file_proto_types_request_apidashboard_proto_rawDescGZIP() []byte {
	file_proto_types_request_apidashboard_proto_rawDescOnce.Do(func() {
		file_proto_types_request_apidashboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_request_apidashboard_proto_rawDescData)
	})
	return file_proto_types_request_apidashboard_proto_rawDescData
}

var file_proto_types_request_apidashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_proto_types_request_apidashboard_proto_goTypes = []interface{}{
	(*CreateRoute)(nil),          // 0: request.CreateRoute
	(*UpdateRoute)(nil),          // 1: request.UpdateRoute
	(*RepublishRoute)(nil),       // 2: request.RepublishRoute
	(*RouteInfo)(nil),            // 3: request.RouteInfo
	(*DeleteRoute)(nil),          // 4: request.DeleteRoute
	(*ListRoutes)(nil),           // 5: request.ListRoutes
	(*CreateUpstream)(nil),       // 6: request.CreateUpstream
	(*UpdateUpstream)(nil),       // 7: request.UpdateUpstream
	(*UpstreamInfo)(nil),         // 8: request.UpstreamInfo
	(*DeleteUpstream)(nil),       // 9: request.DeleteUpstream
	(*ListUpstreams)(nil),        // 10: request.ListUpstreams
	(*CreateSSL)(nil),            // 11: request.CreateSSL
	(*DeleteSSL)(nil),            // 12: request.DeleteSSL
	(*ListSSLs)(nil),             // 13: request.ListSSLs
	(*CreateApiService)(nil),     // 14: request.CreateApiService
	(*DeleteApiService)(nil),     // 15: request.DeleteApiService
	(*UpdateApiService)(nil),     // 16: request.UpdateApiService
	(*ListApiServices)(nil),      // 17: request.ListApiServices
	(*AddSvcReqCount)(nil),       // 18: request.AddSvcReqCount
	(*GetSvcReqCount)(nil),       // 19: request.GetSvcReqCount
	(*DeleteClusterRoutes)(nil),  // 20: request.DeleteClusterRoutes
	(*ApiServiceAndRoutes)(nil),  // 21: request.ApiServiceAndRoutes
	(*CreateAuthKey)(nil),        // 22: request.CreateAuthKey
	(*DeleteAuthKey)(nil),        // 23: request.DeleteAuthKey
	(*UpdateAuthKey)(nil),        // 24: request.UpdateAuthKey
	(*ListAuthKeys)(nil),         // 25: request.ListAuthKeys
	(*BindAuthKey)(nil),          // 26: request.BindAuthKey
	(*UnbindAuthKey)(nil),        // 27: request.UnbindAuthKey
	(pbmodel.StatusType)(0),      // 28: model.StatusType
	(*pbmodel.UpstreamNode)(nil), // 29: model.UpstreamNode
	(pbmodel.SchemaType)(0),      // 30: model.SchemaType
	(*pbmodel.UpstreamTLS)(nil),  // 31: model.UpstreamTLS
	(*pbmodel.Timeout)(nil),      // 32: model.Timeout
}
var file_proto_types_request_apidashboard_proto_depIdxs = []int32{
	3,  // 0: request.CreateRoute.route_info:type_name -> request.RouteInfo
	3,  // 1: request.UpdateRoute.route_info:type_name -> request.RouteInfo
	3,  // 2: request.RepublishRoute.route_info:type_name -> request.RouteInfo
	28, // 3: request.ListRoutes.curr_status:type_name -> model.StatusType
	8,  // 4: request.CreateUpstream.upstream_info:type_name -> request.UpstreamInfo
	8,  // 5: request.UpdateUpstream.upstream_info:type_name -> request.UpstreamInfo
	29, // 6: request.UpstreamInfo.nodes:type_name -> model.UpstreamNode
	30, // 7: request.UpstreamInfo.schema:type_name -> model.SchemaType
	31, // 8: request.UpstreamInfo.tls:type_name -> model.UpstreamTLS
	32, // 9: request.UpstreamInfo.timeout:type_name -> model.Timeout
	28, // 10: request.ListUpstreams.curr_status:type_name -> model.StatusType
	28, // 11: request.ListSSLs.curr_status:type_name -> model.StatusType
	28, // 12: request.ListApiServices.curr_status:type_name -> model.StatusType
	21, // 13: request.DeleteClusterRoutes.items:type_name -> request.ApiServiceAndRoutes
	28, // 14: request.ListAuthKeys.curr_status:type_name -> model.StatusType
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_types_request_apidashboard_proto_init() }
func file_proto_types_request_apidashboard_proto_init() {
	if File_proto_types_request_apidashboard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_request_apidashboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepublishRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUpstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpstreamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUpstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUpstreams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSSL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSSL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSSLs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApiService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiServices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSvcReqCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSvcReqCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClusterRoutes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiServiceAndRoutes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindAuthKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_apidashboard_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindAuthKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_request_apidashboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_request_apidashboard_proto_goTypes,
		DependencyIndexes: file_proto_types_request_apidashboard_proto_depIdxs,
		MessageInfos:      file_proto_types_request_apidashboard_proto_msgTypes,
	}.Build()
	File_proto_types_request_apidashboard_proto = out.File
	file_proto_types_request_apidashboard_proto_rawDesc = nil
	file_proto_types_request_apidashboard_proto_goTypes = nil
	file_proto_types_request_apidashboard_proto_depIdxs = nil
}
