// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/request/engine_manage.proto

package pbrequest

import (
	pbmodel "github.com/DataWorkbench/gproto/xgo/types/pbmodel"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateFlinkClusterInK8S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cluster is the metadata info of flink cluster.
	Info *pbmodel.FlinkCluster `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateFlinkClusterInK8S) Reset() {
	*x = CreateFlinkClusterInK8S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_engine_manage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlinkClusterInK8S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlinkClusterInK8S) ProtoMessage() {}

func (x *CreateFlinkClusterInK8S) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_engine_manage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlinkClusterInK8S.ProtoReflect.Descriptor instead.
func (*CreateFlinkClusterInK8S) Descriptor() ([]byte, []int) {
	return file_proto_types_request_engine_manage_proto_rawDescGZIP(), []int{0}
}

func (x *CreateFlinkClusterInK8S) GetInfo() *pbmodel.FlinkCluster {
	if x != nil {
		return x.Info
	}
	return nil
}

type StartFlinkClusterInK8S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metadata info of flink cluster.
	Info *pbmodel.FlinkCluster `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *StartFlinkClusterInK8S) Reset() {
	*x = StartFlinkClusterInK8S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_engine_manage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartFlinkClusterInK8S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartFlinkClusterInK8S) ProtoMessage() {}

func (x *StartFlinkClusterInK8S) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_engine_manage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartFlinkClusterInK8S.ProtoReflect.Descriptor instead.
func (*StartFlinkClusterInK8S) Descriptor() ([]byte, []int) {
	return file_proto_types_request_engine_manage_proto_rawDescGZIP(), []int{1}
}

func (x *StartFlinkClusterInK8S) GetInfo() *pbmodel.FlinkCluster {
	if x != nil {
		return x.Info
	}
	return nil
}

type StopFlinkClusterInK8S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of workspace.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// The id of flink cluster.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
}

func (x *StopFlinkClusterInK8S) Reset() {
	*x = StopFlinkClusterInK8S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_engine_manage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopFlinkClusterInK8S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopFlinkClusterInK8S) ProtoMessage() {}

func (x *StopFlinkClusterInK8S) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_engine_manage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopFlinkClusterInK8S.ProtoReflect.Descriptor instead.
func (*StopFlinkClusterInK8S) Descriptor() ([]byte, []int) {
	return file_proto_types_request_engine_manage_proto_rawDescGZIP(), []int{2}
}

func (x *StopFlinkClusterInK8S) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *StopFlinkClusterInK8S) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type CreateNetworkBrokerInK8S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cluster is the metadata info of flink cluster.
	Info *pbmodel.Network `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateNetworkBrokerInK8S) Reset() {
	*x = CreateNetworkBrokerInK8S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_engine_manage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNetworkBrokerInK8S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkBrokerInK8S) ProtoMessage() {}

func (x *CreateNetworkBrokerInK8S) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_engine_manage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkBrokerInK8S.ProtoReflect.Descriptor instead.
func (*CreateNetworkBrokerInK8S) Descriptor() ([]byte, []int) {
	return file_proto_types_request_engine_manage_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNetworkBrokerInK8S) GetInfo() *pbmodel.Network {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteNetworkBrokerInK8S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of workspace.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// The id of flink cluster.
	NetworkId string `protobuf:"bytes,2,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
}

func (x *DeleteNetworkBrokerInK8S) Reset() {
	*x = DeleteNetworkBrokerInK8S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_engine_manage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNetworkBrokerInK8S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkBrokerInK8S) ProtoMessage() {}

func (x *DeleteNetworkBrokerInK8S) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_engine_manage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNetworkBrokerInK8S.ProtoReflect.Descriptor instead.
func (*DeleteNetworkBrokerInK8S) Descriptor() ([]byte, []int) {
	return file_proto_types_request_engine_manage_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteNetworkBrokerInK8S) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *DeleteNetworkBrokerInK8S) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

var File_proto_types_request_engine_manage_proto protoreflect.FileDescriptor

var file_proto_types_request_engine_manage_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79,
	0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x4b, 0x38, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6c, 0x69, 0x6e, 0x6b,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xe2,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x16, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x46, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x4b, 0x38, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6c, 0x69, 0x6e, 0x6b,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xe2,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x7b, 0x0a, 0x15, 0x53, 0x74,
	0x6f, 0x70, 0x46, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x4b, 0x38, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a,
	0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2,
	0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x63, 0x66, 0x69, 0x2d, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x6e,
	0x4b, 0x38, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xe2, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x7e, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x4b, 0x38, 0x73,
	0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14,
	0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0,
	0x01, 0x14, 0xca, 0x02, 0x04, 0x63, 0x66, 0x69, 0x2d, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x64, 0x42, 0x74, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x15, 0x50, 0x42,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x50, 0x00, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f,
	0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x70, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_types_request_engine_manage_proto_rawDescOnce sync.Once
	file_proto_types_request_engine_manage_proto_rawDescData = file_proto_types_request_engine_manage_proto_rawDesc
)

func file_proto_types_request_engine_manage_proto_rawDescGZIP() []byte {
	file_proto_types_request_engine_manage_proto_rawDescOnce.Do(func() {
		file_proto_types_request_engine_manage_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_request_engine_manage_proto_rawDescData)
	})
	return file_proto_types_request_engine_manage_proto_rawDescData
}

var file_proto_types_request_engine_manage_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_types_request_engine_manage_proto_goTypes = []interface{}{
	(*CreateFlinkClusterInK8S)(nil),  // 0: request.CreateFlinkClusterInK8s
	(*StartFlinkClusterInK8S)(nil),   // 1: request.StartFlinkClusterInK8s
	(*StopFlinkClusterInK8S)(nil),    // 2: request.StopFlinkClusterInK8s
	(*CreateNetworkBrokerInK8S)(nil), // 3: request.CreateNetworkBrokerInK8s
	(*DeleteNetworkBrokerInK8S)(nil), // 4: request.DeleteNetworkBrokerInK8s
	(*pbmodel.FlinkCluster)(nil),     // 5: model.FlinkCluster
	(*pbmodel.Network)(nil),          // 6: model.Network
}
var file_proto_types_request_engine_manage_proto_depIdxs = []int32{
	5, // 0: request.CreateFlinkClusterInK8s.info:type_name -> model.FlinkCluster
	5, // 1: request.StartFlinkClusterInK8s.info:type_name -> model.FlinkCluster
	6, // 2: request.CreateNetworkBrokerInK8s.info:type_name -> model.Network
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_types_request_engine_manage_proto_init() }
func file_proto_types_request_engine_manage_proto_init() {
	if File_proto_types_request_engine_manage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_request_engine_manage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlinkClusterInK8S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_engine_manage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartFlinkClusterInK8S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_engine_manage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopFlinkClusterInK8S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_engine_manage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNetworkBrokerInK8S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_engine_manage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNetworkBrokerInK8S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_request_engine_manage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_request_engine_manage_proto_goTypes,
		DependencyIndexes: file_proto_types_request_engine_manage_proto_depIdxs,
		MessageInfos:      file_proto_types_request_engine_manage_proto_msgTypes,
	}.Build()
	File_proto_types_request_engine_manage_proto = out.File
	file_proto_types_request_engine_manage_proto_rawDesc = nil
	file_proto_types_request_engine_manage_proto_goTypes = nil
	file_proto_types_request_engine_manage_proto_depIdxs = nil
}
