// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/request/dataservice_manage.proto

package pbrequest

import (
	pbmodel "github.com/DataWorkbench/gproto/xgo/types/pbmodel"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbdefaults"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDataServiceClusters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	Limit   int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit" form:"limit"`
	Offset  int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset" form:"offset"`
	SortBy  string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
	Reverse bool   `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse" form:"reverse"`
	// Filter by cluster name; valid if `search` is empty; Not required.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name" form:"name"`
}

func (x *ListDataServiceClusters) Reset() {
	*x = ListDataServiceClusters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataServiceClusters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataServiceClusters) ProtoMessage() {}

func (x *ListDataServiceClusters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataServiceClusters.ProtoReflect.Descriptor instead.
func (*ListDataServiceClusters) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{0}
}

func (x *ListDataServiceClusters) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListDataServiceClusters) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDataServiceClusters) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDataServiceClusters) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListDataServiceClusters) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListDataServiceClusters) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DescribeDataServiceCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id" uri:"id" swaggerignore:"true"`
}

func (x *DescribeDataServiceCluster) Reset() {
	*x = DescribeDataServiceCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDataServiceCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDataServiceCluster) ProtoMessage() {}

func (x *DescribeDataServiceCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDataServiceCluster.ProtoReflect.Descriptor instead.
func (*DescribeDataServiceCluster) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{1}
}

func (x *DescribeDataServiceCluster) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type UpdateDataServiceCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId      string                                  `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	ClusterId    string                                  `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"id" uri:"cluster_id" swaggerignore:"true"`
	Name         string                                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	ResourceSpec pbmodel.DataServiceCluster_ResourceSpec `protobuf:"varint,4,opt,name=resource_spec,json=resourceSpec,proto3,enum=model.DataServiceCluster_ResourceSpec" json:"resource_spec"`
}

func (x *UpdateDataServiceCluster) Reset() {
	*x = UpdateDataServiceCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataServiceCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataServiceCluster) ProtoMessage() {}

func (x *UpdateDataServiceCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataServiceCluster.ProtoReflect.Descriptor instead.
func (*UpdateDataServiceCluster) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDataServiceCluster) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *UpdateDataServiceCluster) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateDataServiceCluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDataServiceCluster) GetResourceSpec() pbmodel.DataServiceCluster_ResourceSpec {
	if x != nil {
		return x.ResourceSpec
	}
	return pbmodel.DataServiceCluster_ResourceSpec(0)
}

type CreateDataServiceCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId      string                                  `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	Name         string                                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	CreatedBy    string                                  `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by" swaggerignore:"true"`
	SpaceOwner   string                                  `protobuf:"bytes,4,opt,name=space_owner,json=spaceOwner,proto3" json:"space_owner" swaggerignore:"true"`
	ResourceSpec pbmodel.DataServiceCluster_ResourceSpec `protobuf:"varint,5,opt,name=resource_spec,json=resourceSpec,proto3,enum=model.DataServiceCluster_ResourceSpec" json:"resource_spec"`
}

func (x *CreateDataServiceCluster) Reset() {
	*x = CreateDataServiceCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataServiceCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataServiceCluster) ProtoMessage() {}

func (x *CreateDataServiceCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataServiceCluster.ProtoReflect.Descriptor instead.
func (*CreateDataServiceCluster) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDataServiceCluster) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *CreateDataServiceCluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDataServiceCluster) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CreateDataServiceCluster) GetSpaceOwner() string {
	if x != nil {
		return x.SpaceOwner
	}
	return ""
}

func (x *CreateDataServiceCluster) GetResourceSpec() pbmodel.DataServiceCluster_ResourceSpec {
	if x != nil {
		return x.ResourceSpec
	}
	return pbmodel.DataServiceCluster_ResourceSpec(0)
}

type ListApiGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	Limit   int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit" form:"limit"`
	Offset  int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset" form:"offset"`
	SortBy  string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
	Reverse bool   `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse" form:"reverse"`
}

func (x *ListApiGroups) Reset() {
	*x = ListApiGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiGroups) ProtoMessage() {}

func (x *ListApiGroups) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiGroups.ProtoReflect.Descriptor instead.
func (*ListApiGroups) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{4}
}

func (x *ListApiGroups) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListApiGroups) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListApiGroups) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListApiGroups) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListApiGroups) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

type CreateApiGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
}

func (x *CreateApiGroup) Reset() {
	*x = CreateApiGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiGroup) ProtoMessage() {}

func (x *CreateApiGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiGroup.ProtoReflect.Descriptor instead.
func (*CreateApiGroup) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{5}
}

func (x *CreateApiGroup) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *CreateApiGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListCustomerApis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id" uri:"group_id" swaggerignore:"true"`
}

func (x *ListCustomerApis) Reset() {
	*x = ListCustomerApis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomerApis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerApis) ProtoMessage() {}

func (x *ListCustomerApis) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerApis.ProtoReflect.Descriptor instead.
func (*ListCustomerApis) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{6}
}

func (x *ListCustomerApis) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListCustomerApis) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type UpdateCustomerApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId        string                          `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	ApiId          string                          `protobuf:"bytes,2,opt,name=api_id,json=apiId,proto3" json:"api_id" uri:"api_id" swaggerignore:"true"`
	ApiName        string                          `protobuf:"bytes,3,opt,name=api_name,json=apiName,proto3" json:"api_name"`
	ApiPath        string                          `protobuf:"bytes,4,opt,name=api_path,json=apiPath,proto3" json:"api_path"`
	ApiMode        pbmodel.ApiConfig_ApiMode       `protobuf:"varint,5,opt,name=api_mode,json=apiMode,proto3,enum=model.ApiConfig_ApiMode" json:"api_mode"`
	ApiDescription string                          `protobuf:"bytes,6,opt,name=api_description,json=apiDescription,proto3" json:"api_description"`
	Protocols      []pbmodel.ApiConfig_Protocols   `protobuf:"varint,7,rep,packed,name=protocols,proto3,enum=model.ApiConfig_Protocols" json:"protocols"`
	RequestMethod  pbmodel.ApiConfig_RequestMethod `protobuf:"varint,8,opt,name=request_method,json=requestMethod,proto3,enum=model.ApiConfig_RequestMethod" json:"request_method"`
	ResponseType   pbmodel.ApiConfig_ResponseType  `protobuf:"varint,9,opt,name=response_type,json=responseType,proto3,enum=model.ApiConfig_ResponseType" json:"response_type"`
	CrossDomain    bool                            `protobuf:"varint,10,opt,name=cross_domain,json=crossDomain,proto3" json:"cross_domain"`
	Timeout        int64                           `protobuf:"varint,11,opt,name=timeout,proto3" json:"timeout"`
	DatasourceId   string                          `protobuf:"bytes,12,opt,name=datasource_id,json=datasourceId,proto3" json:"datasource_id"`
	TableName      string                          `protobuf:"bytes,13,opt,name=table_name,json=tableName,proto3" json:"table_name"`
	WizardDetails  *WizardDetails                  `protobuf:"bytes,14,opt,name=wizardDetails,proto3" json:"wizardDetails"`
	Script         string                          `protobuf:"bytes,15,opt,name=script,proto3" json:"script"`
	GroupId        string                          `protobuf:"bytes,16,opt,name=group_id,json=groupId,proto3" json:"group_id"`
	ClusterId      string                          `protobuf:"bytes,17,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id"`
}

func (x *UpdateCustomerApi) Reset() {
	*x = UpdateCustomerApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerApi) ProtoMessage() {}

func (x *UpdateCustomerApi) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerApi.ProtoReflect.Descriptor instead.
func (*UpdateCustomerApi) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCustomerApi) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *UpdateCustomerApi) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *UpdateCustomerApi) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *UpdateCustomerApi) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *UpdateCustomerApi) GetApiMode() pbmodel.ApiConfig_ApiMode {
	if x != nil {
		return x.ApiMode
	}
	return pbmodel.ApiConfig_ApiMode(0)
}

func (x *UpdateCustomerApi) GetApiDescription() string {
	if x != nil {
		return x.ApiDescription
	}
	return ""
}

func (x *UpdateCustomerApi) GetProtocols() []pbmodel.ApiConfig_Protocols {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *UpdateCustomerApi) GetRequestMethod() pbmodel.ApiConfig_RequestMethod {
	if x != nil {
		return x.RequestMethod
	}
	return pbmodel.ApiConfig_RequestMethod(0)
}

func (x *UpdateCustomerApi) GetResponseType() pbmodel.ApiConfig_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return pbmodel.ApiConfig_ResponseType(0)
}

func (x *UpdateCustomerApi) GetCrossDomain() bool {
	if x != nil {
		return x.CrossDomain
	}
	return false
}

func (x *UpdateCustomerApi) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *UpdateCustomerApi) GetDatasourceId() string {
	if x != nil {
		return x.DatasourceId
	}
	return ""
}

func (x *UpdateCustomerApi) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateCustomerApi) GetWizardDetails() *WizardDetails {
	if x != nil {
		return x.WizardDetails
	}
	return nil
}

func (x *UpdateCustomerApi) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *UpdateCustomerApi) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdateCustomerApi) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type DescribeCustomerApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId string `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id" uri:"api_id" swaggerignore:"true"`
}

func (x *DescribeCustomerApi) Reset() {
	*x = DescribeCustomerApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCustomerApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCustomerApi) ProtoMessage() {}

func (x *DescribeCustomerApi) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCustomerApi.ProtoReflect.Descriptor instead.
func (*DescribeCustomerApi) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeCustomerApi) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

type CreateCustomerApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiName        string                          `protobuf:"bytes,1,opt,name=api_name,json=apiName,proto3" json:"api_name"`
	ApiPath        string                          `protobuf:"bytes,2,opt,name=api_path,json=apiPath,proto3" json:"api_path"`
	ApiMode        pbmodel.ApiConfig_ApiMode       `protobuf:"varint,3,opt,name=api_mode,json=apiMode,proto3,enum=model.ApiConfig_ApiMode" json:"api_mode"`
	ApiDescription string                          `protobuf:"bytes,4,opt,name=api_description,json=apiDescription,proto3" json:"api_description"`
	SpaceId        string                          `protobuf:"bytes,5,opt,name=space_id,json=spaceId,proto3" json:"space_id"`
	Protocols      []pbmodel.ApiConfig_Protocols   `protobuf:"varint,6,rep,packed,name=protocols,proto3,enum=model.ApiConfig_Protocols" json:"protocols"`
	RequestMethod  pbmodel.ApiConfig_RequestMethod `protobuf:"varint,7,opt,name=request_method,json=requestMethod,proto3,enum=model.ApiConfig_RequestMethod" json:"request_method"`
	ResponseType   pbmodel.ApiConfig_ResponseType  `protobuf:"varint,8,opt,name=response_type,json=responseType,proto3,enum=model.ApiConfig_ResponseType" json:"response_type"`
	CrossDomain    bool                            `protobuf:"varint,9,opt,name=cross_domain,json=crossDomain,proto3" json:"cross_domain"`
	Timeout        int64                           `protobuf:"varint,10,opt,name=timeout,proto3" json:"timeout"`
	DatasourceId   string                          `protobuf:"bytes,11,opt,name=datasource_id,json=datasourceId,proto3" json:"datasource_id"`
	TableName      string                          `protobuf:"bytes,12,opt,name=table_name,json=tableName,proto3" json:"table_name"`
	WizardDetails  *WizardDetails                  `protobuf:"bytes,13,opt,name=wizardDetails,proto3" json:"wizardDetails"`
	Script         string                          `protobuf:"bytes,14,opt,name=script,proto3" json:"script"`
	GroupId        string                          `protobuf:"bytes,15,opt,name=group_id,json=groupId,proto3" json:"group_id"`
	ClusterId      string                          `protobuf:"bytes,16,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id"`
}

func (x *CreateCustomerApi) Reset() {
	*x = CreateCustomerApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomerApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomerApi) ProtoMessage() {}

func (x *CreateCustomerApi) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomerApi.ProtoReflect.Descriptor instead.
func (*CreateCustomerApi) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{9}
}

func (x *CreateCustomerApi) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *CreateCustomerApi) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *CreateCustomerApi) GetApiMode() pbmodel.ApiConfig_ApiMode {
	if x != nil {
		return x.ApiMode
	}
	return pbmodel.ApiConfig_ApiMode(0)
}

func (x *CreateCustomerApi) GetApiDescription() string {
	if x != nil {
		return x.ApiDescription
	}
	return ""
}

func (x *CreateCustomerApi) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *CreateCustomerApi) GetProtocols() []pbmodel.ApiConfig_Protocols {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *CreateCustomerApi) GetRequestMethod() pbmodel.ApiConfig_RequestMethod {
	if x != nil {
		return x.RequestMethod
	}
	return pbmodel.ApiConfig_RequestMethod(0)
}

func (x *CreateCustomerApi) GetResponseType() pbmodel.ApiConfig_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return pbmodel.ApiConfig_ResponseType(0)
}

func (x *CreateCustomerApi) GetCrossDomain() bool {
	if x != nil {
		return x.CrossDomain
	}
	return false
}

func (x *CreateCustomerApi) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *CreateCustomerApi) GetDatasourceId() string {
	if x != nil {
		return x.DatasourceId
	}
	return ""
}

func (x *CreateCustomerApi) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreateCustomerApi) GetWizardDetails() *WizardDetails {
	if x != nil {
		return x.WizardDetails
	}
	return nil
}

func (x *CreateCustomerApi) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *CreateCustomerApi) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateCustomerApi) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type WizardDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestParams  []*WizardRequestParameters  `protobuf:"bytes,1,rep,name=request_params,json=requestParams,proto3" json:"request_params"`
	ResponseParams []*WizardResponseParameters `protobuf:"bytes,2,rep,name=response_params,json=responseParams,proto3" json:"response_params"`
}

func (x *WizardDetails) Reset() {
	*x = WizardDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WizardDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WizardDetails) ProtoMessage() {}

func (x *WizardDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WizardDetails.ProtoReflect.Descriptor instead.
func (*WizardDetails) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{10}
}

func (x *WizardDetails) GetRequestParams() []*WizardRequestParameters {
	if x != nil {
		return x.RequestParams
	}
	return nil
}

func (x *WizardDetails) GetResponseParams() []*WizardResponseParameters {
	if x != nil {
		return x.ResponseParams
	}
	return nil
}

type WizardRequestParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName       string                                     `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name"`
	DefaultValue     string                                     `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value"`
	ExampleValue     string                                     `protobuf:"bytes,3,opt,name=example_value,json=exampleValue,proto3" json:"example_value"`
	IsRequired       bool                                       `protobuf:"varint,4,opt,name=is_required,json=isRequired,proto3" json:"is_required"`
	DataType         pbmodel.ParameterDataType                  `protobuf:"varint,5,opt,name=data_type,json=dataType,proto3,enum=model.ParameterDataType" json:"data_type"`
	ParamDescription string                                     `protobuf:"bytes,6,opt,name=param_description,json=paramDescription,proto3" json:"param_description"`
	ParamName        string                                     `protobuf:"bytes,7,opt,name=param_name,json=paramName,proto3" json:"param_name"`
	ParamOperator    pbmodel.ApiRequestParams_ParameterOperator `protobuf:"varint,8,opt,name=param_operator,json=paramOperator,proto3,enum=model.ApiRequestParams_ParameterOperator" json:"param_operator"`
	ParamPosition    pbmodel.ApiRequestParams_ParameterPosition `protobuf:"varint,9,opt,name=param_position,json=paramPosition,proto3,enum=model.ApiRequestParams_ParameterPosition" json:"param_position"`
}

func (x *WizardRequestParameters) Reset() {
	*x = WizardRequestParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WizardRequestParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WizardRequestParameters) ProtoMessage() {}

func (x *WizardRequestParameters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WizardRequestParameters.ProtoReflect.Descriptor instead.
func (*WizardRequestParameters) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{11}
}

func (x *WizardRequestParameters) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *WizardRequestParameters) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *WizardRequestParameters) GetExampleValue() string {
	if x != nil {
		return x.ExampleValue
	}
	return ""
}

func (x *WizardRequestParameters) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

func (x *WizardRequestParameters) GetDataType() pbmodel.ParameterDataType {
	if x != nil {
		return x.DataType
	}
	return pbmodel.ParameterDataType(0)
}

func (x *WizardRequestParameters) GetParamDescription() string {
	if x != nil {
		return x.ParamDescription
	}
	return ""
}

func (x *WizardRequestParameters) GetParamName() string {
	if x != nil {
		return x.ParamName
	}
	return ""
}

func (x *WizardRequestParameters) GetParamOperator() pbmodel.ApiRequestParams_ParameterOperator {
	if x != nil {
		return x.ParamOperator
	}
	return pbmodel.ApiRequestParams_ParameterOperator(0)
}

func (x *WizardRequestParameters) GetParamPosition() pbmodel.ApiRequestParams_ParameterPosition {
	if x != nil {
		return x.ParamPosition
	}
	return pbmodel.ApiRequestParams_ParameterPosition(0)
}

type WizardResponseParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName       string                    `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name"`
	DefaultValue     string                    `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value"`
	ExampleValue     string                    `protobuf:"bytes,3,opt,name=example_value,json=exampleValue,proto3" json:"example_value"`
	DataType         pbmodel.ParameterDataType `protobuf:"varint,4,opt,name=data_type,json=dataType,proto3,enum=model.ParameterDataType" json:"data_type"`
	ParamDescription string                    `protobuf:"bytes,5,opt,name=param_description,json=paramDescription,proto3" json:"param_description"`
	ParamName        string                    `protobuf:"bytes,6,opt,name=param_name,json=paramName,proto3" json:"param_name"`
}

func (x *WizardResponseParameters) Reset() {
	*x = WizardResponseParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WizardResponseParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WizardResponseParameters) ProtoMessage() {}

func (x *WizardResponseParameters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WizardResponseParameters.ProtoReflect.Descriptor instead.
func (*WizardResponseParameters) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{12}
}

func (x *WizardResponseParameters) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *WizardResponseParameters) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *WizardResponseParameters) GetExampleValue() string {
	if x != nil {
		return x.ExampleValue
	}
	return ""
}

func (x *WizardResponseParameters) GetDataType() pbmodel.ParameterDataType {
	if x != nil {
		return x.DataType
	}
	return pbmodel.ParameterDataType(0)
}

func (x *WizardResponseParameters) GetParamDescription() string {
	if x != nil {
		return x.ParamDescription
	}
	return ""
}

func (x *WizardResponseParameters) GetParamName() string {
	if x != nil {
		return x.ParamName
	}
	return ""
}

type ListApiVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId  string `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id" uri:"api_id" swaggerignore:"true"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit" form:"limit"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset" form:"offset"`
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
}

func (x *ListApiVersions) Reset() {
	*x = ListApiVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiVersions) ProtoMessage() {}

func (x *ListApiVersions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiVersions.ProtoReflect.Descriptor instead.
func (*ListApiVersions) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{13}
}

func (x *ListApiVersions) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *ListApiVersions) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListApiVersions) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListApiVersions) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ListPublishedApis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	Limit   int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit" form:"limit"`
	Offset  int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset" form:"offset"`
	SortBy  string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
	Reverse bool   `protobuf:"varint,5,opt,name=reverse,proto3" json:"reverse" form:"reverse"`
	Search  string `protobuf:"bytes,6,opt,name=search,proto3" json:"search" form:"search"`
	Name    string `protobuf:"bytes,7,opt,name=name,proto3" json:"name" form:"name"`
}

func (x *ListPublishedApis) Reset() {
	*x = ListPublishedApis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPublishedApis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublishedApis) ProtoMessage() {}

func (x *ListPublishedApis) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublishedApis.ProtoReflect.Descriptor instead.
func (*ListPublishedApis) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{14}
}

func (x *ListPublishedApis) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListPublishedApis) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPublishedApis) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPublishedApis) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListPublishedApis) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListPublishedApis) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListPublishedApis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DescribeApiVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionId string `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id" uri:"version_id" swaggerignore:"true"`
}

func (x *DescribeApiVersion) Reset() {
	*x = DescribeApiVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeApiVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeApiVersion) ProtoMessage() {}

func (x *DescribeApiVersion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeApiVersion.ProtoReflect.Descriptor instead.
func (*DescribeApiVersion) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeApiVersion) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type PublishCustomerApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId string `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id"`
}

func (x *PublishCustomerApi) Reset() {
	*x = PublishCustomerApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishCustomerApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishCustomerApi) ProtoMessage() {}

func (x *PublishCustomerApi) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishCustomerApi.ProtoReflect.Descriptor instead.
func (*PublishCustomerApi) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{16}
}

func (x *PublishCustomerApi) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

type TestCustomerApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId          string `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id"`
	RequestContent string `protobuf:"bytes,2,opt,name=request_content,json=requestContent,proto3" json:"request_content"` //repeated RequestValue request_values = 2;
}

func (x *TestCustomerApi) Reset() {
	*x = TestCustomerApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCustomerApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCustomerApi) ProtoMessage() {}

func (x *TestCustomerApi) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_dataservice_manage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCustomerApi.ProtoReflect.Descriptor instead.
func (*TestCustomerApi) Descriptor() ([]byte, []int) {
	return file_proto_types_request_dataservice_manage_proto_rawDescGZIP(), []int{17}
}

func (x *TestCustomerApi) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *TestCustomerApi) GetRequestContent() string {
	if x != nil {
		return x.RequestContent
	}
	return ""
}

var File_proto_types_request_dataservice_manage_proto protoreflect.FileDescriptor

var file_proto_types_request_dataservice_manage_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x02, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01,
	0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09,
	0x12, 0x07, 0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xe2, 0xdf, 0x1f, 0x23, 0x12, 0x21, 0xc2, 0x01,
	0x1e, 0x4a, 0x00, 0x4a, 0x02, 0x69, 0x64, 0x4a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x4a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x50, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x32, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01,
	0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x63, 0x2d, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14,
	0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0,
	0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x63, 0x2d, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00,
	0x98, 0x02, 0x40, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07,
	0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0xa9, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0,
	0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02,
	0x40, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f,
	0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x88, 0x02, 0x41, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2c, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf,
	0x1f, 0x07, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30,
	0x00, 0x58, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x22, 0xf5, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a,
	0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf,
	0x1f, 0x09, 0x12, 0x07, 0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xe2, 0xdf, 0x1f, 0x23, 0x12, 0x21,
	0xc2, 0x01, 0x1e, 0x4a, 0x00, 0x4a, 0x02, 0x69, 0x64, 0x4a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x4a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x07, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2,
	0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b,
	0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12,
	0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x72, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x41, 0x70, 0x69, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01,
	0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01,
	0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x67, 0x2d, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x22, 0xb4, 0x07, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x70, 0x69, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf,
	0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73,
	0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x70,
	0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x61, 0x2d, 0x52,
	0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09,
	0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80,
	0x02, 0x00, 0x98, 0x02, 0xc8, 0x01, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x42, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf,
	0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0e, 0x61, 0x70, 0x69,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x54, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x0d, 0xe2,
	0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x51, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27,
	0x0a, 0x0c, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xe2, 0xdf, 0x1f, 0x0a, 0x12, 0x08,
	0xb2, 0x01, 0x05, 0x38, 0xb4, 0x01, 0x40, 0x01, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x38, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d,
	0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x73, 0x6f, 0x6d, 0x2d, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x77,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x0d, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x26, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0e, 0xe2, 0xdf, 0x1f, 0x0a, 0x12, 0x08, 0xc2, 0x01, 0x05, 0x98, 0x02, 0xa0, 0x9c, 0x01, 0x52,
	0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12,
	0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x67, 0x2d, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f,
	0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x63, 0x2d,
	0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x13, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41,
	0x70, 0x69, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14,
	0xca, 0x02, 0x04, 0x64, 0x73, 0x61, 0x2d, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x22, 0x88,
	0x07, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x41, 0x70, 0x69, 0x12, 0x2a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01,
	0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80, 0x02, 0x00,
	0x98, 0x02, 0xc8, 0x01, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x42, 0x0a,
	0x08, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x36, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09,
	0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0e, 0x61, 0x70, 0x69, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f,
	0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x12, 0x54, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x0d, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x51, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0c,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xe2, 0xdf, 0x1f, 0x0a, 0x12, 0x08, 0xb2, 0x01,
	0x05, 0x38, 0xb4, 0x01, 0x40, 0x01, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x38, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01,
	0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x73, 0x6f, 0x6d, 0x2d, 0x52, 0x0c, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2,
	0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52, 0x09,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x77, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0d,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x26, 0x0a,
	0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xe2,
	0xdf, 0x1f, 0x0a, 0x12, 0x08, 0xc2, 0x01, 0x05, 0x98, 0x02, 0xa0, 0x9c, 0x01, 0x52, 0x06, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2,
	0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x67, 0x2d, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12,
	0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x63, 0x2d, 0x52, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x57, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x47, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x4a, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0xce, 0x04, 0x0a, 0x17, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98,
	0x02, 0x40, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04,
	0x98, 0x02, 0x81, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f,
	0x00, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x44, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09,
	0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x10, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02,
	0x00, 0x98, 0x02, 0x40, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x5f, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58,
	0x01, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x5f, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00,
	0x58, 0x01, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xe6, 0x02, 0x0a, 0x18, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x30,
	0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02,
	0x00, 0x98, 0x02, 0x40, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2,
	0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0c, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04,
	0x30, 0x00, 0x58, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a,
	0x0a, 0x11, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x10, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a,
	0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13,
	0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64,
	0x73, 0x61, 0x2d, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa,
	0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xb2, 0x01, 0x04, 0x30, 0x00,
	0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12,
	0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x3a,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x21, 0xe2, 0xdf, 0x1f, 0x1d, 0x12, 0x1b, 0xc2, 0x01, 0x18, 0x4a, 0x00, 0x4a, 0x02, 0x69, 0x64,
	0x4a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x9f, 0x02, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x70, 0x69, 0x73,
	0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14,
	0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xe2, 0xdf, 0x1f, 0x23, 0x12, 0x21, 0xc2, 0x01, 0x1e,
	0x4a, 0x00, 0x4a, 0x02, 0x69, 0x64, 0x4a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x06,
	0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x12,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01,
	0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x76, 0x2d, 0x52, 0x09, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x70, 0x69, 0x12, 0x2a, 0x0a, 0x06,
	0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf,
	0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x61,
	0x2d, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x70, 0x69, 0x12, 0x2a, 0x0a, 0x06, 0x61,
	0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f,
	0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x61, 0x2d,
	0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0xe2, 0xdf, 0x1f, 0x0d, 0x12, 0x0b, 0xc2, 0x01, 0x08, 0x80, 0x02, 0x00, 0x98, 0x02,
	0xa0, 0x9c, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6f,
	0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x1a, 0x50, 0x42, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x00, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x67, 0x6f, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_request_dataservice_manage_proto_rawDescOnce sync.Once
	file_proto_types_request_dataservice_manage_proto_rawDescData = file_proto_types_request_dataservice_manage_proto_rawDesc
)

func file_proto_types_request_dataservice_manage_proto_rawDescGZIP() []byte {
	file_proto_types_request_dataservice_manage_proto_rawDescOnce.Do(func() {
		file_proto_types_request_dataservice_manage_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_request_dataservice_manage_proto_rawDescData)
	})
	return file_proto_types_request_dataservice_manage_proto_rawDescData
}

var file_proto_types_request_dataservice_manage_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_types_request_dataservice_manage_proto_goTypes = []interface{}{
	(*ListDataServiceClusters)(nil),                 // 0: request.ListDataServiceClusters
	(*DescribeDataServiceCluster)(nil),              // 1: request.DescribeDataServiceCluster
	(*UpdateDataServiceCluster)(nil),                // 2: request.UpdateDataServiceCluster
	(*CreateDataServiceCluster)(nil),                // 3: request.CreateDataServiceCluster
	(*ListApiGroups)(nil),                           // 4: request.ListApiGroups
	(*CreateApiGroup)(nil),                          // 5: request.CreateApiGroup
	(*ListCustomerApis)(nil),                        // 6: request.ListCustomerApis
	(*UpdateCustomerApi)(nil),                       // 7: request.UpdateCustomerApi
	(*DescribeCustomerApi)(nil),                     // 8: request.DescribeCustomerApi
	(*CreateCustomerApi)(nil),                       // 9: request.CreateCustomerApi
	(*WizardDetails)(nil),                           // 10: request.WizardDetails
	(*WizardRequestParameters)(nil),                 // 11: request.WizardRequestParameters
	(*WizardResponseParameters)(nil),                // 12: request.WizardResponseParameters
	(*ListApiVersions)(nil),                         // 13: request.ListApiVersions
	(*ListPublishedApis)(nil),                       // 14: request.ListPublishedApis
	(*DescribeApiVersion)(nil),                      // 15: request.DescribeApiVersion
	(*PublishCustomerApi)(nil),                      // 16: request.PublishCustomerApi
	(*TestCustomerApi)(nil),                         // 17: request.TestCustomerApi
	(pbmodel.DataServiceCluster_ResourceSpec)(0),    // 18: model.DataServiceCluster.ResourceSpec
	(pbmodel.ApiConfig_ApiMode)(0),                  // 19: model.ApiConfig.ApiMode
	(pbmodel.ApiConfig_Protocols)(0),                // 20: model.ApiConfig.Protocols
	(pbmodel.ApiConfig_RequestMethod)(0),            // 21: model.ApiConfig.RequestMethod
	(pbmodel.ApiConfig_ResponseType)(0),             // 22: model.ApiConfig.ResponseType
	(pbmodel.ParameterDataType)(0),                  // 23: model.ParameterDataType
	(pbmodel.ApiRequestParams_ParameterOperator)(0), // 24: model.ApiRequestParams.ParameterOperator
	(pbmodel.ApiRequestParams_ParameterPosition)(0), // 25: model.ApiRequestParams.ParameterPosition
}
var file_proto_types_request_dataservice_manage_proto_depIdxs = []int32{
	18, // 0: request.UpdateDataServiceCluster.resource_spec:type_name -> model.DataServiceCluster.ResourceSpec
	18, // 1: request.CreateDataServiceCluster.resource_spec:type_name -> model.DataServiceCluster.ResourceSpec
	19, // 2: request.UpdateCustomerApi.api_mode:type_name -> model.ApiConfig.ApiMode
	20, // 3: request.UpdateCustomerApi.protocols:type_name -> model.ApiConfig.Protocols
	21, // 4: request.UpdateCustomerApi.request_method:type_name -> model.ApiConfig.RequestMethod
	22, // 5: request.UpdateCustomerApi.response_type:type_name -> model.ApiConfig.ResponseType
	10, // 6: request.UpdateCustomerApi.wizardDetails:type_name -> request.WizardDetails
	19, // 7: request.CreateCustomerApi.api_mode:type_name -> model.ApiConfig.ApiMode
	20, // 8: request.CreateCustomerApi.protocols:type_name -> model.ApiConfig.Protocols
	21, // 9: request.CreateCustomerApi.request_method:type_name -> model.ApiConfig.RequestMethod
	22, // 10: request.CreateCustomerApi.response_type:type_name -> model.ApiConfig.ResponseType
	10, // 11: request.CreateCustomerApi.wizardDetails:type_name -> request.WizardDetails
	11, // 12: request.WizardDetails.request_params:type_name -> request.WizardRequestParameters
	12, // 13: request.WizardDetails.response_params:type_name -> request.WizardResponseParameters
	23, // 14: request.WizardRequestParameters.data_type:type_name -> model.ParameterDataType
	24, // 15: request.WizardRequestParameters.param_operator:type_name -> model.ApiRequestParams.ParameterOperator
	25, // 16: request.WizardRequestParameters.param_position:type_name -> model.ApiRequestParams.ParameterPosition
	23, // 17: request.WizardResponseParameters.data_type:type_name -> model.ParameterDataType
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_proto_types_request_dataservice_manage_proto_init() }
func file_proto_types_request_dataservice_manage_proto_init() {
	if File_proto_types_request_dataservice_manage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_request_dataservice_manage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataServiceClusters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDataServiceCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataServiceCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataServiceCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomerApis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCustomerApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomerApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WizardDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WizardRequestParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WizardResponseParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPublishedApis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeApiVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishCustomerApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_dataservice_manage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCustomerApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_request_dataservice_manage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_request_dataservice_manage_proto_goTypes,
		DependencyIndexes: file_proto_types_request_dataservice_manage_proto_depIdxs,
		MessageInfos:      file_proto_types_request_dataservice_manage_proto_msgTypes,
	}.Build()
	File_proto_types_request_dataservice_manage_proto = out.File
	file_proto_types_request_dataservice_manage_proto_rawDesc = nil
	file_proto_types_request_dataservice_manage_proto_goTypes = nil
	file_proto_types_request_dataservice_manage_proto_depIdxs = nil
}
