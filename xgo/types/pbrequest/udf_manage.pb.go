// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/request/udf_manage.proto

package pbrequest

import (
	pbmodel "github.com/DataWorkbench/gproto/xgo/types/pbmodel"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbdefaults"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UDF is one of ScalaUDF/ScalaUDTF/ScalaUDTTF/JarUDF/JarUDTF/JarUDTTF/PythonUDF/PythonUDTF
// CreateUDF used as request parameters for RPC and HTTP(based on Body)
type CreateUDF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The udf id.
	UdfId string `protobuf:"bytes,1,opt,name=udf_id,json=udfId,proto3" json:"udf_id" swaggerignore:"true"`
	// The space id.
	SpaceId string `protobuf:"bytes,2,opt,name=space_id,json=spaceId,proto3" json:"space_id" swaggerignore:"true"`
	// UDF Type one of 1/2/3 1=>UDF/2=>UDTF/3=>UDTTF
	UdfType pbmodel.UDFInfo_Type `protobuf:"varint,3,opt,name=udf_type,json=udfType,proto3,enum=model.UDFInfo_Type" json:"udf_type"`
	// UDF language one of 1/2/3 1=>Scala/2=>Java/3=>Python
	UdfLanguage pbmodel.UDFInfo_Language `protobuf:"varint,4,opt,name=udf_language,json=udfLanguage,proto3,enum=model.UDFInfo_Language" json:"udf_language"`
	// UDF name unique within a space.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	// describe this udf.
	Comment string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment"`
	// define this udf. jar udf this is resourcemanager jarID, python/scala this is code.
	Define string `protobuf:"bytes,7,opt,name=define,proto3" json:"define"`
	// usage for this udf
	UsageSample string `protobuf:"bytes,8,opt,name=usage_sample,json=usageSample,proto3" json:"usage_sample"`
	// Udf owner.
	CreateBy string `protobuf:"bytes,9,opt,name=create_by,json=createBy,proto3" json:"create_by"`
}

func (x *CreateUDF) Reset() {
	*x = CreateUDF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_udf_manage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUDF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUDF) ProtoMessage() {}

func (x *CreateUDF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_udf_manage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUDF.ProtoReflect.Descriptor instead.
func (*CreateUDF) Descriptor() ([]byte, []int) {
	return file_proto_types_request_udf_manage_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUDF) GetUdfId() string {
	if x != nil {
		return x.UdfId
	}
	return ""
}

func (x *CreateUDF) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *CreateUDF) GetUdfType() pbmodel.UDFInfo_Type {
	if x != nil {
		return x.UdfType
	}
	return pbmodel.UDFInfo_Type(0)
}

func (x *CreateUDF) GetUdfLanguage() pbmodel.UDFInfo_Language {
	if x != nil {
		return x.UdfLanguage
	}
	return pbmodel.UDFInfo_Language(0)
}

func (x *CreateUDF) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUDF) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CreateUDF) GetDefine() string {
	if x != nil {
		return x.Define
	}
	return ""
}

func (x *CreateUDF) GetUsageSample() string {
	if x != nil {
		return x.UsageSample
	}
	return ""
}

func (x *CreateUDF) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

// UpdateUDF used as request parameters for RPC and HTTP(based on Body)
type UpdateUDF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The udf id.
	UdfId string `protobuf:"bytes,1,opt,name=udf_id,json=udfId,proto3" json:"udf_id" swaggerignore:"true"`
	// UDF name unique within a space.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// describe this udf.
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment"`
	// define this udf. jar udf this is resourcemanager jarID, is python/scala this is code.
	Define string `protobuf:"bytes,4,opt,name=define,proto3" json:"define"`
	// usage for this udf
	UsageSample string `protobuf:"bytes,5,opt,name=usage_sample,json=usageSample,proto3" json:"usage_sample"`
}

func (x *UpdateUDF) Reset() {
	*x = UpdateUDF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_udf_manage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUDF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUDF) ProtoMessage() {}

func (x *UpdateUDF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_udf_manage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUDF.ProtoReflect.Descriptor instead.
func (*UpdateUDF) Descriptor() ([]byte, []int) {
	return file_proto_types_request_udf_manage_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateUDF) GetUdfId() string {
	if x != nil {
		return x.UdfId
	}
	return ""
}

func (x *UpdateUDF) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUDF) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UpdateUDF) GetDefine() string {
	if x != nil {
		return x.Define
	}
	return ""
}

func (x *UpdateUDF) GetUsageSample() string {
	if x != nil {
		return x.UsageSample
	}
	return ""
}

// DeleteUDF used as request parameters for RPC and HTTP(based on Body)
type DeleteUDF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// delete these UDFIDs
	UdfIds []string `protobuf:"bytes,1,rep,name=udf_ids,json=udfIds,proto3" json:"udf_ids"`
}

func (x *DeleteUDF) Reset() {
	*x = DeleteUDF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_udf_manage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUDF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUDF) ProtoMessage() {}

func (x *DeleteUDF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_udf_manage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUDF.ProtoReflect.Descriptor instead.
func (*DeleteUDF) Descriptor() ([]byte, []int) {
	return file_proto_types_request_udf_manage_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteUDF) GetUdfIds() []string {
	if x != nil {
		return x.UdfIds
	}
	return nil
}

// DescribeUDF used as request parameters for RPC and HTTP(based on Body)
type DescribeUDF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UDFID
	UdfId string `protobuf:"bytes,1,opt,name=udf_id,json=udfId,proto3" json:"udf_id"`
}

func (x *DescribeUDF) Reset() {
	*x = DescribeUDF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_udf_manage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeUDF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUDF) ProtoMessage() {}

func (x *DescribeUDF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_udf_manage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUDF.ProtoReflect.Descriptor instead.
func (*DescribeUDF) Descriptor() ([]byte, []int) {
	return file_proto_types_request_udf_manage_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeUDF) GetUdfId() string {
	if x != nil {
		return x.UdfId
	}
	return ""
}

// ListUDF used as a request parameters for RPC and HTTP(based on URL-Query)
type ListUDF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Limit the maximum number of entries returned this time.
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit" form:"limit"`
	// The offset position. Not required, default 0.
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset" form:"offset"`
	// The field list used to sorted query results.
	// Optional values: {udf_id, name, createtime, updatetime}.
	// Multiple fields are separated by commas(","), eg: sort_by="updated".
	// Not required, default: updated.
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by" form:"sort_by"`
	// Reverse order results. Not required, default: false.
	Reverse bool `protobuf:"varint,4,opt,name=reverse,proto3" json:"reverse" form:"reverse"`
	// Search with name; Not required.
	Search string `protobuf:"bytes,5,opt,name=search,proto3" json:"search" form:"search"`
	// SpaceID; required.
	SpaceId string `protobuf:"bytes,6,opt,name=space_id,json=spaceId,proto3" json:"space_id" uri:"space_id" swaggerignore:"true"`
	// UDF Type one of 1/2/3 1=>UDF/2=>UDTF/3=>UDTTF, default is 1
	UdfType pbmodel.UDFInfo_Type `protobuf:"varint,7,opt,name=udf_type,json=udfType,proto3,enum=model.UDFInfo_Type" json:"udf_type" form:"udf_type"`
}

func (x *ListUDF) Reset() {
	*x = ListUDF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_udf_manage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUDF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUDF) ProtoMessage() {}

func (x *ListUDF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_udf_manage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUDF.ProtoReflect.Descriptor instead.
func (*ListUDF) Descriptor() ([]byte, []int) {
	return file_proto_types_request_udf_manage_proto_rawDescGZIP(), []int{4}
}

func (x *ListUDF) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUDF) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListUDF) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListUDF) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ListUDF) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListUDF) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListUDF) GetUdfType() pbmodel.UDFInfo_Type {
	if x != nil {
		return x.UdfType
	}
	return pbmodel.UDFInfo_Type(0)
}

// UDFCommonFunc used as request parameters for RPC and HTTP(based on Body)
type UDFCommonFunc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The space id.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" swaggerignore:"true"`
}

func (x *UDFCommonFunc) Reset() {
	*x = UDFCommonFunc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_request_udf_manage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UDFCommonFunc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UDFCommonFunc) ProtoMessage() {}

func (x *UDFCommonFunc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_request_udf_manage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UDFCommonFunc.ProtoReflect.Descriptor instead.
func (*UDFCommonFunc) Descriptor() ([]byte, []int) {
	return file_proto_types_request_udf_manage_proto_rawDescGZIP(), []int{5}
}

func (x *UDFCommonFunc) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

var File_proto_types_request_udf_manage_proto protoreflect.FileDescriptor

var file_proto_types_request_udf_manage_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x75, 0x64, 0x66, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x75, 0x64, 0x66, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x03, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x44, 0x46, 0x12, 0x23, 0x0a, 0x06, 0x75, 0x64, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0x88, 0x02,
	0x15, 0x52, 0x05, 0x75, 0x64, 0x66, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f,
	0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x75, 0x64, 0x66, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x55, 0x44, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x07,
	0x75, 0x64, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x75, 0x64, 0x66, 0x5f, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x44, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01,
	0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0b, 0x75, 0x64, 0x66, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x90, 0x02, 0x01, 0x98, 0x02,
	0x41, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07,
	0xc2, 0x01, 0x04, 0x98, 0x02, 0x80, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x29, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0xe2, 0xdf, 0x1f, 0x0d, 0x12, 0x0b, 0xc2, 0x01, 0x08, 0xb0, 0x01, 0x00, 0xc8, 0x01,
	0xa0, 0x9c, 0x01, 0x52, 0x06, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0xc8, 0x01, 0xd0, 0x0f,
	0x52, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x22, 0xdb, 0x01, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x44, 0x46, 0x12, 0x23,
	0x0a, 0x06, 0x75, 0x64, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0x88, 0x02, 0x15, 0x52, 0x05, 0x75, 0x64,
	0x66, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98,
	0x02, 0x41, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x80, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x29, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0xe2, 0xdf, 0x1f, 0x0d, 0x12, 0x0b, 0xc2, 0x01, 0x08, 0xb0, 0x01, 0x00, 0xc8,
	0x01, 0xa0, 0x9c, 0x01, 0x52, 0x06, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x0c,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0xc8, 0x01, 0xd0,
	0x0f, 0x52, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x33,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x44, 0x46, 0x12, 0x26, 0x0a, 0x07, 0x75,
	0x64, 0x66, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf,
	0x1f, 0x09, 0x12, 0x07, 0xea, 0x01, 0x04, 0x28, 0x64, 0x30, 0x00, 0x52, 0x06, 0x75, 0x64, 0x66,
	0x49, 0x64, 0x73, 0x22, 0x32, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55,
	0x44, 0x46, 0x12, 0x23, 0x0a, 0x06, 0x75, 0x64, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0xf0, 0x01, 0x14,
	0x52, 0x05, 0x75, 0x64, 0x66, 0x49, 0x64, 0x22, 0xce, 0x02, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x44, 0x46, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x17, 0xa2, 0xa1, 0x1f, 0x06, 0xaa, 0x06, 0x03, 0x31, 0x30, 0x30, 0xe2, 0xdf,
	0x1f, 0x09, 0x12, 0x07, 0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x00, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xe2, 0xdf, 0x1f, 0x27, 0x12, 0x25,
	0xc2, 0x01, 0x22, 0x4a, 0x00, 0x4a, 0x06, 0x75, 0x64, 0x66, 0x5f, 0x69, 0x64, 0x4a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1e, 0x0a,
	0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04,
	0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2,
	0xdf, 0x1f, 0x00, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x2e, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2,
	0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b,
	0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x75,
	0x64, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x44, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xda, 0x01, 0x02, 0x58, 0x01, 0x52,
	0x07, 0x75, 0x64, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x0d, 0x55, 0x44, 0x46, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f,
	0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x71, 0x0a, 0x24, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x12, 0x50, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x44, 0x46, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x00, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x70, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_request_udf_manage_proto_rawDescOnce sync.Once
	file_proto_types_request_udf_manage_proto_rawDescData = file_proto_types_request_udf_manage_proto_rawDesc
)

func file_proto_types_request_udf_manage_proto_rawDescGZIP() []byte {
	file_proto_types_request_udf_manage_proto_rawDescOnce.Do(func() {
		file_proto_types_request_udf_manage_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_request_udf_manage_proto_rawDescData)
	})
	return file_proto_types_request_udf_manage_proto_rawDescData
}

var file_proto_types_request_udf_manage_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_types_request_udf_manage_proto_goTypes = []interface{}{
	(*CreateUDF)(nil),             // 0: request.CreateUDF
	(*UpdateUDF)(nil),             // 1: request.UpdateUDF
	(*DeleteUDF)(nil),             // 2: request.DeleteUDF
	(*DescribeUDF)(nil),           // 3: request.DescribeUDF
	(*ListUDF)(nil),               // 4: request.ListUDF
	(*UDFCommonFunc)(nil),         // 5: request.UDFCommonFunc
	(pbmodel.UDFInfo_Type)(0),     // 6: model.UDFInfo.Type
	(pbmodel.UDFInfo_Language)(0), // 7: model.UDFInfo.Language
}
var file_proto_types_request_udf_manage_proto_depIdxs = []int32{
	6, // 0: request.CreateUDF.udf_type:type_name -> model.UDFInfo.Type
	7, // 1: request.CreateUDF.udf_language:type_name -> model.UDFInfo.Language
	6, // 2: request.ListUDF.udf_type:type_name -> model.UDFInfo.Type
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_types_request_udf_manage_proto_init() }
func file_proto_types_request_udf_manage_proto_init() {
	if File_proto_types_request_udf_manage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_request_udf_manage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUDF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_udf_manage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUDF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_udf_manage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUDF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_udf_manage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeUDF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_udf_manage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUDF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_request_udf_manage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UDFCommonFunc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_request_udf_manage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_request_udf_manage_proto_goTypes,
		DependencyIndexes: file_proto_types_request_udf_manage_proto_depIdxs,
		MessageInfos:      file_proto_types_request_udf_manage_proto_msgTypes,
	}.Build()
	File_proto_types_request_udf_manage_proto = out.File
	file_proto_types_request_udf_manage_proto_rawDesc = nil
	file_proto_types_request_udf_manage_proto_goTypes = nil
	file_proto_types_request_udf_manage_proto_depIdxs = nil
}
