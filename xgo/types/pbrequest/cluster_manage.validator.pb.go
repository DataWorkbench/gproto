// Code generated by protoc-gen-govalidator. DO NOT EDIT.
// versions:
// 		protoc-gen-govalidator 0.0.1
// source: proto/types/request/cluster_manage.proto

package pbrequest

import (
	pbmodel "github.com/DataWorkbench/gproto/xgo/types/pbmodel"
	_ "github.com/DataWorkbench/gproto/xgo/types/pbmodel/pbflink"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbdefaults"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protovalidator "github.com/yu31/protoc-plugin/xgo/pkg/protovalidator"
	strconv "strconv"
	strings "strings"
)

func (this *DescribeFlinkClusterAPI) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("DescribeFlinkClusterAPI", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("DescribeFlinkClusterAPI", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

func (this *DescribeFlinkClusterAPI) _xxx_xxx_Validator_Validate_cluster_id() error {
	if !(len(this.ClusterId) == 20) {
		return protovalidator.FieldError1("DescribeFlinkClusterAPI", "the byte length of field 'cluster_id' must be equal to '20'", protovalidator.StringByteLenToString(this.ClusterId))
	}
	return nil
}

// Set default value for message request.DescribeFlinkClusterAPI
func (this *DescribeFlinkClusterAPI) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_cluster_id(); err != nil {
		return err
	}
	return nil
}

func (this *ListFlinkClusters) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("ListFlinkClusters", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("ListFlinkClusters", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

func (this *ListFlinkClusters) _xxx_xxx_Validator_Validate_limit() error {
	if !(this.Limit > 0) {
		return protovalidator.FieldError1("ListFlinkClusters", "the value of field 'limit' must be greater than '0'", protovalidator.Int32ToString(this.Limit))
	}
	if !(this.Limit <= 100) {
		return protovalidator.FieldError1("ListFlinkClusters", "the value of field 'limit' must be less than or equal to '100'", protovalidator.Int32ToString(this.Limit))
	}
	return nil
}

func (this *ListFlinkClusters) _xxx_xxx_Validator_Validate_offset() error {
	if !(this.Offset >= 0) {
		return protovalidator.FieldError1("ListFlinkClusters", "the value of field 'offset' must be greater than or equal to '0'", protovalidator.Int32ToString(this.Offset))
	}
	return nil
}

var _xxx_xxx_Validator_ListFlinkClusters_In_SortBy = map[string]bool{"": true, "id": true, "created": true, "updated": true, "name": true}

func (this *ListFlinkClusters) _xxx_xxx_Validator_Validate_sort_by() error {
	if !(_xxx_xxx_Validator_ListFlinkClusters_In_SortBy[this.SortBy]) {
		return protovalidator.FieldError1("ListFlinkClusters", "the value of field 'sort_by' must be one of '[ id created updated name]'", this.SortBy)
	}
	return nil
}

var _xxx_xxx_Validator_ListFlinkClusters_InEnums_Status = map[pbmodel.FlinkCluster_Status]bool{0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true}

func (this *ListFlinkClusters) _xxx_xxx_Validator_Validate_status() error {
	if !(_xxx_xxx_Validator_ListFlinkClusters_InEnums_Status[this.Status]) {
		return protovalidator.FieldError1("ListFlinkClusters", "the value of field 'status' must in enums of '[0 1 2 3 4 5 6]'", protovalidator.Int32ToString(int32(this.Status)))
	}
	return nil
}

// Set default value for message request.ListFlinkClusters
func (this *ListFlinkClusters) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_limit(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_offset(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_sort_by(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_status(); err != nil {
		return err
	}
	return nil
}

func (this *DeleteFlinkClusters) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("DeleteFlinkClusters", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("DeleteFlinkClusters", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

func (this *DeleteFlinkClusters) _xxx_xxx_Validator_Validate_cluster_ids() error {
	if !(len(this.ClusterIds) > 0) {
		return protovalidator.FieldError1("DeleteFlinkClusters", "the length of field 'cluster_ids' must be greater than '0'", strconv.Itoa(len(this.ClusterIds)))
	}
	if !(len(this.ClusterIds) <= 100) {
		return protovalidator.FieldError1("DeleteFlinkClusters", "the length of field 'cluster_ids' must be less than or equal to '100'", strconv.Itoa(len(this.ClusterIds)))
	}
	for _, item := range this.ClusterIds {
		_ = item // To avoid unused panics.
		if !(strings.HasPrefix(item, "cfi-")) {
			return protovalidator.FieldError1("DeleteFlinkClusters", "the value of array item where in field 'cluster_ids' must start with string 'cfi-'", item)
		}
	}
	return nil
}

// Set default value for message request.DeleteFlinkClusters
func (this *DeleteFlinkClusters) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_cluster_ids(); err != nil {
		return err
	}
	return nil
}

func (this *StartFlinkClusters) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("StartFlinkClusters", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("StartFlinkClusters", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

func (this *StartFlinkClusters) _xxx_xxx_Validator_Validate_cluster_ids() error {
	if !(len(this.ClusterIds) > 0) {
		return protovalidator.FieldError1("StartFlinkClusters", "the length of field 'cluster_ids' must be greater than '0'", strconv.Itoa(len(this.ClusterIds)))
	}
	if !(len(this.ClusterIds) <= 100) {
		return protovalidator.FieldError1("StartFlinkClusters", "the length of field 'cluster_ids' must be less than or equal to '100'", strconv.Itoa(len(this.ClusterIds)))
	}
	for _, item := range this.ClusterIds {
		_ = item // To avoid unused panics.
		if !(strings.HasPrefix(item, "cfi-")) {
			return protovalidator.FieldError1("StartFlinkClusters", "the value of array item where in field 'cluster_ids' must start with string 'cfi-'", item)
		}
	}
	return nil
}

// Set default value for message request.StartFlinkClusters
func (this *StartFlinkClusters) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_cluster_ids(); err != nil {
		return err
	}
	return nil
}

func (this *StopFlinkClusters) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("StopFlinkClusters", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("StopFlinkClusters", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

func (this *StopFlinkClusters) _xxx_xxx_Validator_Validate_cluster_ids() error {
	if !(len(this.ClusterIds) > 0) {
		return protovalidator.FieldError1("StopFlinkClusters", "the length of field 'cluster_ids' must be greater than '0'", strconv.Itoa(len(this.ClusterIds)))
	}
	if !(len(this.ClusterIds) <= 100) {
		return protovalidator.FieldError1("StopFlinkClusters", "the length of field 'cluster_ids' must be less than or equal to '100'", strconv.Itoa(len(this.ClusterIds)))
	}
	for _, item := range this.ClusterIds {
		_ = item // To avoid unused panics.
		if !(strings.HasPrefix(item, "cfi-")) {
			return protovalidator.FieldError1("StopFlinkClusters", "the value of array item where in field 'cluster_ids' must start with string 'cfi-'", item)
		}
	}
	return nil
}

// Set default value for message request.StopFlinkClusters
func (this *StopFlinkClusters) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_cluster_ids(); err != nil {
		return err
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_created_by() error {
	if !(len(this.CreatedBy) < 65) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the byte length of field 'created_by' must be less than '65'", protovalidator.StringByteLenToString(this.CreatedBy))
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_name() error {
	if !(len(this.Name) > 1) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the byte length of field 'name' must be greater than '1'", protovalidator.StringByteLenToString(this.Name))
	}
	if !(len(this.Name) <= 128) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the byte length of field 'name' must be less than or equal to '128'", protovalidator.StringByteLenToString(this.Name))
	}
	return nil
}

var _xxx_xxx_Validator_CreateFlinkCluster_In_Version = map[string]bool{"flink-1.12.3-scala_2.11": true}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_version() error {
	if !(_xxx_xxx_Validator_CreateFlinkCluster_In_Version[this.Version]) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'version' must be one of '[flink-1.12.3-scala_2.11]'", this.Version)
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_task_num() error {
	if !(this.TaskNum >= 1) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'task_num' must be greater than or equal to '1'", protovalidator.Int32ToString(this.TaskNum))
	}
	if !(this.TaskNum <= 24) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'task_num' must be less than or equal to '24'", protovalidator.Int32ToString(this.TaskNum))
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_job_cu() error {
	if !(this.JobCu >= 0.500000) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'job_cu' must be greater than or equal to '0.5'", protovalidator.Float32ToString(this.JobCu))
	}
	if !(this.JobCu <= 8.000000) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'job_cu' must be less than or equal to '8'", protovalidator.Float32ToString(this.JobCu))
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_task_cu() error {
	if !(this.TaskCu >= 0.500000) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'task_cu' must be greater than or equal to '0.5'", protovalidator.Float32ToString(this.TaskCu))
	}
	if !(this.TaskCu <= 8.000000) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'task_cu' must be less than or equal to '8'", protovalidator.Float32ToString(this.TaskCu))
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_network_id() error {
	if !(len(this.NetworkId) == 20) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the byte length of field 'network_id' must be equal to '20'", protovalidator.StringByteLenToString(this.NetworkId))
	}
	if !(strings.HasPrefix(this.NetworkId, "net-")) {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'network_id' must start with string 'net-'", this.NetworkId)
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_host_aliases() error {
	if dt, ok := interface{}(this.HostAliases).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_config() error {
	if dt, ok := interface{}(this.Config).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (this *CreateFlinkCluster) _xxx_xxx_Validator_Validate_space_owner() error {
	if !(this.SpaceOwner != "") {
		return protovalidator.FieldError1("CreateFlinkCluster", "the value of field 'space_owner' must be not equal to ''", this.SpaceOwner)
	}
	return nil
}

// Set default value for message request.CreateFlinkCluster
func (this *CreateFlinkCluster) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_created_by(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_name(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_version(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_task_num(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_job_cu(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_task_cu(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_network_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_host_aliases(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_config(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_space_owner(); err != nil {
		return err
	}
	return nil
}

func (this *UpdateFlinkCluster) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

func (this *UpdateFlinkCluster) _xxx_xxx_Validator_Validate_cluster_id() error {
	if !(len(this.ClusterId) == 20) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the byte length of field 'cluster_id' must be equal to '20'", protovalidator.StringByteLenToString(this.ClusterId))
	}
	if !(strings.HasPrefix(this.ClusterId, "cfi-")) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the value of field 'cluster_id' must start with string 'cfi-'", this.ClusterId)
	}
	return nil
}

func (this *UpdateFlinkCluster) _xxx_xxx_Validator_Validate_name() error {
	if !(len(this.Name) > 1) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the byte length of field 'name' must be greater than '1'", protovalidator.StringByteLenToString(this.Name))
	}
	if !(len(this.Name) <= 128) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the byte length of field 'name' must be less than or equal to '128'", protovalidator.StringByteLenToString(this.Name))
	}
	return nil
}

func (this *UpdateFlinkCluster) _xxx_xxx_Validator_Validate_task_num() error {
	if !(this.TaskNum >= 1) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the value of field 'task_num' must be greater than or equal to '1'", protovalidator.Int32ToString(this.TaskNum))
	}
	if !(this.TaskNum <= 24) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the value of field 'task_num' must be less than or equal to '24'", protovalidator.Int32ToString(this.TaskNum))
	}
	return nil
}

func (this *UpdateFlinkCluster) _xxx_xxx_Validator_Validate_job_cu() error {
	if !(this.JobCu >= 0.500000) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the value of field 'job_cu' must be greater than or equal to '0.5'", protovalidator.Float32ToString(this.JobCu))
	}
	if !(this.JobCu <= 8.000000) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the value of field 'job_cu' must be less than or equal to '8'", protovalidator.Float32ToString(this.JobCu))
	}
	return nil
}

func (this *UpdateFlinkCluster) _xxx_xxx_Validator_Validate_task_cu() error {
	if !(this.TaskCu >= 0.500000) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the value of field 'task_cu' must be greater than or equal to '0.5'", protovalidator.Float32ToString(this.TaskCu))
	}
	if !(this.TaskCu <= 8.000000) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the value of field 'task_cu' must be less than or equal to '8'", protovalidator.Float32ToString(this.TaskCu))
	}
	return nil
}

func (this *UpdateFlinkCluster) _xxx_xxx_Validator_Validate_network_id() error {
	if !(len(this.NetworkId) == 20) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the byte length of field 'network_id' must be equal to '20'", protovalidator.StringByteLenToString(this.NetworkId))
	}
	if !(strings.HasPrefix(this.NetworkId, "net-")) {
		return protovalidator.FieldError1("UpdateFlinkCluster", "the value of field 'network_id' must start with string 'net-'", this.NetworkId)
	}
	return nil
}

func (this *UpdateFlinkCluster) _xxx_xxx_Validator_Validate_host_aliases() error {
	if dt, ok := interface{}(this.HostAliases).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (this *UpdateFlinkCluster) _xxx_xxx_Validator_Validate_config() error {
	if dt, ok := interface{}(this.Config).(interface{ Validate() error }); ok {
		if err := dt.Validate(); err != nil {
			return err
		}
	}
	return nil
}

// Set default value for message request.UpdateFlinkCluster
func (this *UpdateFlinkCluster) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_cluster_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_name(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_task_num(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_job_cu(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_task_cu(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_network_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_host_aliases(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_config(); err != nil {
		return err
	}
	return nil
}

func (this *DescribeFlinkCluster) _xxx_xxx_Validator_Validate_cluster_id() error {
	if !(len(this.ClusterId) == 20) {
		return protovalidator.FieldError1("DescribeFlinkCluster", "the byte length of field 'cluster_id' must be equal to '20'", protovalidator.StringByteLenToString(this.ClusterId))
	}
	if !(strings.HasPrefix(this.ClusterId, "cfi-")) {
		return protovalidator.FieldError1("DescribeFlinkCluster", "the value of field 'cluster_id' must start with string 'cfi-'", this.ClusterId)
	}
	return nil
}

// Set default value for message request.DescribeFlinkCluster
func (this *DescribeFlinkCluster) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_cluster_id(); err != nil {
		return err
	}
	return nil
}
