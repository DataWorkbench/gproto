// Code generated by protoc-gen-govalidator. DO NOT EDIT.
// versions:
// 		protoc-gen-govalidator 0.0.1
// source: proto/types/request/notifier.proto

package pbrequest

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protovalidator "github.com/yu31/protoc-plugin/xgo/pkg/protovalidator"
	strconv "strconv"
)

func (this *SendNotification) _xxx_xxx_Validator_Validate_nf_list_ids() error {
	if !(len(this.NfListIds) > 0) {
		return protovalidator.FieldError1("SendNotification", "the length of field 'nf_list_ids' must be greater than '0'", strconv.Itoa(len(this.NfListIds)))
	}
	if !(len(this.NfListIds) <= 100) {
		return protovalidator.FieldError1("SendNotification", "the length of field 'nf_list_ids' must be less than or equal to '100'", strconv.Itoa(len(this.NfListIds)))
	}
	return nil
}

func (this *SendNotification) _xxx_xxx_Validator_Validate_title() error {
	if !(len(this.Title) > 0) {
		return protovalidator.FieldError1("SendNotification", "the byte length of field 'title' must be greater than '0'", protovalidator.StringByteLenToString(this.Title))
	}
	return nil
}

func (this *SendNotification) _xxx_xxx_Validator_Validate_subject() error {
	if !(len(this.Subject) > 0) {
		return protovalidator.FieldError1("SendNotification", "the byte length of field 'subject' must be greater than '0'", protovalidator.StringByteLenToString(this.Subject))
	}
	return nil
}

func (this *SendNotification) _xxx_xxx_Validator_Validate_content() error {
	if !(len(this.Content) > 0) {
		return protovalidator.FieldError1("SendNotification", "the byte length of field 'content' must be greater than '0'", protovalidator.StringByteLenToString(this.Content))
	}
	return nil
}

// Set default value for message request.SendNotification
func (this *SendNotification) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_nf_list_ids(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_title(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_subject(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_content(); err != nil {
		return err
	}
	return nil
}
