// Code generated by protoc-gen-godefaults. DO NOT EDIT.
// versions:
// 		protoc-gen-godefaults 0.0.2
// source: proto/types/model/flink/flink_operator.proto

package pbflink

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
)

// Set default value for message flink.ColumnAs
func (this *ColumnAs) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.DestOperator
func (this *DestOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.ValuesOperator
func (this *ValuesOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.ValuesOperator.ValuesType
func (this *ValuesOperator_ValuesType) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.OrderByOperator
func (this *OrderByOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.OrderByOperator.OrderByColumn
func (this *OrderByOperator_OrderByColumn) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.LimitOperator
func (this *LimitOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.OffsetOperator
func (this *OffsetOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.FetchOperator
func (this *FetchOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.UnionOperator
func (this *UnionOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.GroupByOperator
func (this *GroupByOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.HavingOperator
func (this *HavingOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.ConstOperator
func (this *ConstOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.SourceOperator
func (this *SourceOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.DimensionOperator
func (this *DimensionOperator) SetDefaults() {
	if this == nil {
		return
	}
	if this.TimeColumn != nil {
		if dt, ok := interface{}(this.TimeColumn).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message flink.ExceptOperator
func (this *ExceptOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.IntersectOperator
func (this *IntersectOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.FilterOperator
func (this *FilterOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.JoinOperator
func (this *JoinOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.UDTFOperator
func (this *UDTFOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.UDTTFOperator
func (this *UDTTFOperator) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.OperatorProperty
func (this *OperatorProperty) SetDefaults() {
	if this == nil {
		return
	}
	if this.Source != nil {
		if dt, ok := interface{}(this.Source).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Dest != nil {
		if dt, ok := interface{}(this.Dest).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Values != nil {
		if dt, ok := interface{}(this.Values).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.OrderBy != nil {
		if dt, ok := interface{}(this.OrderBy).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Limit != nil {
		if dt, ok := interface{}(this.Limit).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Offset != nil {
		if dt, ok := interface{}(this.Offset).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Fetch != nil {
		if dt, ok := interface{}(this.Fetch).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Union != nil {
		if dt, ok := interface{}(this.Union).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.GroupBy != nil {
		if dt, ok := interface{}(this.GroupBy).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Having != nil {
		if dt, ok := interface{}(this.Having).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Const != nil {
		if dt, ok := interface{}(this.Const).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Dimension != nil {
		if dt, ok := interface{}(this.Dimension).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Except != nil {
		if dt, ok := interface{}(this.Except).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Intersect != nil {
		if dt, ok := interface{}(this.Intersect).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Filter != nil {
		if dt, ok := interface{}(this.Filter).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Udtf != nil {
		if dt, ok := interface{}(this.Udtf).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Udttf != nil {
		if dt, ok := interface{}(this.Udttf).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Join != nil {
		if dt, ok := interface{}(this.Join).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}
