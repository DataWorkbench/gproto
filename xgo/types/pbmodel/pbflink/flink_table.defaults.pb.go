// Code generated by protoc-gen-godefaults. DO NOT EDIT.
// versions:
// 		protoc-gen-godefaults 0.0.1
// source: proto/types/model/flink/flink_table.proto

package pbflink

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbgosql"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
)

// Set default value for message flink.SqlColumnType
func (this *SqlColumnType) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.SqlTimeColumnType
func (this *SqlTimeColumnType) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.ConnectorOption
func (this *ConnectorOption) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.MySQLTable
func (this *MySQLTable) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.PostgreSQLTable
func (this *PostgreSQLTable) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.ClickHouseTable
func (this *ClickHouseTable) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.HBaseTable
func (this *HBaseTable) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.HDFSTable
func (this *HDFSTable) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.S3Table
func (this *S3Table) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.FtpTable
func (this *FtpTable) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.KafkaTable
func (this *KafkaTable) SetDefaults() {
	if this == nil {
		return
	}
	return
}

// Set default value for message flink.TableSchema
func (this *TableSchema) SetDefaults() {
	if this == nil {
		return
	}
	if this.Mysql != nil {
		if dt, ok := interface{}(this.Mysql).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Postgresql != nil {
		if dt, ok := interface{}(this.Postgresql).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Clickhouse != nil {
		if dt, ok := interface{}(this.Clickhouse).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Hbase != nil {
		if dt, ok := interface{}(this.Hbase).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Kafka != nil {
		if dt, ok := interface{}(this.Kafka).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.S3 != nil {
		if dt, ok := interface{}(this.S3).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Ftp != nil {
		if dt, ok := interface{}(this.Ftp).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.Hdfs != nil {
		if dt, ok := interface{}(this.Hdfs).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}
