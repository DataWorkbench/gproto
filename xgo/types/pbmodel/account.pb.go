// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/model/account.proto

package pbmodel

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role_Type int32

const (
	Role_TypeUnset Role_Type = 0 // useless.
	Role_Admin     Role_Type = 1
	Role_Developer Role_Type = 2
	Role_User      Role_Type = 3
	Role_Visitor   Role_Type = 4
)

// Enum value maps for Role_Type.
var (
	Role_Type_name = map[int32]string{
		0: "TypeUnset",
		1: "Admin",
		2: "Developer",
		3: "User",
		4: "Visitor",
	}
	Role_Type_value = map[string]int32{
		"TypeUnset": 0,
		"Admin":     1,
		"Developer": 2,
		"User":      3,
		"Visitor":   4,
	}
)

func (x Role_Type) Enum() *Role_Type {
	p := new(Role_Type)
	*p = x
	return p
}

func (x Role_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_account_proto_enumTypes[0].Descriptor()
}

func (Role_Type) Type() protoreflect.EnumType {
	return &file_proto_types_model_account_proto_enumTypes[0]
}

func (x Role_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role_Type.Descriptor instead.
func (Role_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{0, 0}
}

type AdminModule_Classify int32

const (
	AdminModule_ClassifyUnSet      AdminModule_Classify = 0
	AdminModule_UserManage         AdminModule_Classify = 1
	AdminModule_SessionManage      AdminModule_Classify = 2
	AdminModule_MessageManage      AdminModule_Classify = 3
	AdminModule_AuthManage         AdminModule_Classify = 4
	AdminModule_NotificationManage AdminModule_Classify = 5
)

// Enum value maps for AdminModule_Classify.
var (
	AdminModule_Classify_name = map[int32]string{
		0: "ClassifyUnSet",
		1: "UserManage",
		2: "SessionManage",
		3: "MessageManage",
		4: "AuthManage",
		5: "NotificationManage",
	}
	AdminModule_Classify_value = map[string]int32{
		"ClassifyUnSet":      0,
		"UserManage":         1,
		"SessionManage":      2,
		"MessageManage":      3,
		"AuthManage":         4,
		"NotificationManage": 5,
	}
)

func (x AdminModule_Classify) Enum() *AdminModule_Classify {
	p := new(AdminModule_Classify)
	*p = x
	return p
}

func (x AdminModule_Classify) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminModule_Classify) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_account_proto_enumTypes[1].Descriptor()
}

func (AdminModule_Classify) Type() protoreflect.EnumType {
	return &file_proto_types_model_account_proto_enumTypes[1]
}

func (x AdminModule_Classify) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminModule_Classify.Descriptor instead.
func (AdminModule_Classify) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{1, 0}
}

type AdminAPI_PermType int32

const (
	AdminAPI_PermTypeUnset AdminAPI_PermType = 0 // is useless.
	AdminAPI_Write         AdminAPI_PermType = 1
	AdminAPI_Read          AdminAPI_PermType = 2
)

// Enum value maps for AdminAPI_PermType.
var (
	AdminAPI_PermType_name = map[int32]string{
		0: "PermTypeUnset",
		1: "Write",
		2: "Read",
	}
	AdminAPI_PermType_value = map[string]int32{
		"PermTypeUnset": 0,
		"Write":         1,
		"Read":          2,
	}
)

func (x AdminAPI_PermType) Enum() *AdminAPI_PermType {
	p := new(AdminAPI_PermType)
	*p = x
	return p
}

func (x AdminAPI_PermType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminAPI_PermType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_account_proto_enumTypes[2].Descriptor()
}

func (AdminAPI_PermType) Type() protoreflect.EnumType {
	return &file_proto_types_model_account_proto_enumTypes[2]
}

func (x AdminAPI_PermType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminAPI_PermType.Descriptor instead.
func (AdminAPI_PermType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{2, 0}
}

type User_Status int32

const (
	User__StatusUnset User_Status = 0
	User_active       User_Status = 1
)

// Enum value maps for User_Status.
var (
	User_Status_name = map[int32]string{
		0: "_StatusUnset",
		1: "active",
	}
	User_Status_value = map[string]int32{
		"_StatusUnset": 0,
		"active":       1,
	}
)

func (x User_Status) Enum() *User_Status {
	p := new(User_Status)
	*p = x
	return p
}

func (x User_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_account_proto_enumTypes[3].Descriptor()
}

func (User_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_account_proto_enumTypes[3]
}

func (x User_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_Status.Descriptor instead.
func (User_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{3, 0}
}

type AccessKey_Controller int32

const (
	AccessKey__ControllerUnset AccessKey_Controller = 0
	AccessKey_pitrix           AccessKey_Controller = 1
	AccessKey_self             AccessKey_Controller = 2
)

// Enum value maps for AccessKey_Controller.
var (
	AccessKey_Controller_name = map[int32]string{
		0: "_ControllerUnset",
		1: "pitrix",
		2: "self",
	}
	AccessKey_Controller_value = map[string]int32{
		"_ControllerUnset": 0,
		"pitrix":           1,
		"self":             2,
	}
)

func (x AccessKey_Controller) Enum() *AccessKey_Controller {
	p := new(AccessKey_Controller)
	*p = x
	return p
}

func (x AccessKey_Controller) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessKey_Controller) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_account_proto_enumTypes[4].Descriptor()
}

func (AccessKey_Controller) Type() protoreflect.EnumType {
	return &file_proto_types_model_account_proto_enumTypes[4]
}

func (x AccessKey_Controller) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessKey_Controller.Descriptor instead.
func (AccessKey_Controller) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{4, 0}
}

type AccessKey_Status int32

const (
	AccessKey__StatusUnset AccessKey_Status = 0
	AccessKey_active       AccessKey_Status = 1
)

// Enum value maps for AccessKey_Status.
var (
	AccessKey_Status_name = map[int32]string{
		0: "_StatusUnset",
		1: "active",
	}
	AccessKey_Status_value = map[string]int32{
		"_StatusUnset": 0,
		"active":       1,
	}
)

func (x AccessKey_Status) Enum() *AccessKey_Status {
	p := new(AccessKey_Status)
	*p = x
	return p
}

func (x AccessKey_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessKey_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_account_proto_enumTypes[5].Descriptor()
}

func (AccessKey_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_account_proto_enumTypes[5]
}

func (x AccessKey_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessKey_Status.Descriptor instead.
func (AccessKey_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{4, 1}
}

// Role declares the information of built-in role.
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Type Role_Type `protobuf:"varint,2,opt,name=type,proto3,enum=model.Role_Type" json:"type"`
	Name string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{0}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetType() Role_Type {
	if x != nil {
		return x.Type
	}
	return Role_TypeUnset
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// AdminModule declares the module information in the admin.
type AdminModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The module id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// The module classify.
	Classify AdminModule_Classify `protobuf:"varint,2,opt,name=classify,proto3,enum=model.AdminModule_Classify" json:"classify"`
	// Name is the display name of this Module. Is user readable.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// ApiList represents the list of APIs belonging to this module
	ApiLists []*AdminAPI `protobuf:"bytes,4,rep,name=api_lists,json=apiLists,proto3" json:"api_lists"`
}

func (x *AdminModule) Reset() {
	*x = AdminModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminModule) ProtoMessage() {}

func (x *AdminModule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminModule.ProtoReflect.Descriptor instead.
func (*AdminModule) Descriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{1}
}

func (x *AdminModule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdminModule) GetClassify() AdminModule_Classify {
	if x != nil {
		return x.Classify
	}
	return AdminModule_ClassifyUnSet
}

func (x *AdminModule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminModule) GetApiLists() []*AdminAPI {
	if x != nil {
		return x.ApiLists
	}
	return nil
}

// APIDesc is the information of API description.
type AdminAPI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// APIName represents the action of this API. Default is the API Handler Func Name.
	// It cannot be modified after publishing.
	ApiName string `protobuf:"bytes,1,opt,name=api_name,json=apiName,proto3" json:"api_name"`
	// DisplayName is the display of this API. Is user readable.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name"`
	// PermType is the api permission type. 1 => "Write" 2 => "Read"
	// Default type: HTTP Method GET/OPTIONS is `read`, PUT/POST/DELETE/PATCH is `write`
	PermType AdminAPI_PermType `protobuf:"varint,3,opt,name=perm_type,json=permType,proto3,enum=model.AdminAPI_PermType" json:"perm_type"`
	// Permissions for defines permission of this API.
	Permissions []*AdminAPI_Permission `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions"`
	// Roles is a map to defines the permissions of this API.
	// It set by func registerHandler. Only used to check permission.
	Roles map[string]bool `protobuf:"bytes,6,rep,name=roles,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" swaggerignore:"true"`
}

func (x *AdminAPI) Reset() {
	*x = AdminAPI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAPI) ProtoMessage() {}

func (x *AdminAPI) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAPI.ProtoReflect.Descriptor instead.
func (*AdminAPI) Descriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{2}
}

func (x *AdminAPI) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *AdminAPI) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *AdminAPI) GetPermType() AdminAPI_PermType {
	if x != nil {
		return x.PermType
	}
	return AdminAPI_PermTypeUnset
}

func (x *AdminAPI) GetPermissions() []*AdminAPI_Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *AdminAPI) GetRoles() map[string]bool {
	if x != nil {
		return x.Roles
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name"`
	// Language "zh-cn" | "en-us"
	Lang          string   `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang"`
	Email         string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email"`
	RootUserId    string   `protobuf:"bytes,5,opt,name=root_user_id,json=rootUserId,proto3" json:"root_user_id"`
	Role          string   `protobuf:"bytes,6,opt,name=role,proto3" json:"role"`
	Privilege     int32    `protobuf:"varint,7,opt,name=privilege,proto3" json:"privilege"`
	Status        string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status"`
	Zones         []string `protobuf:"bytes,9,rep,name=zones,proto3" json:"zones"`
	Regions       []string `protobuf:"bytes,10,rep,name=regions,proto3" json:"regions"`
	NotifyEmail   string   `protobuf:"bytes,11,opt,name=notify_email,json=notifyEmail,proto3" json:"notify_email"`
	VerifyType    string   `protobuf:"bytes,12,opt,name=verify_type,json=verifyType,proto3" json:"verify_type"`
	PaidMode      string   `protobuf:"bytes,13,opt,name=paid_mode,json=paidMode,proto3" json:"paid_mode"`
	GravatarEmail string   `protobuf:"bytes,14,opt,name=gravatar_email,json=gravatarEmail,proto3" json:"gravatar_email"`
	PersonalName  string   `protobuf:"bytes,15,opt,name=personal_name,json=personalName,proto3" json:"personal_name"`
	CompanyName   string   `protobuf:"bytes,16,opt,name=company_name,json=companyName,proto3" json:"company_name"`
	CompanyPhone  string   `protobuf:"bytes,17,opt,name=company_phone,json=companyPhone,proto3" json:"company_phone"`
	CompanyCode   string   `protobuf:"bytes,18,opt,name=company_code,json=companyCode,proto3" json:"company_code"`
	Phone         string   `protobuf:"bytes,19,opt,name=phone,proto3" json:"phone"`
	ConsoleId     string   `protobuf:"bytes,20,opt,name=console_id,json=consoleId,proto3" json:"console_id"`
	Gender        string   `protobuf:"bytes,21,opt,name=gender,proto3" json:"gender"`
	Remarks       string   `protobuf:"bytes,22,opt,name=remarks,proto3" json:"remarks"`
	MktSource     string   `protobuf:"bytes,23,opt,name=mkt_source,json=mktSource,proto3" json:"mkt_source"`
	CreateTime    string   `protobuf:"bytes,24,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	StatusTime    string   `protobuf:"bytes,25,opt,name=status_time,json=statusTime,proto3" json:"status_time"`
	// 0: root user, 1: sub user.
	UserType int32 `protobuf:"varint,26,opt,name=user_type,json=userType,proto3" json:"user_type"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetRootUserId() string {
	if x != nil {
		return x.RootUserId
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *User) GetPrivilege() int32 {
	if x != nil {
		return x.Privilege
	}
	return 0
}

func (x *User) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *User) GetZones() []string {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *User) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

func (x *User) GetNotifyEmail() string {
	if x != nil {
		return x.NotifyEmail
	}
	return ""
}

func (x *User) GetVerifyType() string {
	if x != nil {
		return x.VerifyType
	}
	return ""
}

func (x *User) GetPaidMode() string {
	if x != nil {
		return x.PaidMode
	}
	return ""
}

func (x *User) GetGravatarEmail() string {
	if x != nil {
		return x.GravatarEmail
	}
	return ""
}

func (x *User) GetPersonalName() string {
	if x != nil {
		return x.PersonalName
	}
	return ""
}

func (x *User) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *User) GetCompanyPhone() string {
	if x != nil {
		return x.CompanyPhone
	}
	return ""
}

func (x *User) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetConsoleId() string {
	if x != nil {
		return x.ConsoleId
	}
	return ""
}

func (x *User) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *User) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *User) GetMktSource() string {
	if x != nil {
		return x.MktSource
	}
	return ""
}

func (x *User) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *User) GetStatusTime() string {
	if x != nil {
		return x.StatusTime
	}
	return ""
}

func (x *User) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type AccessKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey string `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
	Owner           string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	RootUserId      string `protobuf:"bytes,4,opt,name=root_user_id,json=rootUserId,proto3" json:"root_user_id,omitempty"`
	Status          string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Description     string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	IpWhiteList     string `protobuf:"bytes,7,opt,name=ip_white_list,json=ipWhiteList,proto3" json:"ip_white_list,omitempty"`
	ConsoleId       string `protobuf:"bytes,8,opt,name=console_id,json=consoleId,proto3" json:"console_id,omitempty"`
	CreateTime      string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StatusTime      string `protobuf:"bytes,10,opt,name=status_time,json=statusTime,proto3" json:"status_time,omitempty"`
	Controller      string `protobuf:"bytes,11,opt,name=controller,proto3" json:"controller,omitempty"`
}

func (x *AccessKey) Reset() {
	*x = AccessKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKey) ProtoMessage() {}

func (x *AccessKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKey.ProtoReflect.Descriptor instead.
func (*AccessKey) Descriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{4}
}

func (x *AccessKey) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AccessKey) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *AccessKey) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *AccessKey) GetRootUserId() string {
	if x != nil {
		return x.RootUserId
	}
	return ""
}

func (x *AccessKey) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AccessKey) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AccessKey) GetIpWhiteList() string {
	if x != nil {
		return x.IpWhiteList
	}
	return ""
}

func (x *AccessKey) GetConsoleId() string {
	if x != nil {
		return x.ConsoleId
	}
	return ""
}

func (x *AccessKey) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AccessKey) GetStatusTime() string {
	if x != nil {
		return x.StatusTime
	}
	return ""
}

func (x *AccessKey) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

type NotificationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime           string                   `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	NotificationListId   string                   `protobuf:"bytes,3,opt,name=notification_list_id,json=notificationListId,proto3" json:"notification_list_id"`
	NotificationListName string                   `protobuf:"bytes,4,opt,name=notification_list_name,json=notificationListName,proto3" json:"notification_list_name"`
	Owner                string                   `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner"`
	Items                []*NotificationList_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *NotificationList) Reset() {
	*x = NotificationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationList) ProtoMessage() {}

func (x *NotificationList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationList.ProtoReflect.Descriptor instead.
func (*NotificationList) Descriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{5}
}

func (x *NotificationList) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *NotificationList) GetNotificationListId() string {
	if x != nil {
		return x.NotificationListId
	}
	return ""
}

func (x *NotificationList) GetNotificationListName() string {
	if x != nil {
		return x.NotificationListName
	}
	return ""
}

func (x *NotificationList) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *NotificationList) GetItems() []*NotificationList_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// notification
// FIXME: removed it.
type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// messager receiver
	Recipient string `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Note      string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	Status    string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UserId    string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Id        int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{6}
}

func (x *Notification) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *Notification) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Notification) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Notification) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Notification) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Notification) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Notification) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Notification) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdminAPI_Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The adm role info.
	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role"`
	// Indicates whether the specified role allows access to this API
	Allowed bool `protobuf:"varint,2,opt,name=allowed,proto3" json:"allowed"`
}

func (x *AdminAPI_Permission) Reset() {
	*x = AdminAPI_Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAPI_Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAPI_Permission) ProtoMessage() {}

func (x *AdminAPI_Permission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAPI_Permission.ProtoReflect.Descriptor instead.
func (*AdminAPI_Permission) Descriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AdminAPI_Permission) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AdminAPI_Permission) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

type NotificationList_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The content of notification item set.
	// The value is email address if notification_item_type == "email".
	// The value is phone number is notification_item_type == "phone".
	// The value is webhook address if notification_item_type == "webhook".
	Content            string `protobuf:"bytes,1,opt,name=content,proto3" json:"content"`
	CreateTime         string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	NotificationItemId string `protobuf:"bytes,3,opt,name=notification_item_id,json=notificationItemId,proto3" json:"notification_item_id"`
	// The notification type. Optional Values: email|phone|webhook
	NotificationItemType string `protobuf:"bytes,4,opt,name=notification_item_type,json=notificationItemType,proto3" json:"notification_item_type"`
	// The item whether verified. 1 for true, 0 for false.
	Verified int32 `protobuf:"varint,5,opt,name=verified,proto3" json:"verified"`
}

func (x *NotificationList_Item) Reset() {
	*x = NotificationList_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationList_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationList_Item) ProtoMessage() {}

func (x *NotificationList_Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationList_Item.ProtoReflect.Descriptor instead.
func (*NotificationList_Item) Descriptor() ([]byte, []int) {
	return file_proto_types_model_account_proto_rawDescGZIP(), []int{5, 0}
}

func (x *NotificationList_Item) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotificationList_Item) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *NotificationList_Item) GetNotificationItemId() string {
	if x != nil {
		return x.NotificationItemId
	}
	return ""
}

func (x *NotificationList_Item) GetNotificationItemType() string {
	if x != nil {
		return x.NotificationItemType
	}
	return ""
}

func (x *NotificationList_Item) GetVerified() int32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

var File_proto_types_model_account_proto protoreflect.FileDescriptor

var file_proto_types_model_account_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01,
	0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14,
	0xca, 0x02, 0x04, 0x72, 0x6f, 0x73, 0x2d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x46, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x10, 0x04, 0x22, 0xc6, 0x02, 0x0a, 0x0b, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a,
	0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x70, 0x6d, 0x6f, 0x2d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46,
	0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x42, 0x0d, 0xe2,
	0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x08, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x08, 0x61, 0x70, 0x69,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x7b, 0x0a, 0x08, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x55, 0x6e, 0x53,
	0x65, 0x74, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x75,
	0x74, 0x68, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x10, 0x05, 0x22, 0xe9, 0x03, 0x0a, 0x08, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x12,
	0x26, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00, 0x52, 0x07,
	0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2,
	0xdf, 0x1f, 0x07, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30,
	0x00, 0x58, 0x01, 0x52, 0x08, 0x70, 0x65, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x50, 0x49, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0b,
	0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xea, 0x01, 0x02, 0x30, 0x00, 0x52, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xf2, 0x01, 0x02, 0x30, 0x00,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x47, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x1a, 0x38, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x08, 0x50, 0x65,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x10, 0x02, 0x22, 0xa7,
	0x06, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x69, 0x64, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x69, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x72, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6b, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6b, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x26, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x5f, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x22, 0xd4, 0x03, 0x0a, 0x09, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x70, 0x5f, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x38, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x5f,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x70, 0x69, 0x74, 0x72, 0x69, 0x78, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x73, 0x65, 0x6c, 0x66, 0x10, 0x02, 0x22, 0x26, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x0c, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x22,
	0xad, 0x03, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xc5, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22,
	0xd5, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x42, 0x69, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x0e, 0x50,
	0x42, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x00, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61,
	0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_model_account_proto_rawDescOnce sync.Once
	file_proto_types_model_account_proto_rawDescData = file_proto_types_model_account_proto_rawDesc
)

func file_proto_types_model_account_proto_rawDescGZIP() []byte {
	file_proto_types_model_account_proto_rawDescOnce.Do(func() {
		file_proto_types_model_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_model_account_proto_rawDescData)
	})
	return file_proto_types_model_account_proto_rawDescData
}

var file_proto_types_model_account_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_types_model_account_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_types_model_account_proto_goTypes = []interface{}{
	(Role_Type)(0),                // 0: model.Role.Type
	(AdminModule_Classify)(0),     // 1: model.AdminModule.Classify
	(AdminAPI_PermType)(0),        // 2: model.AdminAPI.PermType
	(User_Status)(0),              // 3: model.User.Status
	(AccessKey_Controller)(0),     // 4: model.AccessKey.Controller
	(AccessKey_Status)(0),         // 5: model.AccessKey.Status
	(*Role)(nil),                  // 6: model.Role
	(*AdminModule)(nil),           // 7: model.AdminModule
	(*AdminAPI)(nil),              // 8: model.AdminAPI
	(*User)(nil),                  // 9: model.User
	(*AccessKey)(nil),             // 10: model.AccessKey
	(*NotificationList)(nil),      // 11: model.NotificationList
	(*Notification)(nil),          // 12: model.Notification
	(*AdminAPI_Permission)(nil),   // 13: model.AdminAPI.Permission
	nil,                           // 14: model.AdminAPI.RolesEntry
	(*NotificationList_Item)(nil), // 15: model.NotificationList.Item
}
var file_proto_types_model_account_proto_depIdxs = []int32{
	0,  // 0: model.Role.type:type_name -> model.Role.Type
	1,  // 1: model.AdminModule.classify:type_name -> model.AdminModule.Classify
	8,  // 2: model.AdminModule.api_lists:type_name -> model.AdminAPI
	2,  // 3: model.AdminAPI.perm_type:type_name -> model.AdminAPI.PermType
	13, // 4: model.AdminAPI.permissions:type_name -> model.AdminAPI.Permission
	14, // 5: model.AdminAPI.roles:type_name -> model.AdminAPI.RolesEntry
	15, // 6: model.NotificationList.items:type_name -> model.NotificationList.Item
	6,  // 7: model.AdminAPI.Permission.role:type_name -> model.Role
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_types_model_account_proto_init() }
func file_proto_types_model_account_proto_init() {
	if File_proto_types_model_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_model_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAPI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAPI_Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationList_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_model_account_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_model_account_proto_goTypes,
		DependencyIndexes: file_proto_types_model_account_proto_depIdxs,
		EnumInfos:         file_proto_types_model_account_proto_enumTypes,
		MessageInfos:      file_proto_types_model_account_proto_msgTypes,
	}.Build()
	File_proto_types_model_account_proto = out.File
	file_proto_types_model_account_proto_rawDesc = nil
	file_proto_types_model_account_proto_goTypes = nil
	file_proto_types_model_account_proto_depIdxs = nil
}
