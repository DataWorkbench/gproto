// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/model/cluster.proto

package pbmodel

import (
	pbflink "github.com/DataWorkbench/gproto/xgo/types/pbmodel/pbflink"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbgosql"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlinkCluster_Status int32

const (
	FlinkCluster_StatusUnset FlinkCluster_Status = 0
	FlinkCluster_Deleted     FlinkCluster_Status = 1
	FlinkCluster_Running     FlinkCluster_Status = 2
	FlinkCluster_Stopped     FlinkCluster_Status = 3
	FlinkCluster_Starting    FlinkCluster_Status = 4
	FlinkCluster_Exception   FlinkCluster_Status = 5
	FlinkCluster_Arrears     FlinkCluster_Status = 6
)

// Enum value maps for FlinkCluster_Status.
var (
	FlinkCluster_Status_name = map[int32]string{
		0: "StatusUnset",
		1: "Deleted",
		2: "Running",
		3: "Stopped",
		4: "Starting",
		5: "Exception",
		6: "Arrears",
	}
	FlinkCluster_Status_value = map[string]int32{
		"StatusUnset": 0,
		"Deleted":     1,
		"Running":     2,
		"Stopped":     3,
		"Starting":    4,
		"Exception":   5,
		"Arrears":     6,
	}
)

func (x FlinkCluster_Status) Enum() *FlinkCluster_Status {
	p := new(FlinkCluster_Status)
	*p = x
	return p
}

func (x FlinkCluster_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlinkCluster_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_cluster_proto_enumTypes[0].Descriptor()
}

func (FlinkCluster_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_cluster_proto_enumTypes[0]
}

func (x FlinkCluster_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlinkCluster_Status.Descriptor instead.
func (FlinkCluster_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_cluster_proto_rawDescGZIP(), []int{1, 0}
}

// HostAliases
type HostAliases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The hostname aliases.
	Items []*HostAliases_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`
}

func (x *HostAliases) Reset() {
	*x = HostAliases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAliases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAliases) ProtoMessage() {}

func (x *HostAliases) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAliases.ProtoReflect.Descriptor instead.
func (*HostAliases) Descriptor() ([]byte, []int) {
	return file_proto_types_model_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *HostAliases) GetItems() []*HostAliases_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// FlinkCluster is schema for flink (session) cluster.
type FlinkCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" gorm:"column:space_id;"`
	// Review it.
	// Cluster ID, unique within a region. generated by server.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id" gorm:"column:id;primarykey;"`
	// Cluster Name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" gorm:"column:name;"`
	// Flink Version. Optional value: "flink-1.12.3-scala_2.11"
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version" gorm:"column:version;"`
	// Cluster Status. 1 => "deleted" 2 => "running" 3 => "stopped" 4 => "starting" 5 => "exception" 6 => "Arrears"
	Status FlinkCluster_Status `protobuf:"varint,5,opt,name=status,proto3,enum=model.FlinkCluster_Status" json:"status" gorm:"column:status;"`
	// resource config.
	//
	// Flink task number for TaskManager. Is required, Min 1, Max ?
	TaskNum int32 `protobuf:"varint,6,opt,name=task_num,json=taskNum,proto3" json:"task_num" gorm:"column:task_num;"`
	// Flink JobManager's cpu and memory. 1CU = 1C + 4GB. Is required, Min 0.5, Max 8
	JobCu float32 `protobuf:"fixed32,7,opt,name=job_cu,json=jobCu,proto3" json:"job_cu" gorm:"column:job_cu;"`
	// Flink TaskManager's cpu and memory. 1CU = 1C + 4GB. Is required, Min 0.5, Max 8
	TaskCu float32 `protobuf:"fixed32,8,opt,name=task_cu,json=taskCu,proto3" json:"task_cu" gorm:"column:task_cu;"`
	// Network config.
	NetworkId string `protobuf:"bytes,9,opt,name=network_id,json=networkId,proto3" json:"network_id" gorm:"column:network_id;"`
	// Config of host aliases. Not required.
	HostAliases *HostAliases `protobuf:"bytes,10,opt,name=host_aliases,json=hostAliases,proto3" json:"host_aliases" gorm:"column:host_aliases;"`
	// Flink config.
	Config *pbflink.FlinkConfig `protobuf:"bytes,11,opt,name=config,proto3" json:"config" gorm:"column:config;"`
	// The user-id of created this cluster.
	CreatedBy string `protobuf:"bytes,12,opt,name=created_by,json=createdBy,proto3" json:"created_by" gorm:"column:created_by;"`
	// Timestamp of create time.
	Created int64 `protobuf:"varint,13,opt,name=created,proto3" json:"created" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time.
	Updated int64 `protobuf:"varint,14,opt,name=updated,proto3" json:"updated" gorm:"column:updated;autoUpdateTime;"`
	// URL of Flink UI, generated by server.
	// "<-:false" means read only field. see https://gorm.io/zh_CN/docs/models.html
	WebUi       string   `protobuf:"bytes,15,opt,name=web_ui,json=webUi,proto3" json:"web_ui" gorm:"column:web_ui;<-:false"`
	NetworkInfo *Network `protobuf:"bytes,16,opt,name=network_info,json=networkInfo,proto3" json:"network_info" gorm:"-"`
}

func (x *FlinkCluster) Reset() {
	*x = FlinkCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlinkCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlinkCluster) ProtoMessage() {}

func (x *FlinkCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlinkCluster.ProtoReflect.Descriptor instead.
func (*FlinkCluster) Descriptor() ([]byte, []int) {
	return file_proto_types_model_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *FlinkCluster) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *FlinkCluster) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FlinkCluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlinkCluster) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FlinkCluster) GetStatus() FlinkCluster_Status {
	if x != nil {
		return x.Status
	}
	return FlinkCluster_StatusUnset
}

func (x *FlinkCluster) GetTaskNum() int32 {
	if x != nil {
		return x.TaskNum
	}
	return 0
}

func (x *FlinkCluster) GetJobCu() float32 {
	if x != nil {
		return x.JobCu
	}
	return 0
}

func (x *FlinkCluster) GetTaskCu() float32 {
	if x != nil {
		return x.TaskCu
	}
	return 0
}

func (x *FlinkCluster) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *FlinkCluster) GetHostAliases() *HostAliases {
	if x != nil {
		return x.HostAliases
	}
	return nil
}

func (x *FlinkCluster) GetConfig() *pbflink.FlinkConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *FlinkCluster) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *FlinkCluster) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *FlinkCluster) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *FlinkCluster) GetWebUi() string {
	if x != nil {
		return x.WebUi
	}
	return ""
}

func (x *FlinkCluster) GetNetworkInfo() *Network {
	if x != nil {
		return x.NetworkInfo
	}
	return nil
}

type HostAliases_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip       string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip"`
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname"`
}

func (x *HostAliases_Item) Reset() {
	*x = HostAliases_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAliases_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAliases_Item) ProtoMessage() {}

func (x *HostAliases_Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAliases_Item.ProtoReflect.Descriptor instead.
func (*HostAliases_Item) Descriptor() ([]byte, []int) {
	return file_proto_types_model_cluster_proto_rawDescGZIP(), []int{0, 0}
}

func (x *HostAliases_Item) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *HostAliases_Item) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

var File_proto_types_model_cluster_proto protoreflect.FileDescriptor

var file_proto_types_model_cluster_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x0b,
	0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0x4e, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0xb0,
	0x06, 0x01, 0x52, 0x02, 0x69, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06,
	0xc2, 0x01, 0x03, 0xb0, 0x07, 0x01, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x3a, 0x06, 0xca, 0xb2, 0x04, 0x02, 0x0a, 0x00, 0x22, 0xe1, 0x06, 0x0a, 0x0c, 0x46, 0x6c, 0x69,
	0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f,
	0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a,
	0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x63, 0x66, 0x69, 0x2d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf,
	0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x90, 0x02, 0x02, 0x98, 0x02, 0x80, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xe2, 0xdf, 0x1f, 0x1e, 0x12, 0x1c, 0xc2, 0x01, 0x19,
	0x4a, 0x17, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x2d, 0x31, 0x2e, 0x31, 0x32, 0x2e, 0x33, 0x2d, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x5f, 0x32, 0x2e, 0x31, 0x31, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6c, 0x69, 0x6e, 0x6b,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d,
	0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2,
	0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x32, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x42, 0x1b, 0xe2,
	0xdf, 0x1f, 0x17, 0x12, 0x15, 0xaa, 0x01, 0x12, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
	0x40, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x3f, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x43,
	0x75, 0x12, 0x34, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x75, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x42, 0x1b, 0xe2, 0xdf, 0x1f, 0x17, 0x12, 0x15, 0xaa, 0x01, 0x12, 0x39, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x20, 0x40, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x3f, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x75, 0x12, 0x23, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f,
	0x00, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0c,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0b, 0x68, 0x6f,
	0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x46, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x04, 0xe2,
	0xdf, 0x1f, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0x98, 0x02, 0x40, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12,
	0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x69,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x65, 0x62, 0x55, 0x69, 0x12, 0x31, 0x0a,
	0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x6a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x10, 0x06, 0x42, 0x69, 0x0a, 0x22,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x42, 0x0e, 0x50, 0x42, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x00, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x70, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_model_cluster_proto_rawDescOnce sync.Once
	file_proto_types_model_cluster_proto_rawDescData = file_proto_types_model_cluster_proto_rawDesc
)

func file_proto_types_model_cluster_proto_rawDescGZIP() []byte {
	file_proto_types_model_cluster_proto_rawDescOnce.Do(func() {
		file_proto_types_model_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_model_cluster_proto_rawDescData)
	})
	return file_proto_types_model_cluster_proto_rawDescData
}

var file_proto_types_model_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_types_model_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_types_model_cluster_proto_goTypes = []interface{}{
	(FlinkCluster_Status)(0),    // 0: model.FlinkCluster.Status
	(*HostAliases)(nil),         // 1: model.HostAliases
	(*FlinkCluster)(nil),        // 2: model.FlinkCluster
	(*HostAliases_Item)(nil),    // 3: model.HostAliases.Item
	(*pbflink.FlinkConfig)(nil), // 4: flink.FlinkConfig
	(*Network)(nil),             // 5: model.Network
}
var file_proto_types_model_cluster_proto_depIdxs = []int32{
	3, // 0: model.HostAliases.items:type_name -> model.HostAliases.Item
	0, // 1: model.FlinkCluster.status:type_name -> model.FlinkCluster.Status
	1, // 2: model.FlinkCluster.host_aliases:type_name -> model.HostAliases
	4, // 3: model.FlinkCluster.config:type_name -> flink.FlinkConfig
	5, // 4: model.FlinkCluster.network_info:type_name -> model.Network
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_types_model_cluster_proto_init() }
func file_proto_types_model_cluster_proto_init() {
	if File_proto_types_model_cluster_proto != nil {
		return
	}
	file_proto_types_model_network_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_types_model_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAliases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlinkCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAliases_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_model_cluster_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_model_cluster_proto_goTypes,
		DependencyIndexes: file_proto_types_model_cluster_proto_depIdxs,
		EnumInfos:         file_proto_types_model_cluster_proto_enumTypes,
		MessageInfos:      file_proto_types_model_cluster_proto_msgTypes,
	}.Build()
	File_proto_types_model_cluster_proto = out.File
	file_proto_types_model_cluster_proto_rawDesc = nil
	file_proto_types_model_cluster_proto_goTypes = nil
	file_proto_types_model_cluster_proto_depIdxs = nil
}
