// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/model/role.proto

package pbmodel

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CustomRole_Status int32

const (
	CustomRole_StatusUnset CustomRole_Status = 0
	CustomRole_Deleted     CustomRole_Status = 1
	CustomRole_Enabled     CustomRole_Status = 2
)

// Enum value maps for CustomRole_Status.
var (
	CustomRole_Status_name = map[int32]string{
		0: "StatusUnset",
		1: "Deleted",
		2: "Enabled",
	}
	CustomRole_Status_value = map[string]int32{
		"StatusUnset": 0,
		"Deleted":     1,
		"Enabled":     2,
	}
)

func (x CustomRole_Status) Enum() *CustomRole_Status {
	p := new(CustomRole_Status)
	*p = x
	return p
}

func (x CustomRole_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomRole_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_role_proto_enumTypes[0].Descriptor()
}

func (CustomRole_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_role_proto_enumTypes[0]
}

func (x CustomRole_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomRole_Status.Descriptor instead.
func (CustomRole_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_role_proto_rawDescGZIP(), []int{0, 0}
}

type SystemRole_Type int32

const (
	SystemRole_TypeUnset      SystemRole_Type = 0 // useless.
	SystemRole_SpaceAdmin     SystemRole_Type = 1
	SystemRole_SpaceDeveloper SystemRole_Type = 2
	SystemRole_SpaceOperator  SystemRole_Type = 3
	SystemRole_SpaceVisitor   SystemRole_Type = 4
)

// Enum value maps for SystemRole_Type.
var (
	SystemRole_Type_name = map[int32]string{
		0: "TypeUnset",
		1: "SpaceAdmin",
		2: "SpaceDeveloper",
		3: "SpaceOperator",
		4: "SpaceVisitor",
	}
	SystemRole_Type_value = map[string]int32{
		"TypeUnset":      0,
		"SpaceAdmin":     1,
		"SpaceDeveloper": 2,
		"SpaceOperator":  3,
		"SpaceVisitor":   4,
	}
)

func (x SystemRole_Type) Enum() *SystemRole_Type {
	p := new(SystemRole_Type)
	*p = x
	return p
}

func (x SystemRole_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemRole_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_role_proto_enumTypes[1].Descriptor()
}

func (SystemRole_Type) Type() protoreflect.EnumType {
	return &file_proto_types_model_role_proto_enumTypes[1]
}

func (x SystemRole_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemRole_Type.Descriptor instead.
func (SystemRole_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_role_proto_rawDescGZIP(), []int{1, 0}
}

type ProjectModule_Classify int32

const (
	ProjectModule_ClassifyUnSet ProjectModule_Classify = 0
	// Module In project.
	ProjectModule_AuditManage  ProjectModule_Classify = 1
	ProjectModule_ProjectQuota ProjectModule_Classify = 2
	ProjectModule_SpaceManage  ProjectModule_Classify = 3
	// Module In workspace;
	ProjectModule_WorkspaceQuota          ProjectModule_Classify = 4
	ProjectModule_MemberManage            ProjectModule_Classify = 5
	ProjectModule_RoleManage              ProjectModule_Classify = 6
	ProjectModule_DataSourceMange         ProjectModule_Classify = 7
	ProjectModule_UDFManage               ProjectModule_Classify = 8
	ProjectModule_FileManage              ProjectModule_Classify = 9
	ProjectModule_NetworkMange            ProjectModule_Classify = 10
	ProjectModule_ClusterMange            ProjectModule_Classify = 11
	ProjectModule_StreamJobDevMange       ProjectModule_Classify = 12
	ProjectModule_StreamJobReleaseManage  ProjectModule_Classify = 13
	ProjectModule_StreamJobVersionManage  ProjectModule_Classify = 14
	ProjectModule_StreamJobInstanceManage ProjectModule_Classify = 15
	ProjectModule_SyncJobDevMange         ProjectModule_Classify = 16
	ProjectModule_SyncJobReleaseManage    ProjectModule_Classify = 17
	ProjectModule_SyncJobVersionManage    ProjectModule_Classify = 18
	ProjectModule_SyncJobInstanceManage   ProjectModule_Classify = 19
)

// Enum value maps for ProjectModule_Classify.
var (
	ProjectModule_Classify_name = map[int32]string{
		0:  "ClassifyUnSet",
		1:  "AuditManage",
		2:  "ProjectQuota",
		3:  "SpaceManage",
		4:  "WorkspaceQuota",
		5:  "MemberManage",
		6:  "RoleManage",
		7:  "DataSourceMange",
		8:  "UDFManage",
		9:  "FileManage",
		10: "NetworkMange",
		11: "ClusterMange",
		12: "StreamJobDevMange",
		13: "StreamJobReleaseManage",
		14: "StreamJobVersionManage",
		15: "StreamJobInstanceManage",
		16: "SyncJobDevMange",
		17: "SyncJobReleaseManage",
		18: "SyncJobVersionManage",
		19: "SyncJobInstanceManage",
	}
	ProjectModule_Classify_value = map[string]int32{
		"ClassifyUnSet":           0,
		"AuditManage":             1,
		"ProjectQuota":            2,
		"SpaceManage":             3,
		"WorkspaceQuota":          4,
		"MemberManage":            5,
		"RoleManage":              6,
		"DataSourceMange":         7,
		"UDFManage":               8,
		"FileManage":              9,
		"NetworkMange":            10,
		"ClusterMange":            11,
		"StreamJobDevMange":       12,
		"StreamJobReleaseManage":  13,
		"StreamJobVersionManage":  14,
		"StreamJobInstanceManage": 15,
		"SyncJobDevMange":         16,
		"SyncJobReleaseManage":    17,
		"SyncJobVersionManage":    18,
		"SyncJobInstanceManage":   19,
	}
)

func (x ProjectModule_Classify) Enum() *ProjectModule_Classify {
	p := new(ProjectModule_Classify)
	*p = x
	return p
}

func (x ProjectModule_Classify) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectModule_Classify) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_role_proto_enumTypes[2].Descriptor()
}

func (ProjectModule_Classify) Type() protoreflect.EnumType {
	return &file_proto_types_model_role_proto_enumTypes[2]
}

func (x ProjectModule_Classify) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectModule_Classify.Descriptor instead.
func (ProjectModule_Classify) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_role_proto_rawDescGZIP(), []int{2, 0}
}

type ProjectAPI_PermType int32

const (
	ProjectAPI_PermTypeUnset ProjectAPI_PermType = 0 // is useless.
	ProjectAPI_Write         ProjectAPI_PermType = 1
	ProjectAPI_Read          ProjectAPI_PermType = 2
)

// Enum value maps for ProjectAPI_PermType.
var (
	ProjectAPI_PermType_name = map[int32]string{
		0: "PermTypeUnset",
		1: "Write",
		2: "Read",
	}
	ProjectAPI_PermType_value = map[string]int32{
		"PermTypeUnset": 0,
		"Write":         1,
		"Read":          2,
	}
)

func (x ProjectAPI_PermType) Enum() *ProjectAPI_PermType {
	p := new(ProjectAPI_PermType)
	*p = x
	return p
}

func (x ProjectAPI_PermType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectAPI_PermType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_role_proto_enumTypes[3].Descriptor()
}

func (ProjectAPI_PermType) Type() protoreflect.EnumType {
	return &file_proto_types_model_role_proto_enumTypes[3]
}

func (x ProjectAPI_PermType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectAPI_PermType.Descriptor instead.
func (ProjectAPI_PermType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_role_proto_rawDescGZIP(), []int{3, 0}
}

// TODO: reserved, unused on present.
type CustomRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The workspace id.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" gorm:"column:space_id;"`
	// The role id.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id" gorm:"column:id;primarykey;"`
	// The name of role. unique in a workspace.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" gorm:"column:name;"`
	// Description for this Role. Not required. Max Charset Length: 1024.
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc" gorm:"column:desc;"`
	// Status. 1 => "Deleted" 2 => "Enabled"
	Status CustomRole_Status `protobuf:"varint,5,opt,name=status,proto3,enum=model.CustomRole_Status" json:"status" gorm:"column:status;"`
	// The id list of project module that separated by commas. eg: 'pmo-xxx,pmo-xxx'
	ModuleIds string `protobuf:"bytes,6,opt,name=module_ids,json=moduleIds,proto3" json:"module_ids" gorm:"column:module_ids;"`
	// Allowed operation kind for specified modules.
	PermType ProjectAPI_PermType `protobuf:"varint,7,opt,name=perm_type,json=permType,proto3,enum=model.ProjectAPI_PermType" json:"perm_type" gorm:"column:perm_type;"`
	// The list of api name that separated by commas. eg: 'ListWorkspace,CreateWorkspace'
	ApiNames string `protobuf:"bytes,8,opt,name=api_names,json=apiNames,proto3" json:"api_names" gorm:"column:api_names;"`
	// Timestamp of create time.
	Created int64 `protobuf:"varint,9,opt,name=created,proto3" json:"created" gorm:"column:created;autoCreateTime;"`
	// Timestamp of update time.
	Updated int64 `protobuf:"varint,10,opt,name=updated,proto3" json:"updated" gorm:"column:updated;autoUpdateTime;"`
}

func (x *CustomRole) Reset() {
	*x = CustomRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomRole) ProtoMessage() {}

func (x *CustomRole) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomRole.ProtoReflect.Descriptor instead.
func (*CustomRole) Descriptor() ([]byte, []int) {
	return file_proto_types_model_role_proto_rawDescGZIP(), []int{0}
}

func (x *CustomRole) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *CustomRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CustomRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomRole) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CustomRole) GetStatus() CustomRole_Status {
	if x != nil {
		return x.Status
	}
	return CustomRole_StatusUnset
}

func (x *CustomRole) GetModuleIds() string {
	if x != nil {
		return x.ModuleIds
	}
	return ""
}

func (x *CustomRole) GetPermType() ProjectAPI_PermType {
	if x != nil {
		return x.PermType
	}
	return ProjectAPI_PermTypeUnset
}

func (x *CustomRole) GetApiNames() string {
	if x != nil {
		return x.ApiNames
	}
	return ""
}

func (x *CustomRole) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *CustomRole) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// SystemRole declares the information of built-in role.
type SystemRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Type SystemRole_Type `protobuf:"varint,2,opt,name=type,proto3,enum=model.SystemRole_Type" json:"type"`
	Name string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
}

func (x *SystemRole) Reset() {
	*x = SystemRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRole) ProtoMessage() {}

func (x *SystemRole) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRole.ProtoReflect.Descriptor instead.
func (*SystemRole) Descriptor() ([]byte, []int) {
	return file_proto_types_model_role_proto_rawDescGZIP(), []int{1}
}

func (x *SystemRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SystemRole) GetType() SystemRole_Type {
	if x != nil {
		return x.Type
	}
	return SystemRole_TypeUnset
}

func (x *SystemRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ProjectModule declares the module information in the project.
type ProjectModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The module id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// The module name.
	Classify ProjectModule_Classify `protobuf:"varint,2,opt,name=classify,proto3,enum=model.ProjectModule_Classify" json:"classify"`
	// DisplayName is the display name of this Module. Is user readable.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// ApiList represents the list of APIs belonging to this module
	ApiLists []*ProjectAPI `protobuf:"bytes,4,rep,name=api_lists,json=apiLists,proto3" json:"api_lists"`
}

func (x *ProjectModule) Reset() {
	*x = ProjectModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectModule) ProtoMessage() {}

func (x *ProjectModule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectModule.ProtoReflect.Descriptor instead.
func (*ProjectModule) Descriptor() ([]byte, []int) {
	return file_proto_types_model_role_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectModule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProjectModule) GetClassify() ProjectModule_Classify {
	if x != nil {
		return x.Classify
	}
	return ProjectModule_ClassifyUnSet
}

func (x *ProjectModule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectModule) GetApiLists() []*ProjectAPI {
	if x != nil {
		return x.ApiLists
	}
	return nil
}

// APIDesc is the information of API description.
type ProjectAPI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// APIName represents the action of this API. Default is the API Handler Func Name.
	// It cannot be modified after publishing.
	ApiName string `protobuf:"bytes,1,opt,name=api_name,json=apiName,proto3" json:"api_name"`
	// DisplayName is the display of this API. Is user readable.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name"`
	// PermType is the api permission type. 1 => "Write" 2 => "Read"
	// Default type: HTTP Method GET/OPTIONS is `read`, PUT/POST/DELETE/PATCH is `write`
	PermType ProjectAPI_PermType `protobuf:"varint,3,opt,name=perm_type,json=permType,proto3,enum=model.ProjectAPI_PermType" json:"perm_type"`
	// Permissions for defines permission of this API.
	Permissions []*ProjectAPI_Permission `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions"`
	// SystemRoles is a map to defines the permissions of this API.
	// It set by func registerHandler. Only used to check permission.
	SystemRoles map[string]bool `protobuf:"bytes,6,rep,name=system_roles,json=systemRoles,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" swaggerignore:"true"`
}

func (x *ProjectAPI) Reset() {
	*x = ProjectAPI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectAPI) ProtoMessage() {}

func (x *ProjectAPI) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectAPI.ProtoReflect.Descriptor instead.
func (*ProjectAPI) Descriptor() ([]byte, []int) {
	return file_proto_types_model_role_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectAPI) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *ProjectAPI) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ProjectAPI) GetPermType() ProjectAPI_PermType {
	if x != nil {
		return x.PermType
	}
	return ProjectAPI_PermTypeUnset
}

func (x *ProjectAPI) GetPermissions() []*ProjectAPI_Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *ProjectAPI) GetSystemRoles() map[string]bool {
	if x != nil {
		return x.SystemRoles
	}
	return nil
}

type ProjectAPI_Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The system role info.
	SystemRole *SystemRole `protobuf:"bytes,1,opt,name=system_role,json=systemRole,proto3" json:"system_role"`
	// Indicates whether the specified role allows access to this API
	Allowed bool `protobuf:"varint,2,opt,name=allowed,proto3" json:"allowed"`
}

func (x *ProjectAPI_Permission) Reset() {
	*x = ProjectAPI_Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectAPI_Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectAPI_Permission) ProtoMessage() {}

func (x *ProjectAPI_Permission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_role_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectAPI_Permission.ProtoReflect.Descriptor instead.
func (*ProjectAPI_Permission) Descriptor() ([]byte, []int) {
	return file_proto_types_model_role_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ProjectAPI_Permission) GetSystemRole() *SystemRole {
	if x != nil {
		return x.SystemRole
	}
	return nil
}

func (x *ProjectAPI_Permission) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

var File_proto_types_model_role_proto protoreflect.FileDescriptor

var file_proto_types_model_role_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x03, 0x0a, 0x0a, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f,
	0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03,
	0xf0, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07,
	0x90, 0x02, 0x01, 0x98, 0x02, 0x80, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0xc8, 0x01, 0x80, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52,
	0x6f, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09,
	0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04,
	0x98, 0x02, 0x80, 0x08, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x5f, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x26,
	0xe2, 0xdf, 0x1f, 0x15, 0x0a, 0x13, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda,
	0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x08, 0x70, 0x65, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x22, 0xed, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca,
	0x02, 0x04, 0x72, 0x6f, 0x73, 0x2d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x10, 0x04, 0x22, 0x81, 0x05, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0,
	0x01, 0x14, 0xca, 0x02, 0x04, 0x70, 0x6d, 0x6f, 0x2d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x48, 0x0a,
	0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x42, 0x0d,
	0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x08, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xc2, 0x01, 0x02,
	0x22, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x50, 0x49, 0x52, 0x08,
	0x61, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0xaf, 0x03, 0x0a, 0x08, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x55, 0x6e, 0x53, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x10, 0x04,
	0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x44, 0x46, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x76, 0x4d, 0x61, 0x6e, 0x67, 0x65, 0x10,
	0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x0d, 0x12, 0x1a, 0x0a,
	0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x0e, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f,
	0x62, 0x44, 0x65, 0x76, 0x4d, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x10, 0x12, 0x18, 0x0a, 0x14, 0x53,
	0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x10, 0x11, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x12, 0x12,
	0x19, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10, 0x13, 0x22, 0x9d, 0x04, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x50, 0x49, 0x12, 0x26, 0x0a, 0x08, 0x61, 0x70, 0x69,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f,
	0x07, 0x12, 0x05, 0xc2, 0x01, 0x02, 0x22, 0x00, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xc2,
	0x01, 0x02, 0x22, 0x00, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x46, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52,
	0x08, 0x70, 0x65, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x50,
	0x49, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0xe2, 0xdf,
	0x1f, 0x07, 0x12, 0x05, 0xea, 0x01, 0x02, 0x30, 0x00, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x50, 0x49, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xf2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x0b, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x5a, 0x0a, 0x0a, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x1a, 0x3e, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e,
	0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x10, 0x02, 0x42, 0x66, 0x0a, 0x22, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x42, 0x0b, 0x50, 0x42, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x00, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61,
	0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_model_role_proto_rawDescOnce sync.Once
	file_proto_types_model_role_proto_rawDescData = file_proto_types_model_role_proto_rawDesc
)

func file_proto_types_model_role_proto_rawDescGZIP() []byte {
	file_proto_types_model_role_proto_rawDescOnce.Do(func() {
		file_proto_types_model_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_model_role_proto_rawDescData)
	})
	return file_proto_types_model_role_proto_rawDescData
}

var file_proto_types_model_role_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_types_model_role_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_types_model_role_proto_goTypes = []interface{}{
	(CustomRole_Status)(0),        // 0: model.CustomRole.Status
	(SystemRole_Type)(0),          // 1: model.SystemRole.Type
	(ProjectModule_Classify)(0),   // 2: model.ProjectModule.Classify
	(ProjectAPI_PermType)(0),      // 3: model.ProjectAPI.PermType
	(*CustomRole)(nil),            // 4: model.CustomRole
	(*SystemRole)(nil),            // 5: model.SystemRole
	(*ProjectModule)(nil),         // 6: model.ProjectModule
	(*ProjectAPI)(nil),            // 7: model.ProjectAPI
	(*ProjectAPI_Permission)(nil), // 8: model.ProjectAPI.Permission
	nil,                           // 9: model.ProjectAPI.SystemRolesEntry
}
var file_proto_types_model_role_proto_depIdxs = []int32{
	0, // 0: model.CustomRole.status:type_name -> model.CustomRole.Status
	3, // 1: model.CustomRole.perm_type:type_name -> model.ProjectAPI.PermType
	1, // 2: model.SystemRole.type:type_name -> model.SystemRole.Type
	2, // 3: model.ProjectModule.classify:type_name -> model.ProjectModule.Classify
	7, // 4: model.ProjectModule.api_lists:type_name -> model.ProjectAPI
	3, // 5: model.ProjectAPI.perm_type:type_name -> model.ProjectAPI.PermType
	8, // 6: model.ProjectAPI.permissions:type_name -> model.ProjectAPI.Permission
	9, // 7: model.ProjectAPI.system_roles:type_name -> model.ProjectAPI.SystemRolesEntry
	5, // 8: model.ProjectAPI.Permission.system_role:type_name -> model.SystemRole
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_proto_types_model_role_proto_init() }
func file_proto_types_model_role_proto_init() {
	if File_proto_types_model_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_model_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectAPI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectAPI_Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_model_role_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_model_role_proto_goTypes,
		DependencyIndexes: file_proto_types_model_role_proto_depIdxs,
		EnumInfos:         file_proto_types_model_role_proto_enumTypes,
		MessageInfos:      file_proto_types_model_role_proto_msgTypes,
	}.Build()
	File_proto_types_model_role_proto = out.File
	file_proto_types_model_role_proto_rawDesc = nil
	file_proto_types_model_role_proto_goTypes = nil
	file_proto_types_model_role_proto_depIdxs = nil
}
