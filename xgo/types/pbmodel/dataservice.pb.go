// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/model/dataservice.proto

package pbmodel

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbdefaults"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbgosql"
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParameterDataType int32

const (
	ParameterDataType_TypeUnset ParameterDataType = 0
	ParameterDataType_String    ParameterDataType = 1
	ParameterDataType_Int       ParameterDataType = 2
	//  Long = 3;
	//  Float = 4;
	ParameterDataType_Double  ParameterDataType = 3
	ParameterDataType_Boolean ParameterDataType = 4 // JSON  = 8
)

// Enum value maps for ParameterDataType.
var (
	ParameterDataType_name = map[int32]string{
		0: "TypeUnset",
		1: "String",
		2: "Int",
		3: "Double",
		4: "Boolean",
	}
	ParameterDataType_value = map[string]int32{
		"TypeUnset": 0,
		"String":    1,
		"Int":       2,
		"Double":    3,
		"Boolean":   4,
	}
)

func (x ParameterDataType) Enum() *ParameterDataType {
	p := new(ParameterDataType)
	*p = x
	return p
}

func (x ParameterDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParameterDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[0].Descriptor()
}

func (ParameterDataType) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[0]
}

func (x ParameterDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParameterDataType.Descriptor instead.
func (ParameterDataType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{0}
}

type DataServiceCluster_Status int32

const (
	DataServiceCluster_StatusUnset DataServiceCluster_Status = 0
	DataServiceCluster_Deleted     DataServiceCluster_Status = 1
	DataServiceCluster_Running     DataServiceCluster_Status = 2
	DataServiceCluster_Stopped     DataServiceCluster_Status = 3
	DataServiceCluster_Starting    DataServiceCluster_Status = 4
	DataServiceCluster_Exception   DataServiceCluster_Status = 5
	DataServiceCluster_Arrears     DataServiceCluster_Status = 6
)

// Enum value maps for DataServiceCluster_Status.
var (
	DataServiceCluster_Status_name = map[int32]string{
		0: "StatusUnset",
		1: "Deleted",
		2: "Running",
		3: "Stopped",
		4: "Starting",
		5: "Exception",
		6: "Arrears",
	}
	DataServiceCluster_Status_value = map[string]int32{
		"StatusUnset": 0,
		"Deleted":     1,
		"Running":     2,
		"Stopped":     3,
		"Starting":    4,
		"Exception":   5,
		"Arrears":     6,
	}
)

func (x DataServiceCluster_Status) Enum() *DataServiceCluster_Status {
	p := new(DataServiceCluster_Status)
	*p = x
	return p
}

func (x DataServiceCluster_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataServiceCluster_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[1].Descriptor()
}

func (DataServiceCluster_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[1]
}

func (x DataServiceCluster_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataServiceCluster_Status.Descriptor instead.
func (DataServiceCluster_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{0, 0}
}

type DataServiceCluster_ResourceSpec int32

const (
	DataServiceCluster_SpecUnset DataServiceCluster_ResourceSpec = 0
	DataServiceCluster_Entry     DataServiceCluster_ResourceSpec = 1
	DataServiceCluster_Basics    DataServiceCluster_ResourceSpec = 2
	DataServiceCluster_Major     DataServiceCluster_ResourceSpec = 3
)

// Enum value maps for DataServiceCluster_ResourceSpec.
var (
	DataServiceCluster_ResourceSpec_name = map[int32]string{
		0: "SpecUnset",
		1: "Entry",
		2: "Basics",
		3: "Major",
	}
	DataServiceCluster_ResourceSpec_value = map[string]int32{
		"SpecUnset": 0,
		"Entry":     1,
		"Basics":    2,
		"Major":     3,
	}
)

func (x DataServiceCluster_ResourceSpec) Enum() *DataServiceCluster_ResourceSpec {
	p := new(DataServiceCluster_ResourceSpec)
	*p = x
	return p
}

func (x DataServiceCluster_ResourceSpec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataServiceCluster_ResourceSpec) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[2].Descriptor()
}

func (DataServiceCluster_ResourceSpec) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[2]
}

func (x DataServiceCluster_ResourceSpec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataServiceCluster_ResourceSpec.Descriptor instead.
func (DataServiceCluster_ResourceSpec) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{0, 1}
}

type ApiGroup_Status int32

const (
	ApiGroup_StatusUnset ApiGroup_Status = 0
	ApiGroup_Deleted     ApiGroup_Status = 1
	ApiGroup_Enabled     ApiGroup_Status = 2
)

// Enum value maps for ApiGroup_Status.
var (
	ApiGroup_Status_name = map[int32]string{
		0: "StatusUnset",
		1: "Deleted",
		2: "Enabled",
	}
	ApiGroup_Status_value = map[string]int32{
		"StatusUnset": 0,
		"Deleted":     1,
		"Enabled":     2,
	}
)

func (x ApiGroup_Status) Enum() *ApiGroup_Status {
	p := new(ApiGroup_Status)
	*p = x
	return p
}

func (x ApiGroup_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiGroup_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[3].Descriptor()
}

func (ApiGroup_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[3]
}

func (x ApiGroup_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiGroup_Status.Descriptor instead.
func (ApiGroup_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{1, 0}
}

type ApiConfigProperty_ApiMode int32

const (
	ApiConfigProperty_ModeUnset ApiConfigProperty_ApiMode = 0
	ApiConfigProperty_Wizard    ApiConfigProperty_ApiMode = 1
	ApiConfigProperty_Script    ApiConfigProperty_ApiMode = 2
)

// Enum value maps for ApiConfigProperty_ApiMode.
var (
	ApiConfigProperty_ApiMode_name = map[int32]string{
		0: "ModeUnset",
		1: "Wizard",
		2: "Script",
	}
	ApiConfigProperty_ApiMode_value = map[string]int32{
		"ModeUnset": 0,
		"Wizard":    1,
		"Script":    2,
	}
)

func (x ApiConfigProperty_ApiMode) Enum() *ApiConfigProperty_ApiMode {
	p := new(ApiConfigProperty_ApiMode)
	*p = x
	return p
}

func (x ApiConfigProperty_ApiMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfigProperty_ApiMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[4].Descriptor()
}

func (ApiConfigProperty_ApiMode) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[4]
}

func (x ApiConfigProperty_ApiMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfigProperty_ApiMode.Descriptor instead.
func (ApiConfigProperty_ApiMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{2, 0}
}

type ApiConfigProperty_RequestMethod int32

const (
	ApiConfigProperty_MethodUnset ApiConfigProperty_RequestMethod = 0
	ApiConfigProperty_GET         ApiConfigProperty_RequestMethod = 1
	ApiConfigProperty_POST        ApiConfigProperty_RequestMethod = 2
)

// Enum value maps for ApiConfigProperty_RequestMethod.
var (
	ApiConfigProperty_RequestMethod_name = map[int32]string{
		0: "MethodUnset",
		1: "GET",
		2: "POST",
	}
	ApiConfigProperty_RequestMethod_value = map[string]int32{
		"MethodUnset": 0,
		"GET":         1,
		"POST":        2,
	}
)

func (x ApiConfigProperty_RequestMethod) Enum() *ApiConfigProperty_RequestMethod {
	p := new(ApiConfigProperty_RequestMethod)
	*p = x
	return p
}

func (x ApiConfigProperty_RequestMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfigProperty_RequestMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[5].Descriptor()
}

func (ApiConfigProperty_RequestMethod) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[5]
}

func (x ApiConfigProperty_RequestMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfigProperty_RequestMethod.Descriptor instead.
func (ApiConfigProperty_RequestMethod) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{2, 1}
}

type ApiConfigProperty_ResponseType int32

const (
	ApiConfigProperty_TypeUnset ApiConfigProperty_ResponseType = 0
	ApiConfigProperty_JSON      ApiConfigProperty_ResponseType = 1
	ApiConfigProperty_XML       ApiConfigProperty_ResponseType = 2
)

// Enum value maps for ApiConfigProperty_ResponseType.
var (
	ApiConfigProperty_ResponseType_name = map[int32]string{
		0: "TypeUnset",
		1: "JSON",
		2: "XML",
	}
	ApiConfigProperty_ResponseType_value = map[string]int32{
		"TypeUnset": 0,
		"JSON":      1,
		"XML":       2,
	}
)

func (x ApiConfigProperty_ResponseType) Enum() *ApiConfigProperty_ResponseType {
	p := new(ApiConfigProperty_ResponseType)
	*p = x
	return p
}

func (x ApiConfigProperty_ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfigProperty_ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[6].Descriptor()
}

func (ApiConfigProperty_ResponseType) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[6]
}

func (x ApiConfigProperty_ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfigProperty_ResponseType.Descriptor instead.
func (ApiConfigProperty_ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{2, 2}
}

type ApiConfigProperty_Protocols int32

const (
	ApiConfigProperty_ProtocolUnset ApiConfigProperty_Protocols = 0
	ApiConfigProperty_HTTPOnly      ApiConfigProperty_Protocols = 1
	ApiConfigProperty_HTTPSOnly     ApiConfigProperty_Protocols = 2
	ApiConfigProperty_ALL           ApiConfigProperty_Protocols = 3
)

// Enum value maps for ApiConfigProperty_Protocols.
var (
	ApiConfigProperty_Protocols_name = map[int32]string{
		0: "ProtocolUnset",
		1: "HTTPOnly",
		2: "HTTPSOnly",
		3: "ALL",
	}
	ApiConfigProperty_Protocols_value = map[string]int32{
		"ProtocolUnset": 0,
		"HTTPOnly":      1,
		"HTTPSOnly":     2,
		"ALL":           3,
	}
)

func (x ApiConfigProperty_Protocols) Enum() *ApiConfigProperty_Protocols {
	p := new(ApiConfigProperty_Protocols)
	*p = x
	return p
}

func (x ApiConfigProperty_Protocols) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfigProperty_Protocols) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[7].Descriptor()
}

func (ApiConfigProperty_Protocols) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[7]
}

func (x ApiConfigProperty_Protocols) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfigProperty_Protocols.Descriptor instead.
func (ApiConfigProperty_Protocols) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{2, 3}
}

type ApiConfigProperty_Status int32

const (
	ApiConfigProperty_StatusUnset ApiConfigProperty_Status = 0
	ApiConfigProperty_Deleted     ApiConfigProperty_Status = 1
	ApiConfigProperty_Enabled     ApiConfigProperty_Status = 2
)

// Enum value maps for ApiConfigProperty_Status.
var (
	ApiConfigProperty_Status_name = map[int32]string{
		0: "StatusUnset",
		1: "Deleted",
		2: "Enabled",
	}
	ApiConfigProperty_Status_value = map[string]int32{
		"StatusUnset": 0,
		"Deleted":     1,
		"Enabled":     2,
	}
)

func (x ApiConfigProperty_Status) Enum() *ApiConfigProperty_Status {
	p := new(ApiConfigProperty_Status)
	*p = x
	return p
}

func (x ApiConfigProperty_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfigProperty_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[8].Descriptor()
}

func (ApiConfigProperty_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[8]
}

func (x ApiConfigProperty_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfigProperty_Status.Descriptor instead.
func (ApiConfigProperty_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{2, 4}
}

type ApiConfig_ApiMode int32

const (
	ApiConfig_ModeUnset ApiConfig_ApiMode = 0
	ApiConfig_Wizard    ApiConfig_ApiMode = 1
	ApiConfig_Script    ApiConfig_ApiMode = 2
)

// Enum value maps for ApiConfig_ApiMode.
var (
	ApiConfig_ApiMode_name = map[int32]string{
		0: "ModeUnset",
		1: "Wizard",
		2: "Script",
	}
	ApiConfig_ApiMode_value = map[string]int32{
		"ModeUnset": 0,
		"Wizard":    1,
		"Script":    2,
	}
)

func (x ApiConfig_ApiMode) Enum() *ApiConfig_ApiMode {
	p := new(ApiConfig_ApiMode)
	*p = x
	return p
}

func (x ApiConfig_ApiMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfig_ApiMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[9].Descriptor()
}

func (ApiConfig_ApiMode) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[9]
}

func (x ApiConfig_ApiMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfig_ApiMode.Descriptor instead.
func (ApiConfig_ApiMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{3, 0}
}

type ApiConfig_RequestMethod int32

const (
	ApiConfig_MethodUnset ApiConfig_RequestMethod = 0
	ApiConfig_GET         ApiConfig_RequestMethod = 1
	ApiConfig_POST        ApiConfig_RequestMethod = 2
)

// Enum value maps for ApiConfig_RequestMethod.
var (
	ApiConfig_RequestMethod_name = map[int32]string{
		0: "MethodUnset",
		1: "GET",
		2: "POST",
	}
	ApiConfig_RequestMethod_value = map[string]int32{
		"MethodUnset": 0,
		"GET":         1,
		"POST":        2,
	}
)

func (x ApiConfig_RequestMethod) Enum() *ApiConfig_RequestMethod {
	p := new(ApiConfig_RequestMethod)
	*p = x
	return p
}

func (x ApiConfig_RequestMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfig_RequestMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[10].Descriptor()
}

func (ApiConfig_RequestMethod) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[10]
}

func (x ApiConfig_RequestMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfig_RequestMethod.Descriptor instead.
func (ApiConfig_RequestMethod) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{3, 1}
}

type ApiConfig_ResponseType int32

const (
	ApiConfig_TypeUnset ApiConfig_ResponseType = 0
	ApiConfig_JSON      ApiConfig_ResponseType = 1
	ApiConfig_XML       ApiConfig_ResponseType = 2
)

// Enum value maps for ApiConfig_ResponseType.
var (
	ApiConfig_ResponseType_name = map[int32]string{
		0: "TypeUnset",
		1: "JSON",
		2: "XML",
	}
	ApiConfig_ResponseType_value = map[string]int32{
		"TypeUnset": 0,
		"JSON":      1,
		"XML":       2,
	}
)

func (x ApiConfig_ResponseType) Enum() *ApiConfig_ResponseType {
	p := new(ApiConfig_ResponseType)
	*p = x
	return p
}

func (x ApiConfig_ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfig_ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[11].Descriptor()
}

func (ApiConfig_ResponseType) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[11]
}

func (x ApiConfig_ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfig_ResponseType.Descriptor instead.
func (ApiConfig_ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{3, 2}
}

type ApiConfig_Protocols int32

const (
	ApiConfig_ProtocolUnset ApiConfig_Protocols = 0
	ApiConfig_HTTPOnly      ApiConfig_Protocols = 1
	ApiConfig_HTTPSOnly     ApiConfig_Protocols = 2
	ApiConfig_ALL           ApiConfig_Protocols = 3
)

// Enum value maps for ApiConfig_Protocols.
var (
	ApiConfig_Protocols_name = map[int32]string{
		0: "ProtocolUnset",
		1: "HTTPOnly",
		2: "HTTPSOnly",
		3: "ALL",
	}
	ApiConfig_Protocols_value = map[string]int32{
		"ProtocolUnset": 0,
		"HTTPOnly":      1,
		"HTTPSOnly":     2,
		"ALL":           3,
	}
)

func (x ApiConfig_Protocols) Enum() *ApiConfig_Protocols {
	p := new(ApiConfig_Protocols)
	*p = x
	return p
}

func (x ApiConfig_Protocols) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfig_Protocols) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[12].Descriptor()
}

func (ApiConfig_Protocols) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[12]
}

func (x ApiConfig_Protocols) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfig_Protocols.Descriptor instead.
func (ApiConfig_Protocols) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{3, 3}
}

type ApiConfig_Status int32

const (
	ApiConfig_StatusUnset ApiConfig_Status = 0
	ApiConfig_Deleted     ApiConfig_Status = 1
	ApiConfig_Enabled     ApiConfig_Status = 2
)

// Enum value maps for ApiConfig_Status.
var (
	ApiConfig_Status_name = map[int32]string{
		0: "StatusUnset",
		1: "Deleted",
		2: "Enabled",
	}
	ApiConfig_Status_value = map[string]int32{
		"StatusUnset": 0,
		"Deleted":     1,
		"Enabled":     2,
	}
)

func (x ApiConfig_Status) Enum() *ApiConfig_Status {
	p := new(ApiConfig_Status)
	*p = x
	return p
}

func (x ApiConfig_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiConfig_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[13].Descriptor()
}

func (ApiConfig_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[13]
}

func (x ApiConfig_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiConfig_Status.Descriptor instead.
func (ApiConfig_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{3, 4}
}

type RequestParameter_ParameterOperator int32

const (
	RequestParameter_OperatorUnset RequestParameter_ParameterOperator = 0
	RequestParameter_Equal         RequestParameter_ParameterOperator = 1
	RequestParameter_NotEqual      RequestParameter_ParameterOperator = 2
	RequestParameter_GreaterThan   RequestParameter_ParameterOperator = 3
	RequestParameter_LessThan      RequestParameter_ParameterOperator = 4
	RequestParameter_Like          RequestParameter_ParameterOperator = 5
	RequestParameter_Const         RequestParameter_ParameterOperator = 6
	RequestParameter_In            RequestParameter_ParameterOperator = 7
)

// Enum value maps for RequestParameter_ParameterOperator.
var (
	RequestParameter_ParameterOperator_name = map[int32]string{
		0: "OperatorUnset",
		1: "Equal",
		2: "NotEqual",
		3: "GreaterThan",
		4: "LessThan",
		5: "Like",
		6: "Const",
		7: "In",
	}
	RequestParameter_ParameterOperator_value = map[string]int32{
		"OperatorUnset": 0,
		"Equal":         1,
		"NotEqual":      2,
		"GreaterThan":   3,
		"LessThan":      4,
		"Like":          5,
		"Const":         6,
		"In":            7,
	}
)

func (x RequestParameter_ParameterOperator) Enum() *RequestParameter_ParameterOperator {
	p := new(RequestParameter_ParameterOperator)
	*p = x
	return p
}

func (x RequestParameter_ParameterOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestParameter_ParameterOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[14].Descriptor()
}

func (RequestParameter_ParameterOperator) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[14]
}

func (x RequestParameter_ParameterOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestParameter_ParameterOperator.Descriptor instead.
func (RequestParameter_ParameterOperator) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{5, 0}
}

type RequestParameter_ParameterPosition int32

const (
	RequestParameter_PositionUnset RequestParameter_ParameterPosition = 0
	RequestParameter_Body          RequestParameter_ParameterPosition = 1
	RequestParameter_Query         RequestParameter_ParameterPosition = 2
	RequestParameter_Path          RequestParameter_ParameterPosition = 3
	RequestParameter_Head          RequestParameter_ParameterPosition = 4
)

// Enum value maps for RequestParameter_ParameterPosition.
var (
	RequestParameter_ParameterPosition_name = map[int32]string{
		0: "PositionUnset",
		1: "Body",
		2: "Query",
		3: "Path",
		4: "Head",
	}
	RequestParameter_ParameterPosition_value = map[string]int32{
		"PositionUnset": 0,
		"Body":          1,
		"Query":         2,
		"Path":          3,
		"Head":          4,
	}
)

func (x RequestParameter_ParameterPosition) Enum() *RequestParameter_ParameterPosition {
	p := new(RequestParameter_ParameterPosition)
	*p = x
	return p
}

func (x RequestParameter_ParameterPosition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestParameter_ParameterPosition) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[15].Descriptor()
}

func (RequestParameter_ParameterPosition) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[15]
}

func (x RequestParameter_ParameterPosition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestParameter_ParameterPosition.Descriptor instead.
func (RequestParameter_ParameterPosition) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{5, 1}
}

type ResponseParameter_OrderMode int32

const (
	ResponseParameter_StatusUnset ResponseParameter_OrderMode = 0
	ResponseParameter_Ase         ResponseParameter_OrderMode = 1
	ResponseParameter_Desc        ResponseParameter_OrderMode = 2
)

// Enum value maps for ResponseParameter_OrderMode.
var (
	ResponseParameter_OrderMode_name = map[int32]string{
		0: "StatusUnset",
		1: "Ase",
		2: "Desc",
	}
	ResponseParameter_OrderMode_value = map[string]int32{
		"StatusUnset": 0,
		"Ase":         1,
		"Desc":        2,
	}
)

func (x ResponseParameter_OrderMode) Enum() *ResponseParameter_OrderMode {
	p := new(ResponseParameter_OrderMode)
	*p = x
	return p
}

func (x ResponseParameter_OrderMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseParameter_OrderMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[16].Descriptor()
}

func (ResponseParameter_OrderMode) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[16]
}

func (x ResponseParameter_OrderMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseParameter_OrderMode.Descriptor instead.
func (ResponseParameter_OrderMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{7, 0}
}

type ApiVersion_Status int32

const (
	ApiVersion_StatusUnset ApiVersion_Status = 0
	ApiVersion_Published   ApiVersion_Status = 1
	ApiVersion_Abolished   ApiVersion_Status = 2
)

// Enum value maps for ApiVersion_Status.
var (
	ApiVersion_Status_name = map[int32]string{
		0: "StatusUnset",
		1: "Published",
		2: "Abolished",
	}
	ApiVersion_Status_value = map[string]int32{
		"StatusUnset": 0,
		"Published":   1,
		"Abolished":   2,
	}
)

func (x ApiVersion_Status) Enum() *ApiVersion_Status {
	p := new(ApiVersion_Status)
	*p = x
	return p
}

func (x ApiVersion_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiVersion_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[17].Descriptor()
}

func (ApiVersion_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[17]
}

func (x ApiVersion_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiVersion_Status.Descriptor instead.
func (ApiVersion_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{8, 0}
}

type ApiVersion_ApiMode int32

const (
	ApiVersion_ModeUnset ApiVersion_ApiMode = 0
	ApiVersion_Wizard    ApiVersion_ApiMode = 1
	ApiVersion_Script    ApiVersion_ApiMode = 2
)

// Enum value maps for ApiVersion_ApiMode.
var (
	ApiVersion_ApiMode_name = map[int32]string{
		0: "ModeUnset",
		1: "Wizard",
		2: "Script",
	}
	ApiVersion_ApiMode_value = map[string]int32{
		"ModeUnset": 0,
		"Wizard":    1,
		"Script":    2,
	}
)

func (x ApiVersion_ApiMode) Enum() *ApiVersion_ApiMode {
	p := new(ApiVersion_ApiMode)
	*p = x
	return p
}

func (x ApiVersion_ApiMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiVersion_ApiMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[18].Descriptor()
}

func (ApiVersion_ApiMode) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[18]
}

func (x ApiVersion_ApiMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiVersion_ApiMode.Descriptor instead.
func (ApiVersion_ApiMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{8, 1}
}

type ApiVersion_RequestMethod int32

const (
	ApiVersion_MethodUnset ApiVersion_RequestMethod = 0
	ApiVersion_GET         ApiVersion_RequestMethod = 1
	ApiVersion_POST        ApiVersion_RequestMethod = 2
)

// Enum value maps for ApiVersion_RequestMethod.
var (
	ApiVersion_RequestMethod_name = map[int32]string{
		0: "MethodUnset",
		1: "GET",
		2: "POST",
	}
	ApiVersion_RequestMethod_value = map[string]int32{
		"MethodUnset": 0,
		"GET":         1,
		"POST":        2,
	}
)

func (x ApiVersion_RequestMethod) Enum() *ApiVersion_RequestMethod {
	p := new(ApiVersion_RequestMethod)
	*p = x
	return p
}

func (x ApiVersion_RequestMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiVersion_RequestMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[19].Descriptor()
}

func (ApiVersion_RequestMethod) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[19]
}

func (x ApiVersion_RequestMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiVersion_RequestMethod.Descriptor instead.
func (ApiVersion_RequestMethod) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{8, 2}
}

type ApiVersion_ResponseType int32

const (
	ApiVersion_TypeUnset ApiVersion_ResponseType = 0
	ApiVersion_JSON      ApiVersion_ResponseType = 1
	ApiVersion_XML       ApiVersion_ResponseType = 2
)

// Enum value maps for ApiVersion_ResponseType.
var (
	ApiVersion_ResponseType_name = map[int32]string{
		0: "TypeUnset",
		1: "JSON",
		2: "XML",
	}
	ApiVersion_ResponseType_value = map[string]int32{
		"TypeUnset": 0,
		"JSON":      1,
		"XML":       2,
	}
)

func (x ApiVersion_ResponseType) Enum() *ApiVersion_ResponseType {
	p := new(ApiVersion_ResponseType)
	*p = x
	return p
}

func (x ApiVersion_ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiVersion_ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[20].Descriptor()
}

func (ApiVersion_ResponseType) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[20]
}

func (x ApiVersion_ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiVersion_ResponseType.Descriptor instead.
func (ApiVersion_ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{8, 3}
}

type ApiVersion_Protocols int32

const (
	ApiVersion_ProtocolUnset ApiVersion_Protocols = 0
	ApiVersion_HTTPOnly      ApiVersion_Protocols = 1
	ApiVersion_HTTPSOnly     ApiVersion_Protocols = 2
	ApiVersion_ALL           ApiVersion_Protocols = 3
)

// Enum value maps for ApiVersion_Protocols.
var (
	ApiVersion_Protocols_name = map[int32]string{
		0: "ProtocolUnset",
		1: "HTTPOnly",
		2: "HTTPSOnly",
		3: "ALL",
	}
	ApiVersion_Protocols_value = map[string]int32{
		"ProtocolUnset": 0,
		"HTTPOnly":      1,
		"HTTPSOnly":     2,
		"ALL":           3,
	}
)

func (x ApiVersion_Protocols) Enum() *ApiVersion_Protocols {
	p := new(ApiVersion_Protocols)
	*p = x
	return p
}

func (x ApiVersion_Protocols) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiVersion_Protocols) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_dataservice_proto_enumTypes[21].Descriptor()
}

func (ApiVersion_Protocols) Type() protoreflect.EnumType {
	return &file_proto_types_model_dataservice_proto_enumTypes[21]
}

func (x ApiVersion_Protocols) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiVersion_Protocols.Descriptor instead.
func (ApiVersion_Protocols) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{8, 4}
}

// table dataservice_cluster
type DataServiceCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id" gorm:"column:id;primarykey;"`
	SpaceId      string                          `protobuf:"bytes,2,opt,name=space_id,json=spaceId,proto3" json:"space_id" gorm:"column:space_id;"`
	Name         string                          `protobuf:"bytes,3,opt,name=name,proto3" json:"name" gorm:"column:name;"`
	ResourceSpec DataServiceCluster_ResourceSpec `protobuf:"varint,4,opt,name=resource_spec,json=resourceSpec,proto3,enum=model.DataServiceCluster_ResourceSpec" json:"resource_spec" gorm:"column:resource_spec;"`
	Status       DataServiceCluster_Status       `protobuf:"varint,5,opt,name=status,proto3,enum=model.DataServiceCluster_Status" json:"status" gorm:"column:status;"`
	CreatedBy    string                          `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by" gorm:"column:created_by;"`
	Created      int64                           `protobuf:"varint,7,opt,name=created,proto3" json:"created" gorm:"column:created;autoCreateTime;"`
	Updated      int64                           `protobuf:"varint,8,opt,name=updated,proto3" json:"updated" gorm:"column:updated;autoUpdateTime;"`
}

func (x *DataServiceCluster) Reset() {
	*x = DataServiceCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataServiceCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataServiceCluster) ProtoMessage() {}

func (x *DataServiceCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataServiceCluster.ProtoReflect.Descriptor instead.
func (*DataServiceCluster) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{0}
}

func (x *DataServiceCluster) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataServiceCluster) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *DataServiceCluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataServiceCluster) GetResourceSpec() DataServiceCluster_ResourceSpec {
	if x != nil {
		return x.ResourceSpec
	}
	return DataServiceCluster_SpecUnset
}

func (x *DataServiceCluster) GetStatus() DataServiceCluster_Status {
	if x != nil {
		return x.Status
	}
	return DataServiceCluster_StatusUnset
}

func (x *DataServiceCluster) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *DataServiceCluster) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *DataServiceCluster) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// table api_group
type ApiGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id" gorm:"column:id;primaryKey;"`
	SpaceId   string          `protobuf:"bytes,2,opt,name=space_id,json=spaceId,proto3" json:"space_id" gorm:"column:space_id;"`
	Name      string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name" gorm:"column:name;"`
	GroupPath string          `protobuf:"bytes,4,opt,name=group_path,json=groupPath,proto3" json:"group_path" gorm:"column:group_path;"`
	Desc      string          `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc" gorm:"column:desc;"`
	Status    ApiGroup_Status `protobuf:"varint,6,opt,name=status,proto3,enum=model.ApiGroup_Status" json:"status" gorm:"column:status;"`
	CreatedBy string          `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by" gorm:"column:created_by;"`
	Created   int64           `protobuf:"varint,8,opt,name=created,proto3" json:"created" gorm:"column:created;autoCreateTime;"`
	Updated   int64           `protobuf:"varint,9,opt,name=updated,proto3" json:"updated" gorm:"column:updated;autoUpdateTime;"`
}

func (x *ApiGroup) Reset() {
	*x = ApiGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGroup) ProtoMessage() {}

func (x *ApiGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGroup.ProtoReflect.Descriptor instead.
func (*ApiGroup) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{1}
}

func (x *ApiGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApiGroup) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ApiGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiGroup) GetGroupPath() string {
	if x != nil {
		return x.GroupPath
	}
	return ""
}

func (x *ApiGroup) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ApiGroup) GetStatus() ApiGroup_Status {
	if x != nil {
		return x.Status
	}
	return ApiGroup_StatusUnset
}

func (x *ApiGroup) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ApiGroup) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ApiGroup) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

// table api_config
type ApiConfigProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId          string                          `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id" gorm:"column:api_id;primaryKey;"`
	GroupId        string                          `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id" gorm:"column:group_id;"`
	SpaceId        string                          `protobuf:"bytes,3,opt,name=space_id,json=spaceId,proto3" json:"space_id" gorm:"column:space_id;"`
	ApiName        string                          `protobuf:"bytes,4,opt,name=api_name,json=apiName,proto3" json:"api_name" gorm:"column:api_name;"`
	ApiPath        string                          `protobuf:"bytes,5,opt,name=api_path,json=apiPath,proto3" json:"api_path" gorm:"column:api_path;"`
	ApiMode        ApiConfigProperty_ApiMode       `protobuf:"varint,6,opt,name=api_mode,json=apiMode,proto3,enum=model.ApiConfigProperty_ApiMode" json:"api_mode" gorm:"column:api_mode;"`
	ApiDescription string                          `protobuf:"bytes,7,opt,name=api_description,json=apiDescription,proto3" json:"api_description" gorm:"column:api_description;"`
	Protocols      ApiConfigProperty_Protocols     `protobuf:"varint,8,opt,name=protocols,proto3,enum=model.ApiConfigProperty_Protocols" json:"protocols" gorm:"column:protocols;"`
	RequestMethod  ApiConfigProperty_RequestMethod `protobuf:"varint,9,opt,name=request_method,json=requestMethod,proto3,enum=model.ApiConfigProperty_RequestMethod" json:"request_method" gorm:"column:request_method;"`
	ResponseType   ApiConfigProperty_ResponseType  `protobuf:"varint,10,opt,name=response_type,json=responseType,proto3,enum=model.ApiConfigProperty_ResponseType" json:"response_type" gorm:"column:response_type;"`
	CrossDomain    bool                            `protobuf:"varint,11,opt,name=cross_domain,json=crossDomain,proto3" json:"cross_domain" gorm:"column:cross_domain;"`
	Timeout        int64                           `protobuf:"varint,12,opt,name=timeout,proto3" json:"timeout" gorm:"column:timeout;"`
	CreatedBy      string                          `protobuf:"bytes,13,opt,name=created_by,json=createdBy,proto3" json:"created_by" gorm:"column:created_by;"`
	Created        int64                           `protobuf:"varint,14,opt,name=created,proto3" json:"created" gorm:"column:created;autoCreateTime;"`
	Updated        int64                           `protobuf:"varint,15,opt,name=updated,proto3" json:"updated" gorm:"column:updated;autoUpdateTime;"`
	Status         ApiConfigProperty_Status        `protobuf:"varint,16,opt,name=status,proto3,enum=model.ApiConfigProperty_Status" json:"status" gorm:"column:status;"`
}

func (x *ApiConfigProperty) Reset() {
	*x = ApiConfigProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiConfigProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiConfigProperty) ProtoMessage() {}

func (x *ApiConfigProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiConfigProperty.ProtoReflect.Descriptor instead.
func (*ApiConfigProperty) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{2}
}

func (x *ApiConfigProperty) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *ApiConfigProperty) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ApiConfigProperty) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ApiConfigProperty) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *ApiConfigProperty) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *ApiConfigProperty) GetApiMode() ApiConfigProperty_ApiMode {
	if x != nil {
		return x.ApiMode
	}
	return ApiConfigProperty_ModeUnset
}

func (x *ApiConfigProperty) GetApiDescription() string {
	if x != nil {
		return x.ApiDescription
	}
	return ""
}

func (x *ApiConfigProperty) GetProtocols() ApiConfigProperty_Protocols {
	if x != nil {
		return x.Protocols
	}
	return ApiConfigProperty_ProtocolUnset
}

func (x *ApiConfigProperty) GetRequestMethod() ApiConfigProperty_RequestMethod {
	if x != nil {
		return x.RequestMethod
	}
	return ApiConfigProperty_MethodUnset
}

func (x *ApiConfigProperty) GetResponseType() ApiConfigProperty_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return ApiConfigProperty_TypeUnset
}

func (x *ApiConfigProperty) GetCrossDomain() bool {
	if x != nil {
		return x.CrossDomain
	}
	return false
}

func (x *ApiConfigProperty) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ApiConfigProperty) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ApiConfigProperty) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ApiConfigProperty) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *ApiConfigProperty) GetStatus() ApiConfigProperty_Status {
	if x != nil {
		return x.Status
	}
	return ApiConfigProperty_StatusUnset
}

// table api_config
type ApiConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId             string                  `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id" gorm:"column:api_id;primaryKey;"`
	GroupId           string                  `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id" gorm:"column:group_id;"`
	ClusterId         string                  `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id" gorm:"column:cluster_id;"`
	SpaceId           string                  `protobuf:"bytes,4,opt,name=space_id,json=spaceId,proto3" json:"space_id" gorm:"column:space_id;"`
	ApiName           string                  `protobuf:"bytes,5,opt,name=api_name,json=apiName,proto3" json:"api_name" gorm:"column:api_name;"`
	ApiPath           string                  `protobuf:"bytes,6,opt,name=api_path,json=apiPath,proto3" json:"api_path" gorm:"column:api_path;"`
	ApiMode           ApiConfig_ApiMode       `protobuf:"varint,7,opt,name=api_mode,json=apiMode,proto3,enum=model.ApiConfig_ApiMode" json:"api_mode" gorm:"column:api_mode;"`
	ApiDescription    string                  `protobuf:"bytes,8,opt,name=api_description,json=apiDescription,proto3" json:"api_description" gorm:"column:api_description;"`
	Protocols         ApiConfig_Protocols     `protobuf:"varint,9,opt,name=protocols,proto3,enum=model.ApiConfig_Protocols" json:"protocols" gorm:"column:protocols;"`
	RequestMethod     ApiConfig_RequestMethod `protobuf:"varint,10,opt,name=request_method,json=requestMethod,proto3,enum=model.ApiConfig_RequestMethod" json:"request_method" gorm:"column:request_method;"`
	ResponseType      ApiConfig_ResponseType  `protobuf:"varint,11,opt,name=response_type,json=responseType,proto3,enum=model.ApiConfig_ResponseType" json:"response_type" gorm:"column:response_type;"`
	CrossDomain       bool                    `protobuf:"varint,12,opt,name=cross_domain,json=crossDomain,proto3" json:"cross_domain" gorm:"column:cross_domain;"`
	Timeout           int64                   `protobuf:"varint,13,opt,name=timeout,proto3" json:"timeout" gorm:"column:timeout;"`
	DatasourceId      string                  `protobuf:"bytes,14,opt,name=datasource_id,json=datasourceId,proto3" json:"datasource_id" gorm:"column:datasource_id;"`
	TableName         string                  `protobuf:"bytes,15,opt,name=table_name,json=tableName,proto3" json:"table_name" gorm:"column:table_name;"`
	Script            string                  `protobuf:"bytes,16,opt,name=script,proto3" json:"script" gorm:"column:script;"`
	CreatedBy         string                  `protobuf:"bytes,17,opt,name=created_by,json=createdBy,proto3" json:"created_by" gorm:"column:created_by;"`
	Created           int64                   `protobuf:"varint,18,opt,name=created,proto3" json:"created" gorm:"column:created;autoCreateTime;"`
	Updated           int64                   `protobuf:"varint,19,opt,name=updated,proto3" json:"updated" gorm:"column:updated;autoUpdateTime;"`
	Status            ApiConfig_Status        `protobuf:"varint,20,opt,name=status,proto3,enum=model.ApiConfig_Status" json:"status" gorm:"column:status;"`
	AccessibleVersion string                  `protobuf:"bytes,21,opt,name=accessible_version,json=accessibleVersion,proto3" json:"accessible_version" gorm:"column:accessible_version;"`
	RequestParams     *RequestParameters      `protobuf:"bytes,22,opt,name=request_params,json=requestParams,proto3" json:"request_params" gorm:"column:request_params;type:json"`
	ResponseParams    *ResponseParameters     `protobuf:"bytes,23,opt,name=response_params,json=responseParams,proto3" json:"response_params" gorm:"column:response_params;type:json"`
}

func (x *ApiConfig) Reset() {
	*x = ApiConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiConfig) ProtoMessage() {}

func (x *ApiConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiConfig.ProtoReflect.Descriptor instead.
func (*ApiConfig) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{3}
}

func (x *ApiConfig) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *ApiConfig) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ApiConfig) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ApiConfig) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ApiConfig) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *ApiConfig) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *ApiConfig) GetApiMode() ApiConfig_ApiMode {
	if x != nil {
		return x.ApiMode
	}
	return ApiConfig_ModeUnset
}

func (x *ApiConfig) GetApiDescription() string {
	if x != nil {
		return x.ApiDescription
	}
	return ""
}

func (x *ApiConfig) GetProtocols() ApiConfig_Protocols {
	if x != nil {
		return x.Protocols
	}
	return ApiConfig_ProtocolUnset
}

func (x *ApiConfig) GetRequestMethod() ApiConfig_RequestMethod {
	if x != nil {
		return x.RequestMethod
	}
	return ApiConfig_MethodUnset
}

func (x *ApiConfig) GetResponseType() ApiConfig_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return ApiConfig_TypeUnset
}

func (x *ApiConfig) GetCrossDomain() bool {
	if x != nil {
		return x.CrossDomain
	}
	return false
}

func (x *ApiConfig) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ApiConfig) GetDatasourceId() string {
	if x != nil {
		return x.DatasourceId
	}
	return ""
}

func (x *ApiConfig) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ApiConfig) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *ApiConfig) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ApiConfig) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ApiConfig) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *ApiConfig) GetStatus() ApiConfig_Status {
	if x != nil {
		return x.Status
	}
	return ApiConfig_StatusUnset
}

func (x *ApiConfig) GetAccessibleVersion() string {
	if x != nil {
		return x.AccessibleVersion
	}
	return ""
}

func (x *ApiConfig) GetRequestParams() *RequestParameters {
	if x != nil {
		return x.RequestParams
	}
	return nil
}

func (x *ApiConfig) GetResponseParams() *ResponseParameters {
	if x != nil {
		return x.ResponseParams
	}
	return nil
}

type RequestParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestParams []*RequestParameter `protobuf:"bytes,22,rep,name=request_params,json=requestParams,proto3" json:"request_params"`
}

func (x *RequestParameters) Reset() {
	*x = RequestParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestParameters) ProtoMessage() {}

func (x *RequestParameters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestParameters.ProtoReflect.Descriptor instead.
func (*RequestParameters) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{4}
}

func (x *RequestParameters) GetRequestParams() []*RequestParameter {
	if x != nil {
		return x.RequestParams
	}
	return nil
}

type RequestParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName       string                             `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name"`
	DefaultValue     string                             `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value"`
	ExampleValue     string                             `protobuf:"bytes,3,opt,name=example_value,json=exampleValue,proto3" json:"example_value"`
	IsRequired       bool                               `protobuf:"varint,4,opt,name=is_required,json=isRequired,proto3" json:"is_required"`
	DataType         ParameterDataType                  `protobuf:"varint,5,opt,name=data_type,json=dataType,proto3,enum=model.ParameterDataType" json:"data_type"`
	ParamDescription string                             `protobuf:"bytes,6,opt,name=param_description,json=paramDescription,proto3" json:"param_description"`
	ParamName        string                             `protobuf:"bytes,7,opt,name=param_name,json=paramName,proto3" json:"param_name"`
	ParamOperator    RequestParameter_ParameterOperator `protobuf:"varint,8,opt,name=param_operator,json=paramOperator,proto3,enum=model.RequestParameter_ParameterOperator" json:"param_operator"`
	ParamPosition    RequestParameter_ParameterPosition `protobuf:"varint,9,opt,name=param_position,json=paramPosition,proto3,enum=model.RequestParameter_ParameterPosition" json:"param_position"`
}

func (x *RequestParameter) Reset() {
	*x = RequestParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestParameter) ProtoMessage() {}

func (x *RequestParameter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestParameter.ProtoReflect.Descriptor instead.
func (*RequestParameter) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{5}
}

func (x *RequestParameter) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *RequestParameter) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *RequestParameter) GetExampleValue() string {
	if x != nil {
		return x.ExampleValue
	}
	return ""
}

func (x *RequestParameter) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

func (x *RequestParameter) GetDataType() ParameterDataType {
	if x != nil {
		return x.DataType
	}
	return ParameterDataType_TypeUnset
}

func (x *RequestParameter) GetParamDescription() string {
	if x != nil {
		return x.ParamDescription
	}
	return ""
}

func (x *RequestParameter) GetParamName() string {
	if x != nil {
		return x.ParamName
	}
	return ""
}

func (x *RequestParameter) GetParamOperator() RequestParameter_ParameterOperator {
	if x != nil {
		return x.ParamOperator
	}
	return RequestParameter_OperatorUnset
}

func (x *RequestParameter) GetParamPosition() RequestParameter_ParameterPosition {
	if x != nil {
		return x.ParamPosition
	}
	return RequestParameter_PositionUnset
}

type ResponseParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseParams []*ResponseParameter `protobuf:"bytes,22,rep,name=response_params,json=responseParams,proto3" json:"response_params"`
}

func (x *ResponseParameters) Reset() {
	*x = ResponseParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseParameters) ProtoMessage() {}

func (x *ResponseParameters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseParameters.ProtoReflect.Descriptor instead.
func (*ResponseParameters) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{6}
}

func (x *ResponseParameters) GetResponseParams() []*ResponseParameter {
	if x != nil {
		return x.ResponseParams
	}
	return nil
}

type ResponseParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName       string                      `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name"`
	DefaultValue     string                      `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value"`
	ExampleValue     string                      `protobuf:"bytes,3,opt,name=example_value,json=exampleValue,proto3" json:"example_value"`
	DataType         ParameterDataType           `protobuf:"varint,4,opt,name=data_type,json=dataType,proto3,enum=model.ParameterDataType" json:"data_type"`
	ParamDescription string                      `protobuf:"bytes,5,opt,name=param_description,json=paramDescription,proto3" json:"param_description"`
	ParamName        string                      `protobuf:"bytes,6,opt,name=param_name,json=paramName,proto3" json:"param_name"`
	OrderNum         int64                       `protobuf:"varint,7,opt,name=order_num,json=orderNum,proto3" json:"order_num"`
	OrderMode        ResponseParameter_OrderMode `protobuf:"varint,8,opt,name=order_mode,json=orderMode,proto3,enum=model.ResponseParameter_OrderMode" json:"order_mode"`
}

func (x *ResponseParameter) Reset() {
	*x = ResponseParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseParameter) ProtoMessage() {}

func (x *ResponseParameter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseParameter.ProtoReflect.Descriptor instead.
func (*ResponseParameter) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseParameter) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *ResponseParameter) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *ResponseParameter) GetExampleValue() string {
	if x != nil {
		return x.ExampleValue
	}
	return ""
}

func (x *ResponseParameter) GetDataType() ParameterDataType {
	if x != nil {
		return x.DataType
	}
	return ParameterDataType_TypeUnset
}

func (x *ResponseParameter) GetParamDescription() string {
	if x != nil {
		return x.ParamDescription
	}
	return ""
}

func (x *ResponseParameter) GetParamName() string {
	if x != nil {
		return x.ParamName
	}
	return ""
}

func (x *ResponseParameter) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *ResponseParameter) GetOrderMode() ResponseParameter_OrderMode {
	if x != nil {
		return x.OrderMode
	}
	return ResponseParameter_StatusUnset
}

// table api_versions
type ApiVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionId     string            `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id" gorm:"column:version_id;primaryKey;"`
	PublishStatus ApiVersion_Status `protobuf:"varint,2,opt,name=publish_status,json=publishStatus,proto3,enum=model.ApiVersion_Status" json:"publish_status" gorm:"column:publish_status;"`
	//int64 publish_time = 3 [ (validator.field).tags.int = { gt: 0 } ];
	ApiId          string                   `protobuf:"bytes,4,opt,name=api_id,json=apiId,proto3" json:"api_id" gorm:"column:api_id;primaryKey;"`
	GroupId        string                   `protobuf:"bytes,5,opt,name=group_id,json=groupId,proto3" json:"group_id" gorm:"column:group_id;"`
	ClusterId      string                   `protobuf:"bytes,6,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id" gorm:"column:cluster_id;"`
	SpaceId        string                   `protobuf:"bytes,7,opt,name=space_id,json=spaceId,proto3" json:"space_id" gorm:"column:space_id;"`
	ApiName        string                   `protobuf:"bytes,8,opt,name=api_name,json=apiName,proto3" json:"api_name" gorm:"column:api_name;"`
	ApiPath        string                   `protobuf:"bytes,9,opt,name=api_path,json=apiPath,proto3" json:"api_path" gorm:"column:api_path;"`
	ApiMode        ApiVersion_ApiMode       `protobuf:"varint,10,opt,name=api_mode,json=apiMode,proto3,enum=model.ApiVersion_ApiMode" json:"api_mode" gorm:"column:api_mode;"`
	ApiDescription string                   `protobuf:"bytes,11,opt,name=api_description,json=apiDescription,proto3" json:"api_description" gorm:"column:api_description;"`
	Protocols      ApiVersion_Protocols     `protobuf:"varint,12,opt,name=protocols,proto3,enum=model.ApiVersion_Protocols" json:"protocols" gorm:"column:protocols;"`
	RequestMethod  ApiVersion_RequestMethod `protobuf:"varint,13,opt,name=request_method,json=requestMethod,proto3,enum=model.ApiVersion_RequestMethod" json:"request_method" gorm:"column:request_method;"`
	ResponseType   ApiVersion_ResponseType  `protobuf:"varint,14,opt,name=response_type,json=responseType,proto3,enum=model.ApiVersion_ResponseType" json:"response_type" gorm:"column:response_type;"`
	CrossDomain    bool                     `protobuf:"varint,15,opt,name=cross_domain,json=crossDomain,proto3" json:"cross_domain" gorm:"column:cross_domain;"`
	Timeout        int64                    `protobuf:"varint,16,opt,name=timeout,proto3" json:"timeout" gorm:"column:timeout;"`
	DatasourceId   string                   `protobuf:"bytes,17,opt,name=datasource_id,json=datasourceId,proto3" json:"datasource_id" gorm:"column:datasource_id;"`
	TableName      string                   `protobuf:"bytes,18,opt,name=table_name,json=tableName,proto3" json:"table_name" gorm:"column:table_name;"`
	Script         string                   `protobuf:"bytes,19,opt,name=script,proto3" json:"script" gorm:"column:script;"`
	Created        int64                    `protobuf:"varint,3,opt,name=created,proto3" json:"created" gorm:"column:created;autoCreateTime;"`
	Updated        int64                    `protobuf:"varint,20,opt,name=updated,proto3" json:"updated" gorm:"column:updated;autoUpdateTime;"`
	RequestParams  *RequestParameters       `protobuf:"bytes,21,opt,name=request_params,json=requestParams,proto3" json:"request_params" gorm:"column:request_params;type:json"`
	ResponseParams *ResponseParameters      `protobuf:"bytes,22,opt,name=response_params,json=responseParams,proto3" json:"response_params" gorm:"column:response_params;type:json"`
}

func (x *ApiVersion) Reset() {
	*x = ApiVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiVersion) ProtoMessage() {}

func (x *ApiVersion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiVersion.ProtoReflect.Descriptor instead.
func (*ApiVersion) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{8}
}

func (x *ApiVersion) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *ApiVersion) GetPublishStatus() ApiVersion_Status {
	if x != nil {
		return x.PublishStatus
	}
	return ApiVersion_StatusUnset
}

func (x *ApiVersion) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *ApiVersion) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ApiVersion) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ApiVersion) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ApiVersion) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *ApiVersion) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *ApiVersion) GetApiMode() ApiVersion_ApiMode {
	if x != nil {
		return x.ApiMode
	}
	return ApiVersion_ModeUnset
}

func (x *ApiVersion) GetApiDescription() string {
	if x != nil {
		return x.ApiDescription
	}
	return ""
}

func (x *ApiVersion) GetProtocols() ApiVersion_Protocols {
	if x != nil {
		return x.Protocols
	}
	return ApiVersion_ProtocolUnset
}

func (x *ApiVersion) GetRequestMethod() ApiVersion_RequestMethod {
	if x != nil {
		return x.RequestMethod
	}
	return ApiVersion_MethodUnset
}

func (x *ApiVersion) GetResponseType() ApiVersion_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return ApiVersion_TypeUnset
}

func (x *ApiVersion) GetCrossDomain() bool {
	if x != nil {
		return x.CrossDomain
	}
	return false
}

func (x *ApiVersion) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ApiVersion) GetDatasourceId() string {
	if x != nil {
		return x.DatasourceId
	}
	return ""
}

func (x *ApiVersion) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ApiVersion) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *ApiVersion) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ApiVersion) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *ApiVersion) GetRequestParams() *RequestParameters {
	if x != nil {
		return x.RequestParams
	}
	return nil
}

func (x *ApiVersion) GetResponseParams() *ResponseParameters {
	if x != nil {
		return x.ResponseParams
	}
	return nil
}

// ServiceDataSourceKind represents the kind of dataservice datasource
type ServiceDataSourceKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name"`
	Type int64  `protobuf:"varint,2,opt,name=Type,proto3" json:"type"`
}

func (x *ServiceDataSourceKind) Reset() {
	*x = ServiceDataSourceKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_dataservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceDataSourceKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDataSourceKind) ProtoMessage() {}

func (x *ServiceDataSourceKind) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_dataservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDataSourceKind.ProtoReflect.Descriptor instead.
func (*ServiceDataSourceKind) Descriptor() ([]byte, []int) {
	return file_proto_types_model_dataservice_proto_rawDescGZIP(), []int{9}
}

func (x *ServiceDataSourceKind) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceDataSourceKind) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

var File_proto_types_model_dataservice_proto protoreflect.FileDescriptor

var file_proto_types_model_dataservice_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x33, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75,
	0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x73, 0x71, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xdf, 0x04, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0,
	0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x63, 0x2d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a,
	0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04,
	0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f,
	0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x90, 0x02, 0x02, 0x98, 0x02, 0x80, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58,
	0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf,
	0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x88, 0x02, 0x41, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12,
	0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x6a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73,
	0x10, 0x06, 0x22, 0x3f, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x70, 0x65, 0x63, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x73, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x10, 0x03, 0x22, 0xc6, 0x03, 0x0a, 0x08, 0x41, 0x70, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf,
	0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x67,
	0x2d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2,
	0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02,
	0x00, 0x98, 0x02, 0x40, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0x98, 0x02, 0x40, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04,
	0xc8, 0x01, 0x80, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58,
	0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2,
	0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x88, 0x02, 0x41, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07,
	0x12, 0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x74,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x22, 0xb3, 0x09, 0x0a,
	0x11, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14,
	0xca, 0x02, 0x04, 0x64, 0x73, 0x61, 0x2d, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x64, 0x73, 0x67, 0x2d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02,
	0x40, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf,
	0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80, 0x02, 0x00, 0x98, 0x02, 0xc8, 0x01, 0x52, 0x07,
	0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x4a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf,
	0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0e, 0x61, 0x70, 0x69,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58,
	0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x5c, 0x0a, 0x0e,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x0d, 0xe2, 0xdf,
	0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x59, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07,
	0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0c, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f,
	0x00, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x28,
	0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0e, 0xe2, 0xdf, 0x1f, 0x0a, 0x12, 0x08, 0xb2, 0x01, 0x05, 0x38, 0xb4, 0x01, 0x40, 0x01, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf,
	0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x88, 0x02, 0x41, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12,
	0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41,
	0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda,
	0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30,
	0x0a, 0x07, 0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x6f, 0x64,
	0x65, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x10, 0x02,
	0x22, 0x33, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x55, 0x6e, 0x73, 0x65, 0x74,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50,
	0x4f, 0x53, 0x54, 0x10, 0x02, 0x22, 0x30, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73,
	0x65, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x58, 0x4d, 0x4c, 0x10, 0x02, 0x22, 0x44, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x54, 0x54, 0x50, 0x4f,
	0x6e, 0x6c, 0x79, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x54, 0x54, 0x50, 0x53, 0x4f, 0x6e,
	0x6c, 0x79, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x22, 0x33, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x02, 0x22, 0x89, 0x0c, 0x0a, 0x09, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2a, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x64, 0x73, 0x61, 0x2d, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13,
	0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64,
	0x73, 0x67, 0x2d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02,
	0x04, 0x64, 0x73, 0x63, 0x2d, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14,
	0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00,
	0x98, 0x02, 0x40, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0x80, 0x02, 0x00, 0x98, 0x02, 0xc8, 0x01,
	0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x42, 0x0a, 0x08, 0x61, 0x70, 0x69,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x70,
	0x69, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04,
	0x30, 0x00, 0x58, 0x01, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a,
	0x0f, 0x61, 0x70, 0x69, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01,
	0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0e, 0x61, 0x70, 0x69, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30,
	0x00, 0x58, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x54,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41,
	0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01,
	0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x51, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09,
	0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0c, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2,
	0xdf, 0x1f, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x28, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0e, 0xe2, 0xdf, 0x1f, 0x0a, 0x12, 0x08, 0xb2, 0x01, 0x05, 0x38, 0xb4, 0x01, 0x40,
	0x01, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x38, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca,
	0x02, 0x04, 0x73, 0x6f, 0x6d, 0x2d, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09,
	0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xe2, 0xdf, 0x1f, 0x0a, 0x12, 0x08, 0xc2, 0x01, 0x05, 0x98,
	0x02, 0xa0, 0x9c, 0x01, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x88, 0x02,
	0x41, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xe2,
	0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x30,
	0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00,
	0x58, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x04, 0xe2, 0xdf, 0x1f,
	0x00, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x48, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x30, 0x0a, 0x07, 0x41, 0x70,
	0x69, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x55, 0x6e, 0x73,
	0x65, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x10, 0x02, 0x22, 0x33, 0x0a, 0x0d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0f, 0x0a,
	0x0b, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10,
	0x02, 0x22, 0x30, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x4d,
	0x4c, 0x10, 0x02, 0x22, 0x44, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x54, 0x54, 0x50, 0x4f, 0x6e, 0x6c, 0x79, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x54, 0x54, 0x50, 0x53, 0x4f, 0x6e, 0x6c, 0x79, 0x10, 0x02,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x22, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73,
	0x65, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x22, 0x61,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3a, 0x06, 0xca, 0xb2, 0x04, 0x02, 0x0a,
	0x00, 0x22, 0x9d, 0x06, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f,
	0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x0d,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02,
	0x81, 0x02, 0x52, 0x0c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x25, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0a, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30,
	0x00, 0x58, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a,
	0x11, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07,
	0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x10, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2,
	0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x0d, 0xe2, 0xdf,
	0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x5f, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0xe2,
	0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7b, 0x0a, 0x11, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c,
	0x69, 0x6b, 0x65, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x10, 0x06,
	0x12, 0x06, 0x0a, 0x02, 0x49, 0x6e, 0x10, 0x07, 0x22, 0x4f, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x0a,
	0x0d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x64, 0x10, 0x04, 0x3a, 0x06, 0xca, 0xb2, 0x04, 0x02, 0x0a,
	0x00, 0x22, 0x65, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x3a, 0x06, 0xca, 0xb2, 0x04, 0x02, 0x0a, 0x00, 0x22, 0x90, 0x04, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02,
	0x00, 0x98, 0x02, 0x40, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2,
	0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f,
	0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0c, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04,
	0x30, 0x00, 0x58, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a,
	0x0a, 0x11, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x10, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xe2,
	0xdf, 0x1f, 0x05, 0x12, 0x03, 0xb2, 0x01, 0x00, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x12, 0x4e, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07,
	0x12, 0x05, 0xda, 0x01, 0x02, 0x58, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x22, 0x2f, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x73, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x65, 0x73,
	0x63, 0x10, 0x02, 0x3a, 0x06, 0xca, 0xb2, 0x04, 0x02, 0x0a, 0x00, 0x22, 0xf0, 0x0b, 0x0a, 0x0a,
	0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x0a, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xe2, 0xdf, 0x1f, 0x08, 0x12, 0x06, 0xc2, 0x01, 0x03, 0xf0, 0x01, 0x10, 0x52, 0x09, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12,
	0x07, 0xda, 0x01, 0x04, 0x30, 0x01, 0x58, 0x01, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2,
	0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x61, 0x2d, 0x52, 0x05, 0x61, 0x70,
	0x69, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a,
	0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x67, 0x2d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2,
	0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x64, 0x73, 0x63, 0x2d, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12,
	0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12,
	0x09, 0xc2, 0x01, 0x06, 0x80, 0x02, 0x00, 0x98, 0x02, 0x40, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07,
	0x80, 0x02, 0x00, 0x98, 0x02, 0xc8, 0x01, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x43, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0xe2,
	0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x07, 0x61, 0x70,
	0x69, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xc2, 0x01, 0x04, 0x98, 0x02, 0x81, 0x02, 0x52, 0x0e, 0x61,
	0x70, 0x69, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x42, 0x0d, 0xe2,
	0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x55, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x52,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70,
	0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04,
	0x30, 0x00, 0x58, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x27, 0x0a, 0x0c, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0b,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xe2, 0xdf,
	0x1f, 0x0a, 0x12, 0x08, 0xb2, 0x01, 0x05, 0x38, 0xb4, 0x01, 0x40, 0x01, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x38, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe2, 0xdf,
	0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04, 0x73, 0x6f, 0x6d,
	0x2d, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xdf, 0x1f, 0x0b, 0x12, 0x09, 0xc2, 0x01, 0x06, 0x80, 0x02,
	0x00, 0x98, 0x02, 0x40, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0e, 0xe2, 0xdf, 0x1f, 0x0a, 0x12, 0x08, 0xc2, 0x01, 0x05, 0x98, 0x02, 0xa0, 0x9c, 0x01, 0x52,
	0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05,
	0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x30, 0x00, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x48, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x37, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x41, 0x62, 0x6f, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x02, 0x22,
	0x30, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x6f,
	0x64, 0x65, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x10,
	0x02, 0x22, 0x33, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x4f, 0x53, 0x54, 0x10, 0x02, 0x22, 0x30, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e,
	0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x58, 0x4d, 0x4c, 0x10, 0x02, 0x22, 0x44, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x54, 0x54, 0x50,
	0x4f, 0x6e, 0x6c, 0x79, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x54, 0x54, 0x50, 0x53, 0x4f,
	0x6e, 0x6c, 0x79, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x22, 0x3f,
	0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x2a,
	0x50, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x49, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x10,
	0x04, 0x42, 0x6d, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6f, 0x6d, 0x6e,
	0x69, 0x73, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x12, 0x50, 0x42, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x00, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f,
	0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78,
	0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_model_dataservice_proto_rawDescOnce sync.Once
	file_proto_types_model_dataservice_proto_rawDescData = file_proto_types_model_dataservice_proto_rawDesc
)

func file_proto_types_model_dataservice_proto_rawDescGZIP() []byte {
	file_proto_types_model_dataservice_proto_rawDescOnce.Do(func() {
		file_proto_types_model_dataservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_model_dataservice_proto_rawDescData)
	})
	return file_proto_types_model_dataservice_proto_rawDescData
}

var file_proto_types_model_dataservice_proto_enumTypes = make([]protoimpl.EnumInfo, 22)
var file_proto_types_model_dataservice_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_types_model_dataservice_proto_goTypes = []interface{}{
	(ParameterDataType)(0),                  // 0: model.ParameterDataType
	(DataServiceCluster_Status)(0),          // 1: model.DataServiceCluster.Status
	(DataServiceCluster_ResourceSpec)(0),    // 2: model.DataServiceCluster.ResourceSpec
	(ApiGroup_Status)(0),                    // 3: model.ApiGroup.Status
	(ApiConfigProperty_ApiMode)(0),          // 4: model.ApiConfigProperty.ApiMode
	(ApiConfigProperty_RequestMethod)(0),    // 5: model.ApiConfigProperty.RequestMethod
	(ApiConfigProperty_ResponseType)(0),     // 6: model.ApiConfigProperty.ResponseType
	(ApiConfigProperty_Protocols)(0),        // 7: model.ApiConfigProperty.Protocols
	(ApiConfigProperty_Status)(0),           // 8: model.ApiConfigProperty.Status
	(ApiConfig_ApiMode)(0),                  // 9: model.ApiConfig.ApiMode
	(ApiConfig_RequestMethod)(0),            // 10: model.ApiConfig.RequestMethod
	(ApiConfig_ResponseType)(0),             // 11: model.ApiConfig.ResponseType
	(ApiConfig_Protocols)(0),                // 12: model.ApiConfig.Protocols
	(ApiConfig_Status)(0),                   // 13: model.ApiConfig.Status
	(RequestParameter_ParameterOperator)(0), // 14: model.RequestParameter.ParameterOperator
	(RequestParameter_ParameterPosition)(0), // 15: model.RequestParameter.ParameterPosition
	(ResponseParameter_OrderMode)(0),        // 16: model.ResponseParameter.OrderMode
	(ApiVersion_Status)(0),                  // 17: model.ApiVersion.Status
	(ApiVersion_ApiMode)(0),                 // 18: model.ApiVersion.ApiMode
	(ApiVersion_RequestMethod)(0),           // 19: model.ApiVersion.RequestMethod
	(ApiVersion_ResponseType)(0),            // 20: model.ApiVersion.ResponseType
	(ApiVersion_Protocols)(0),               // 21: model.ApiVersion.Protocols
	(*DataServiceCluster)(nil),              // 22: model.DataServiceCluster
	(*ApiGroup)(nil),                        // 23: model.ApiGroup
	(*ApiConfigProperty)(nil),               // 24: model.ApiConfigProperty
	(*ApiConfig)(nil),                       // 25: model.ApiConfig
	(*RequestParameters)(nil),               // 26: model.RequestParameters
	(*RequestParameter)(nil),                // 27: model.RequestParameter
	(*ResponseParameters)(nil),              // 28: model.ResponseParameters
	(*ResponseParameter)(nil),               // 29: model.ResponseParameter
	(*ApiVersion)(nil),                      // 30: model.ApiVersion
	(*ServiceDataSourceKind)(nil),           // 31: model.ServiceDataSourceKind
}
var file_proto_types_model_dataservice_proto_depIdxs = []int32{
	2,  // 0: model.DataServiceCluster.resource_spec:type_name -> model.DataServiceCluster.ResourceSpec
	1,  // 1: model.DataServiceCluster.status:type_name -> model.DataServiceCluster.Status
	3,  // 2: model.ApiGroup.status:type_name -> model.ApiGroup.Status
	4,  // 3: model.ApiConfigProperty.api_mode:type_name -> model.ApiConfigProperty.ApiMode
	7,  // 4: model.ApiConfigProperty.protocols:type_name -> model.ApiConfigProperty.Protocols
	5,  // 5: model.ApiConfigProperty.request_method:type_name -> model.ApiConfigProperty.RequestMethod
	6,  // 6: model.ApiConfigProperty.response_type:type_name -> model.ApiConfigProperty.ResponseType
	8,  // 7: model.ApiConfigProperty.status:type_name -> model.ApiConfigProperty.Status
	9,  // 8: model.ApiConfig.api_mode:type_name -> model.ApiConfig.ApiMode
	12, // 9: model.ApiConfig.protocols:type_name -> model.ApiConfig.Protocols
	10, // 10: model.ApiConfig.request_method:type_name -> model.ApiConfig.RequestMethod
	11, // 11: model.ApiConfig.response_type:type_name -> model.ApiConfig.ResponseType
	13, // 12: model.ApiConfig.status:type_name -> model.ApiConfig.Status
	26, // 13: model.ApiConfig.request_params:type_name -> model.RequestParameters
	28, // 14: model.ApiConfig.response_params:type_name -> model.ResponseParameters
	27, // 15: model.RequestParameters.request_params:type_name -> model.RequestParameter
	0,  // 16: model.RequestParameter.data_type:type_name -> model.ParameterDataType
	14, // 17: model.RequestParameter.param_operator:type_name -> model.RequestParameter.ParameterOperator
	15, // 18: model.RequestParameter.param_position:type_name -> model.RequestParameter.ParameterPosition
	29, // 19: model.ResponseParameters.response_params:type_name -> model.ResponseParameter
	0,  // 20: model.ResponseParameter.data_type:type_name -> model.ParameterDataType
	16, // 21: model.ResponseParameter.order_mode:type_name -> model.ResponseParameter.OrderMode
	17, // 22: model.ApiVersion.publish_status:type_name -> model.ApiVersion.Status
	18, // 23: model.ApiVersion.api_mode:type_name -> model.ApiVersion.ApiMode
	21, // 24: model.ApiVersion.protocols:type_name -> model.ApiVersion.Protocols
	19, // 25: model.ApiVersion.request_method:type_name -> model.ApiVersion.RequestMethod
	20, // 26: model.ApiVersion.response_type:type_name -> model.ApiVersion.ResponseType
	26, // 27: model.ApiVersion.request_params:type_name -> model.RequestParameters
	28, // 28: model.ApiVersion.response_params:type_name -> model.ResponseParameters
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_proto_types_model_dataservice_proto_init() }
func file_proto_types_model_dataservice_proto_init() {
	if File_proto_types_model_dataservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_model_dataservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataServiceCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_dataservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_dataservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiConfigProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_dataservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_dataservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_dataservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_dataservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_dataservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_dataservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_dataservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceDataSourceKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_model_dataservice_proto_rawDesc,
			NumEnums:      22,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_model_dataservice_proto_goTypes,
		DependencyIndexes: file_proto_types_model_dataservice_proto_depIdxs,
		EnumInfos:         file_proto_types_model_dataservice_proto_enumTypes,
		MessageInfos:      file_proto_types_model_dataservice_proto_msgTypes,
	}.Build()
	File_proto_types_model_dataservice_proto = out.File
	file_proto_types_model_dataservice_proto_rawDesc = nil
	file_proto_types_model_dataservice_proto_goTypes = nil
	file_proto_types_model_dataservice_proto_depIdxs = nil
}
