// Code generated by protoc-gen-govalidator. DO NOT EDIT.
// versions:
// 		protoc-gen-govalidator 0.0.1
// source: proto/types/model/monitor.proto

package pbmodel

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protovalidator "github.com/yu31/protoc-plugin/xgo/pkg/protovalidator"
	strings "strings"
	utf8 "unicode/utf8"
)

func (this *MonitorRule) _xxx_xxx_Validator_Validate_space_id() error {
	if !(len(this.SpaceId) == 20) {
		return protovalidator.FieldError1("MonitorRule", "the byte length of field 'space_id' must be equal to '20'", protovalidator.StringByteLenToString(this.SpaceId))
	}
	if !(strings.HasPrefix(this.SpaceId, "wks-")) {
		return protovalidator.FieldError1("MonitorRule", "the value of field 'space_id' must start with string 'wks-'", this.SpaceId)
	}
	return nil
}

func (this *MonitorRule) _xxx_xxx_Validator_Validate_id() error {
	if !(len(this.Id) == 20) {
		return protovalidator.FieldError1("MonitorRule", "the byte length of field 'id' must be equal to '20'", protovalidator.StringByteLenToString(this.Id))
	}
	return nil
}

func (this *MonitorRule) _xxx_xxx_Validator_Validate_name() error {
	if !(len(this.Name) >= 2) {
		return protovalidator.FieldError1("MonitorRule", "the byte length of field 'name' must be greater than or equal to '2'", protovalidator.StringByteLenToString(this.Name))
	}
	if !(len(this.Name) <= 128) {
		return protovalidator.FieldError1("MonitorRule", "the byte length of field 'name' must be less than or equal to '128'", protovalidator.StringByteLenToString(this.Name))
	}
	return nil
}

var _xxx_xxx_Validator_MonitorRule_InEnums_Status = map[MonitorRule_Status]bool{0: true, 1: true, 2: true, 3: true}

func (this *MonitorRule) _xxx_xxx_Validator_Validate_status() error {
	if !(this.Status > 0) {
		return protovalidator.FieldError1("MonitorRule", "the value of field 'status' must be greater than '0'", protovalidator.Int32ToString(int32(this.Status)))
	}
	if !(_xxx_xxx_Validator_MonitorRule_InEnums_Status[this.Status]) {
		return protovalidator.FieldError1("MonitorRule", "the value of field 'status' must in enums of '[0 1 2 3]'", protovalidator.Int32ToString(int32(this.Status)))
	}
	return nil
}

func (this *MonitorRule) _xxx_xxx_Validator_Validate_unit() error {
	if !(this.Unit > 0) {
		return protovalidator.FieldError1("MonitorRule", "the value of field 'unit' must be greater than '0'", protovalidator.Int32ToString(this.Unit))
	}
	if !(this.Unit <= 2) {
		return protovalidator.FieldError1("MonitorRule", "the value of field 'unit' must be less than or equal to '2'", protovalidator.Int32ToString(this.Unit))
	}
	return nil
}

func (this *MonitorRule) _xxx_xxx_Validator_Validate_text() error {
	if !(utf8.RuneCountInString(this.Text) >= 1) {
		return protovalidator.FieldError1("MonitorRule", "the character length of field 'text' must be greater than or equal to '1'", protovalidator.StringCharsetLenToString(this.Text))
	}
	if !(utf8.RuneCountInString(this.Text) <= 1024) {
		return protovalidator.FieldError1("MonitorRule", "the character length of field 'text' must be less than or equal to '1024'", protovalidator.StringCharsetLenToString(this.Text))
	}
	return nil
}

// Set default value for message model.MonitorRule
func (this *MonitorRule) Validate() error {
	if this == nil {
		return nil
	}
	if err := this._xxx_xxx_Validator_Validate_space_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_id(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_name(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_status(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_unit(); err != nil {
		return err
	}
	if err := this._xxx_xxx_Validator_Validate_text(); err != nil {
		return err
	}
	return nil
}
