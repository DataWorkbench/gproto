// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/model/monitor.proto

package pbmodel

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbvalidator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonitorRule_Status int32

const (
	MonitorRule_StatusUnset MonitorRule_Status = 0
	MonitorRule_Deleted     MonitorRule_Status = 1
	MonitorRule_Enabled     MonitorRule_Status = 2
	MonitorRule_Disabled    MonitorRule_Status = 3
)

// Enum value maps for MonitorRule_Status.
var (
	MonitorRule_Status_name = map[int32]string{
		0: "StatusUnset",
		1: "Deleted",
		2: "Enabled",
		3: "Disabled",
	}
	MonitorRule_Status_value = map[string]int32{
		"StatusUnset": 0,
		"Deleted":     1,
		"Enabled":     2,
		"Disabled":    3,
	}
)

func (x MonitorRule_Status) Enum() *MonitorRule_Status {
	p := new(MonitorRule_Status)
	*p = x
	return p
}

func (x MonitorRule_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MonitorRule_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_monitor_proto_enumTypes[0].Descriptor()
}

func (MonitorRule_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_monitor_proto_enumTypes[0]
}

func (x MonitorRule_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MonitorRule_Status.Descriptor instead.
func (MonitorRule_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_monitor_proto_rawDescGZIP(), []int{0, 0}
}

// The monitor rule info
type MonitorRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Workspace ID it belongs to.
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id" gorm:"column:space_id;"`
	// Rule ID, unique within a region.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id" gorm:"column:id;primarykey;"`
	// Rule Name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" gorm:"column:name;"`
	// Rule status, 1 => "Deleted", 2 => "enabled", 3 => "disabled".
	Status MonitorRule_Status `protobuf:"varint,4,opt,name=status,proto3,enum=model.MonitorRule_Status" json:"status" gorm:"column:status;"`
	// The object unit, 1 => "workspace" 2 => "job'
	// FIXME: use enum
	Unit int32 `protobuf:"varint,5,opt,name=unit,proto3" json:"unit" gorm:"column:unit;"`
	// The object text.
	Text string `protobuf:"bytes,6,opt,name=text,proto3" json:"text" gorm:"column:text;"`
	// The trigger conditions. 3 => "retrying" 6 => "timeout"  7 => "succeed", 8 => "failed",
	// FIXME: use enum
	Trigger int32 `protobuf:"varint,7,opt,name=trigger,proto3" json:"trigger" gorm:"column:trigger;"`
	// The alarm times. 1 ~ 99
	AlarmTimes int32 `protobuf:"varint,8,opt,name=alarm_times,json=alarmTimes,proto3" json:"alarm_times" gorm:"column:alarm_times;"`
	// The alarm interval. 1 ~ 30
	AlarmInterval int32 `protobuf:"varint,9,opt,name=alarm_interval,json=alarmInterval,proto3" json:"alarm_interval" gorm:"column:alarm_interval;"`
	// The alarm type. "sms, email"
	AlarmType string `protobuf:"bytes,10,opt,name=alarm_type,json=alarmType,proto3" json:"alarm_type" gorm:"column:alarm_type;"`
	// The free time. "00:01,03:00".
	FreeTime string `protobuf:"bytes,11,opt,name=free_time,json=freeTime,proto3" json:"free_time" gorm:"column:free_time;"`
	// The alarm receiver. "usr-111111,usr-22222".
	Receiver string `protobuf:"bytes,12,opt,name=receiver,proto3" json:"receiver" gorm:"column:receiver;"`
}

func (x *MonitorRule) Reset() {
	*x = MonitorRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_monitor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorRule) ProtoMessage() {}

func (x *MonitorRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_monitor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorRule.ProtoReflect.Descriptor instead.
func (*MonitorRule) Descriptor() ([]byte, []int) {
	return file_proto_types_model_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *MonitorRule) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *MonitorRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MonitorRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MonitorRule) GetStatus() MonitorRule_Status {
	if x != nil {
		return x.Status
	}
	return MonitorRule_StatusUnset
}

func (x *MonitorRule) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *MonitorRule) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MonitorRule) GetTrigger() int32 {
	if x != nil {
		return x.Trigger
	}
	return 0
}

func (x *MonitorRule) GetAlarmTimes() int32 {
	if x != nil {
		return x.AlarmTimes
	}
	return 0
}

func (x *MonitorRule) GetAlarmInterval() int32 {
	if x != nil {
		return x.AlarmInterval
	}
	return 0
}

func (x *MonitorRule) GetAlarmType() string {
	if x != nil {
		return x.AlarmType
	}
	return ""
}

func (x *MonitorRule) GetFreeTime() string {
	if x != nil {
		return x.FreeTime
	}
	return ""
}

func (x *MonitorRule) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

var File_proto_types_model_monitor_proto protoreflect.FileDescriptor

var file_proto_types_model_monitor_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x04,
	0x0a, 0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0xe2, 0xdf, 0x1f, 0x0f, 0x12, 0x0d, 0xc2, 0x01, 0x0a, 0xf0, 0x01, 0x14, 0xca, 0x02, 0x04,
	0x77, 0x6b, 0x73, 0x2d, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xdf, 0x1f, 0x08, 0x12,
	0x06, 0xc2, 0x01, 0x03, 0xf0, 0x01, 0x14, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12,
	0x0a, 0xc2, 0x01, 0x07, 0x90, 0x02, 0x02, 0x98, 0x02, 0x80, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0xe2, 0xdf,
	0x1f, 0x09, 0x12, 0x07, 0xda, 0x01, 0x04, 0x30, 0x00, 0x58, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x12, 0x07, 0xb2, 0x01, 0x04, 0x30, 0x00, 0x38, 0x02,
	0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe2, 0xdf, 0x1f, 0x0c, 0x12, 0x0a, 0xc2, 0x01, 0x07, 0xc0,
	0x01, 0x01, 0xc8, 0x01, 0x80, 0x08, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x07,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x04, 0xe2,
	0xdf, 0x1f, 0x00, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0b,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x04, 0xe2, 0xdf, 0x1f,
	0x00, 0x52, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x23, 0x0a, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00, 0x52, 0x08,
	0x66, 0x72, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0xdf, 0x1f, 0x00,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e,
	0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x42, 0x69, 0x0a,
	0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x42, 0x0e, 0x50, 0x42, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x50, 0x00, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f,
	0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x70, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_model_monitor_proto_rawDescOnce sync.Once
	file_proto_types_model_monitor_proto_rawDescData = file_proto_types_model_monitor_proto_rawDesc
)

func file_proto_types_model_monitor_proto_rawDescGZIP() []byte {
	file_proto_types_model_monitor_proto_rawDescOnce.Do(func() {
		file_proto_types_model_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_model_monitor_proto_rawDescData)
	})
	return file_proto_types_model_monitor_proto_rawDescData
}

var file_proto_types_model_monitor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_types_model_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_types_model_monitor_proto_goTypes = []interface{}{
	(MonitorRule_Status)(0), // 0: model.MonitorRule.Status
	(*MonitorRule)(nil),     // 1: model.MonitorRule
}
var file_proto_types_model_monitor_proto_depIdxs = []int32{
	0, // 0: model.MonitorRule.status:type_name -> model.MonitorRule.Status
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_types_model_monitor_proto_init() }
func file_proto_types_model_monitor_proto_init() {
	if File_proto_types_model_monitor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_model_monitor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_model_monitor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_model_monitor_proto_goTypes,
		DependencyIndexes: file_proto_types_model_monitor_proto_depIdxs,
		EnumInfos:         file_proto_types_model_monitor_proto_enumTypes,
		MessageInfos:      file_proto_types_model_monitor_proto_msgTypes,
	}.Build()
	File_proto_types_model_monitor_proto = out.File
	file_proto_types_model_monitor_proto_rawDesc = nil
	file_proto_types_model_monitor_proto_goTypes = nil
	file_proto_types_model_monitor_proto_depIdxs = nil
}
