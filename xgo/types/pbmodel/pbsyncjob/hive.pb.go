// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/model/syncjob/hive.proto

package pbsyncjob

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbgosql"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HiveColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// column name
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	// column type
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
}

func (x *HiveColumn) Reset() {
	*x = HiveColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_syncjob_hive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiveColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiveColumn) ProtoMessage() {}

func (x *HiveColumn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_syncjob_hive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiveColumn.ProtoReflect.Descriptor instead.
func (*HiveColumn) Descriptor() ([]byte, []int) {
	return file_proto_types_model_syncjob_hive_proto_rawDescGZIP(), []int{0}
}

func (x *HiveColumn) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HiveColumn) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type HiveTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// column
	Column []*HiveColumn `protobuf:"bytes,1,rep,name=column,proto3" json:"column"`
	// table
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table"`
	// use partition
	UsePartition bool `protobuf:"varint,3,opt,name=use_partition,json=usePartition,proto3" json:"use_partition"`
	// partition
	Partition string `protobuf:"bytes,4,opt,name=partition,proto3" json:"partition"`
	// partition_type
	PartitionType BaseEnum_PartitionType `protobuf:"varint,5,opt,name=partition_type,json=partitionType,proto3,enum=model.BaseEnum_PartitionType" json:"partition_type"`
	// tables column
	TablesColumn string `protobuf:"bytes,6,opt,name=tables_column,json=tablesColumn,proto3" json:"tables_column"`
	// write mode
	WriteMode BaseEnum_WriteMode `protobuf:"varint,7,opt,name=write_mode,json=writeMode,proto3,enum=model.BaseEnum_WriteMode" json:"write_mode"`
	// file type
	FileType BaseEnum_FileType `protobuf:"varint,8,opt,name=file_type,json=fileType,proto3,enum=model.BaseEnum_FileType" json:"file_type"`
	// compress type
	Compress BaseEnum_CompressType `protobuf:"varint,9,opt,name=compress,proto3,enum=model.BaseEnum_CompressType" json:"compress"`
	// field_delimiter
	FieldDelimiter string `protobuf:"bytes,10,opt,name=field_delimiter,json=fieldDelimiter,proto3" json:"field_delimiter"`
	// encoding
	Encoding BaseEnum_Encoding `protobuf:"varint,11,opt,name=encoding,proto3,enum=model.BaseEnum_Encoding" json:"encoding"`
}

func (x *HiveTarget) Reset() {
	*x = HiveTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_syncjob_hive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiveTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiveTarget) ProtoMessage() {}

func (x *HiveTarget) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_syncjob_hive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiveTarget.ProtoReflect.Descriptor instead.
func (*HiveTarget) Descriptor() ([]byte, []int) {
	return file_proto_types_model_syncjob_hive_proto_rawDescGZIP(), []int{1}
}

func (x *HiveTarget) GetColumn() []*HiveColumn {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *HiveTarget) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *HiveTarget) GetUsePartition() bool {
	if x != nil {
		return x.UsePartition
	}
	return false
}

func (x *HiveTarget) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *HiveTarget) GetPartitionType() BaseEnum_PartitionType {
	if x != nil {
		return x.PartitionType
	}
	return BaseEnum_PartitionTypeUnset
}

func (x *HiveTarget) GetTablesColumn() string {
	if x != nil {
		return x.TablesColumn
	}
	return ""
}

func (x *HiveTarget) GetWriteMode() BaseEnum_WriteMode {
	if x != nil {
		return x.WriteMode
	}
	return BaseEnum_WriteModeUnset
}

func (x *HiveTarget) GetFileType() BaseEnum_FileType {
	if x != nil {
		return x.FileType
	}
	return BaseEnum_FileTypeUnset
}

func (x *HiveTarget) GetCompress() BaseEnum_CompressType {
	if x != nil {
		return x.Compress
	}
	return BaseEnum_CompressTypeUnset
}

func (x *HiveTarget) GetFieldDelimiter() string {
	if x != nil {
		return x.FieldDelimiter
	}
	return ""
}

func (x *HiveTarget) GetEncoding() BaseEnum_Encoding {
	if x != nil {
		return x.Encoding
	}
	return BaseEnum_EncodingUnset
}

var File_proto_types_model_syncjob_hive_proto protoreflect.FileDescriptor

var file_proto_types_model_syncjob_hive_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x6a, 0x6f, 0x62, 0x2f, 0x68, 0x69, 0x76, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x28, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2f, 0x73, 0x79, 0x6e, 0x63, 0x6a, 0x6f, 0x62, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x65, 0x6e, 0x75,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x33, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x73,
	0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x0a, 0x48, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x06, 0xca, 0xb2,
	0x04, 0x02, 0x0a, 0x00, 0x22, 0x8d, 0x04, 0x0a, 0x0a, 0x48, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x38, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x06, 0xca, 0xb2,
	0x04, 0x02, 0x0a, 0x00, 0x42, 0x75, 0x0a, 0x2c, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x62, 0x73, 0x79, 0x6e,
	0x63, 0x6a, 0x6f, 0x62, 0x42, 0x06, 0x50, 0x42, 0x48, 0x69, 0x76, 0x65, 0x50, 0x00, 0x5a, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x57,
	0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x78, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x70, 0x62, 0x73, 0x79, 0x6e, 0x63, 0x6a, 0x6f, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_types_model_syncjob_hive_proto_rawDescOnce sync.Once
	file_proto_types_model_syncjob_hive_proto_rawDescData = file_proto_types_model_syncjob_hive_proto_rawDesc
)

func file_proto_types_model_syncjob_hive_proto_rawDescGZIP() []byte {
	file_proto_types_model_syncjob_hive_proto_rawDescOnce.Do(func() {
		file_proto_types_model_syncjob_hive_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_model_syncjob_hive_proto_rawDescData)
	})
	return file_proto_types_model_syncjob_hive_proto_rawDescData
}

var file_proto_types_model_syncjob_hive_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_types_model_syncjob_hive_proto_goTypes = []interface{}{
	(*HiveColumn)(nil),          // 0: model.HiveColumn
	(*HiveTarget)(nil),          // 1: model.HiveTarget
	(BaseEnum_PartitionType)(0), // 2: model.BaseEnum.PartitionType
	(BaseEnum_WriteMode)(0),     // 3: model.BaseEnum.WriteMode
	(BaseEnum_FileType)(0),      // 4: model.BaseEnum.FileType
	(BaseEnum_CompressType)(0),  // 5: model.BaseEnum.CompressType
	(BaseEnum_Encoding)(0),      // 6: model.BaseEnum.Encoding
}
var file_proto_types_model_syncjob_hive_proto_depIdxs = []int32{
	0, // 0: model.HiveTarget.column:type_name -> model.HiveColumn
	2, // 1: model.HiveTarget.partition_type:type_name -> model.BaseEnum.PartitionType
	3, // 2: model.HiveTarget.write_mode:type_name -> model.BaseEnum.WriteMode
	4, // 3: model.HiveTarget.file_type:type_name -> model.BaseEnum.FileType
	5, // 4: model.HiveTarget.compress:type_name -> model.BaseEnum.CompressType
	6, // 5: model.HiveTarget.encoding:type_name -> model.BaseEnum.Encoding
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_types_model_syncjob_hive_proto_init() }
func file_proto_types_model_syncjob_hive_proto_init() {
	if File_proto_types_model_syncjob_hive_proto != nil {
		return
	}
	file_proto_types_model_syncjob_baseenum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_types_model_syncjob_hive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiveColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_syncjob_hive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiveTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_model_syncjob_hive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_model_syncjob_hive_proto_goTypes,
		DependencyIndexes: file_proto_types_model_syncjob_hive_proto_depIdxs,
		MessageInfos:      file_proto_types_model_syncjob_hive_proto_msgTypes,
	}.Build()
	File_proto_types_model_syncjob_hive_proto = out.File
	file_proto_types_model_syncjob_hive_proto_rawDesc = nil
	file_proto_types_model_syncjob_hive_proto_goTypes = nil
	file_proto_types_model_syncjob_hive_proto_depIdxs = nil
}
