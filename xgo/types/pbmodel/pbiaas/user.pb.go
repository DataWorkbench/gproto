// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: proto/types/model/iaas/user.proto

package pbiaas

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User_Status int32

const (
	User__StatusUnset User_Status = 0
	User_active       User_Status = 1
)

// Enum value maps for User_Status.
var (
	User_Status_name = map[int32]string{
		0: "_StatusUnset",
		1: "active",
	}
	User_Status_value = map[string]int32{
		"_StatusUnset": 0,
		"active":       1,
	}
)

func (x User_Status) Enum() *User_Status {
	p := new(User_Status)
	*p = x
	return p
}

func (x User_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_iaas_user_proto_enumTypes[0].Descriptor()
}

func (User_Status) Type() protoreflect.EnumType {
	return &file_proto_types_model_iaas_user_proto_enumTypes[0]
}

func (x User_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_Status.Descriptor instead.
func (User_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_iaas_user_proto_rawDescGZIP(), []int{0, 0}
}

type NotificationList_Item_NotificationItemType int32

const (
	NotificationList_Item__NotificationItemTypeUnset NotificationList_Item_NotificationItemType = 0
	NotificationList_Item_email                      NotificationList_Item_NotificationItemType = 1
	NotificationList_Item_phone                      NotificationList_Item_NotificationItemType = 2
	NotificationList_Item_webhook                    NotificationList_Item_NotificationItemType = 3
)

// Enum value maps for NotificationList_Item_NotificationItemType.
var (
	NotificationList_Item_NotificationItemType_name = map[int32]string{
		0: "_NotificationItemTypeUnset",
		1: "email",
		2: "phone",
		3: "webhook",
	}
	NotificationList_Item_NotificationItemType_value = map[string]int32{
		"_NotificationItemTypeUnset": 0,
		"email":                      1,
		"phone":                      2,
		"webhook":                    3,
	}
)

func (x NotificationList_Item_NotificationItemType) Enum() *NotificationList_Item_NotificationItemType {
	p := new(NotificationList_Item_NotificationItemType)
	*p = x
	return p
}

func (x NotificationList_Item_NotificationItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationList_Item_NotificationItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_model_iaas_user_proto_enumTypes[1].Descriptor()
}

func (NotificationList_Item_NotificationItemType) Type() protoreflect.EnumType {
	return &file_proto_types_model_iaas_user_proto_enumTypes[1]
}

func (x NotificationList_Item_NotificationItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationList_Item_NotificationItemType.Descriptor instead.
func (NotificationList_Item_NotificationItemType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_model_iaas_user_proto_rawDescGZIP(), []int{2, 0, 0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of user. Both in Dataomnis and IaaS.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id"`
	// The name of User. Both in Dataomnis and IaaS.
	// Cannot be modified in Dataomnis.
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name"`
	// The email. Both in Dataomnis and IaaS.
	// Cannot be modified in IaaS.
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email"`
	// Language "zh-cn" | "en-us"
	Lang          string   `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang"`
	RootUserId    string   `protobuf:"bytes,5,opt,name=root_user_id,json=rootUserId,proto3" json:"root_user_id"`
	Role          string   `protobuf:"bytes,6,opt,name=role,proto3" json:"role"`
	Privilege     int32    `protobuf:"varint,7,opt,name=privilege,proto3" json:"privilege"`
	Status        string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status"`
	Zones         []string `protobuf:"bytes,9,rep,name=zones,proto3" json:"zones"`
	Regions       []string `protobuf:"bytes,10,rep,name=regions,proto3" json:"regions"`
	NotifyEmail   string   `protobuf:"bytes,11,opt,name=notify_email,json=notifyEmail,proto3" json:"notify_email"`
	VerifyType    string   `protobuf:"bytes,12,opt,name=verify_type,json=verifyType,proto3" json:"verify_type"`
	PaidMode      string   `protobuf:"bytes,13,opt,name=paid_mode,json=paidMode,proto3" json:"paid_mode"`
	GravatarEmail string   `protobuf:"bytes,14,opt,name=gravatar_email,json=gravatarEmail,proto3" json:"gravatar_email"`
	PersonalName  string   `protobuf:"bytes,15,opt,name=personal_name,json=personalName,proto3" json:"personal_name"`
	CompanyName   string   `protobuf:"bytes,16,opt,name=company_name,json=companyName,proto3" json:"company_name"`
	CompanyPhone  string   `protobuf:"bytes,17,opt,name=company_phone,json=companyPhone,proto3" json:"company_phone"`
	CompanyCode   string   `protobuf:"bytes,18,opt,name=company_code,json=companyCode,proto3" json:"company_code"`
	Phone         string   `protobuf:"bytes,19,opt,name=phone,proto3" json:"phone"`
	ConsoleId     string   `protobuf:"bytes,20,opt,name=console_id,json=consoleId,proto3" json:"console_id"`
	Gender        string   `protobuf:"bytes,21,opt,name=gender,proto3" json:"gender"`
	Remarks       string   `protobuf:"bytes,22,opt,name=remarks,proto3" json:"remarks"`
	MktSource     string   `protobuf:"bytes,23,opt,name=mkt_source,json=mktSource,proto3" json:"mkt_source"`
	CreateTime    string   `protobuf:"bytes,24,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	StatusTime    string   `protobuf:"bytes,25,opt,name=status_time,json=statusTime,proto3" json:"status_time"`
	// 0: root user, 1: sub user.
	UserType int32 `protobuf:"varint,26,opt,name=user_type,json=userType,proto3" json:"user_type"`
	// Options Values: "CNY" or "USD"
	Currency string `protobuf:"bytes,27,opt,name=currency,proto3" json:"currency"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_iaas_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_iaas_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_types_model_iaas_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *User) GetRootUserId() string {
	if x != nil {
		return x.RootUserId
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *User) GetPrivilege() int32 {
	if x != nil {
		return x.Privilege
	}
	return 0
}

func (x *User) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *User) GetZones() []string {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *User) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

func (x *User) GetNotifyEmail() string {
	if x != nil {
		return x.NotifyEmail
	}
	return ""
}

func (x *User) GetVerifyType() string {
	if x != nil {
		return x.VerifyType
	}
	return ""
}

func (x *User) GetPaidMode() string {
	if x != nil {
		return x.PaidMode
	}
	return ""
}

func (x *User) GetGravatarEmail() string {
	if x != nil {
		return x.GravatarEmail
	}
	return ""
}

func (x *User) GetPersonalName() string {
	if x != nil {
		return x.PersonalName
	}
	return ""
}

func (x *User) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *User) GetCompanyPhone() string {
	if x != nil {
		return x.CompanyPhone
	}
	return ""
}

func (x *User) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetConsoleId() string {
	if x != nil {
		return x.ConsoleId
	}
	return ""
}

func (x *User) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *User) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *User) GetMktSource() string {
	if x != nil {
		return x.MktSource
	}
	return ""
}

func (x *User) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *User) GetStatusTime() string {
	if x != nil {
		return x.StatusTime
	}
	return ""
}

func (x *User) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *User) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type AccessKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id"`
	SecretAccessKey string `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key"`
	AccessKeyName   string `protobuf:"bytes,12,opt,name=access_key_name,json=accessKeyName,proto3" json:"access_key_name"`
	Owner           string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner"`
	// pitrix of self
	// Optional Values: "pitrix" or "self"
	Controller string `protobuf:"bytes,4,opt,name=controller,proto3" json:"controller"`
	RootUserId string `protobuf:"bytes,5,opt,name=root_user_id,json=rootUserId,proto3" json:"root_user_id"`
	// Optional values: "active" or "inactive"
	Status      string `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description"`
	IpWhiteList string `protobuf:"bytes,8,opt,name=ip_white_list,json=ipWhiteList,proto3" json:"ip_white_list"`
	ConsoleId   string `protobuf:"bytes,9,opt,name=console_id,json=consoleId,proto3" json:"console_id"`
	CreateTime  string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	StatusTime  string `protobuf:"bytes,11,opt,name=status_time,json=statusTime,proto3" json:"status_time"`
}

func (x *AccessKey) Reset() {
	*x = AccessKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_iaas_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKey) ProtoMessage() {}

func (x *AccessKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_iaas_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKey.ProtoReflect.Descriptor instead.
func (*AccessKey) Descriptor() ([]byte, []int) {
	return file_proto_types_model_iaas_user_proto_rawDescGZIP(), []int{1}
}

func (x *AccessKey) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AccessKey) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *AccessKey) GetAccessKeyName() string {
	if x != nil {
		return x.AccessKeyName
	}
	return ""
}

func (x *AccessKey) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *AccessKey) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *AccessKey) GetRootUserId() string {
	if x != nil {
		return x.RootUserId
	}
	return ""
}

func (x *AccessKey) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AccessKey) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AccessKey) GetIpWhiteList() string {
	if x != nil {
		return x.IpWhiteList
	}
	return ""
}

func (x *AccessKey) GetConsoleId() string {
	if x != nil {
		return x.ConsoleId
	}
	return ""
}

func (x *AccessKey) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AccessKey) GetStatusTime() string {
	if x != nil {
		return x.StatusTime
	}
	return ""
}

type NotificationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime           string                   `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	NotificationListId   string                   `protobuf:"bytes,3,opt,name=notification_list_id,json=notificationListId,proto3" json:"notification_list_id"`
	NotificationListName string                   `protobuf:"bytes,4,opt,name=notification_list_name,json=notificationListName,proto3" json:"notification_list_name"`
	Owner                string                   `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner"`
	Items                []*NotificationList_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *NotificationList) Reset() {
	*x = NotificationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_iaas_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationList) ProtoMessage() {}

func (x *NotificationList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_iaas_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationList.ProtoReflect.Descriptor instead.
func (*NotificationList) Descriptor() ([]byte, []int) {
	return file_proto_types_model_iaas_user_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationList) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *NotificationList) GetNotificationListId() string {
	if x != nil {
		return x.NotificationListId
	}
	return ""
}

func (x *NotificationList) GetNotificationListName() string {
	if x != nil {
		return x.NotificationListName
	}
	return ""
}

func (x *NotificationList) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *NotificationList) GetItems() []*NotificationList_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type NotificationList_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The content of notification item set.
	// The value is email address if notification_item_type == "email".
	// The value is phone number is notification_item_type == "phone".
	// The value is webhook address if notification_item_type == "webhook".
	Content            string `protobuf:"bytes,1,opt,name=content,proto3" json:"content"`
	CreateTime         string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	NotificationItemId string `protobuf:"bytes,3,opt,name=notification_item_id,json=notificationItemId,proto3" json:"notification_item_id"`
	// The notification type. Optional Values: email|phone|webhook
	NotificationItemType string `protobuf:"bytes,4,opt,name=notification_item_type,json=notificationItemType,proto3" json:"notification_item_type"`
	// The item whether verified. 1 for true, 0 for false.
	Verified int32 `protobuf:"varint,5,opt,name=verified,proto3" json:"verified"`
}

func (x *NotificationList_Item) Reset() {
	*x = NotificationList_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_model_iaas_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationList_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationList_Item) ProtoMessage() {}

func (x *NotificationList_Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_model_iaas_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationList_Item.ProtoReflect.Descriptor instead.
func (*NotificationList_Item) Descriptor() ([]byte, []int) {
	return file_proto_types_model_iaas_user_proto_rawDescGZIP(), []int{2, 0}
}

func (x *NotificationList_Item) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotificationList_Item) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *NotificationList_Item) GetNotificationItemId() string {
	if x != nil {
		return x.NotificationItemId
	}
	return ""
}

func (x *NotificationList_Item) GetNotificationItemType() string {
	if x != nil {
		return x.NotificationItemType
	}
	return ""
}

func (x *NotificationList_Item) GetVerified() int32 {
	if x != nil {
		return x.Verified
	}
	return 0
}

var File_proto_types_model_iaas_user_proto protoreflect.FileDescriptor

var file_proto_types_model_iaas_user_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x69, 0x61, 0x61, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x69, 0x61, 0x61, 0x73, 0x22, 0xc3, 0x06, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x7a,
	0x6f, 0x6e, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x69, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x67, 0x72, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x6b, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x6b, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x26, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x0c, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x22,
	0x9a, 0x03, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a,
	0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x70, 0x5f, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x87, 0x04, 0x0a,
	0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x69, 0x61, 0x61, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0xa0, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x59, 0x0a, 0x14, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x10, 0x03, 0x42, 0x73, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x6f, 0x6d, 0x6e, 0x69, 0x73, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x62, 0x69,
	0x61, 0x61, 0x73, 0x42, 0x0a, 0x50, 0x42, 0x49, 0x61, 0x61, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x00, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61,
	0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x67, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x62, 0x69, 0x61, 0x61, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_types_model_iaas_user_proto_rawDescOnce sync.Once
	file_proto_types_model_iaas_user_proto_rawDescData = file_proto_types_model_iaas_user_proto_rawDesc
)

func file_proto_types_model_iaas_user_proto_rawDescGZIP() []byte {
	file_proto_types_model_iaas_user_proto_rawDescOnce.Do(func() {
		file_proto_types_model_iaas_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_model_iaas_user_proto_rawDescData)
	})
	return file_proto_types_model_iaas_user_proto_rawDescData
}

var file_proto_types_model_iaas_user_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_types_model_iaas_user_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_types_model_iaas_user_proto_goTypes = []interface{}{
	(User_Status)(0), // 0: iaas.User.Status
	(NotificationList_Item_NotificationItemType)(0), // 1: iaas.NotificationList.Item.NotificationItemType
	(*User)(nil),                  // 2: iaas.User
	(*AccessKey)(nil),             // 3: iaas.AccessKey
	(*NotificationList)(nil),      // 4: iaas.NotificationList
	(*NotificationList_Item)(nil), // 5: iaas.NotificationList.Item
}
var file_proto_types_model_iaas_user_proto_depIdxs = []int32{
	5, // 0: iaas.NotificationList.items:type_name -> iaas.NotificationList.Item
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_types_model_iaas_user_proto_init() }
func file_proto_types_model_iaas_user_proto_init() {
	if File_proto_types_model_iaas_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_model_iaas_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_iaas_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_iaas_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_model_iaas_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationList_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_model_iaas_user_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_model_iaas_user_proto_goTypes,
		DependencyIndexes: file_proto_types_model_iaas_user_proto_depIdxs,
		EnumInfos:         file_proto_types_model_iaas_user_proto_enumTypes,
		MessageInfos:      file_proto_types_model_iaas_user_proto_msgTypes,
	}.Build()
	File_proto_types_model_iaas_user_proto = out.File
	file_proto_types_model_iaas_user_proto_rawDesc = nil
	file_proto_types_model_iaas_user_proto_goTypes = nil
	file_proto_types_model_iaas_user_proto_depIdxs = nil
}
